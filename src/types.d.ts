export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type FieldWrapper<T> = T;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  ISO8601Date: any;
  ISO8601DateTime: any;
  JSON: any;
};

/** Autogenerated input type of AddChildAgent */
export type AddChildAgentInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 代理額度 */
  creditLimit: Scalars['Int'];
  /** 用戶名 */
  name: Scalars['String'];
  /** 佔成 */
  niuniuShareProfitRate: Scalars['Float'];
  /** 洗碼比 */
  niuniuXimaRate: Scalars['Float'];
  /** ID */
  parentId: Scalars['ID'];
  /** 密碼 */
  password: Scalars['String'];
  /** 密碼確認 */
  passwordConfirmation: Scalars['String'];
  /** 帳號 */
  username: Scalars['String'];
};

/** Autogenerated return type of AddChildAgent */
export type AddChildAgentPayload = {
  __typename: 'AddChildAgentPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

export type AdminProfile = {
  __typename: 'AdminProfile';
  /** Auth Token */
  authToken: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 登入時間 */
  currentSignInAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 登入IP */
  currentSignInIp: Maybe<FieldWrapper<Scalars['String']>>;
  /** Email */
  email: Maybe<FieldWrapper<Scalars['String']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 上次登入時間 */
  lastSignInAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 上次登入IP */
  lastSignInIp: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 使用者名稱 */
  username: Maybe<FieldWrapper<Scalars['String']>>;
};

export type AdminUser = SourceInterface & {
  __typename: 'AdminUser';
  /** 頭貼 */
  avatar: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 登入時間 */
  currentSignInAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 登入IP */
  currentSignInIp: Maybe<FieldWrapper<Scalars['String']>>;
  /** Email */
  email: Maybe<FieldWrapper<Scalars['String']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 上次登入時間 */
  lastSignInAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 上次登入IP */
  lastSignInIp: Maybe<FieldWrapper<Scalars['String']>>;
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 角色 */
  role: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 使用者名稱 */
  username: Maybe<FieldWrapper<Scalars['String']>>;
};

export type AdminUserCollection = {
  __typename: 'AdminUserCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 房間 */
  records: Maybe<Array<FieldWrapper<AdminUser>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type Agent = SourceInterface & {
  __typename: 'Agent';
  /** 自上而下的排序名稱 */
  agentPathUsernames: Maybe<FieldWrapper<Scalars['String']>>;
  agentWinLossReport: FieldWrapper<AgentWinLossReport>;
  /** 所有上層 */
  ancestors: Maybe<Array<FieldWrapper<Agent>>>;
  /** Auth */
  authToken: Maybe<FieldWrapper<Scalars['String']>>;
  /** 可用下層帳號 */
  availableChildrenUsername: Maybe<Array<FieldWrapper<Scalars['String']>>>;
  /** 可用玩家帳號 */
  availableUserUsername: Maybe<Array<FieldWrapper<Scalars['String']>>>;
  /** 百家佔成 */
  baccaratShareProfitRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家洗碼比 */
  baccaratXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  bots: FieldWrapper<Scalars['Boolean']>;
  botsFromAncestors: FieldWrapper<Scalars['Boolean']>;
  /** 下層 */
  children: Maybe<Array<FieldWrapper<Agent>>>;
  childrenAndUsersMaxXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 下層數量 */
  childrenCount: Maybe<FieldWrapper<Scalars['Int']>>;
  childrenMaxShareProfitRate: Maybe<FieldWrapper<Scalars['Float']>>;
  childrenMaxXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 代理額度 */
  creditLimit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 剩餘代理額度 */
  creditLimitLeft: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 所有下層 */
  descendants: Maybe<Array<FieldWrapper<Agent>>>;
  /** 下線代理總數 */
  descendantsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  enableEditProfit: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 是否在介面隱藏 */
  hide: Maybe<FieldWrapper<Scalars['Boolean']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 是否為子帳號 */
  isSubAccount: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 最後登入時間 */
  lastSignInAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 最後登入IP */
  lastSignInIp: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 層數 */
  level: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 代理類型 */
  levelName: Maybe<FieldWrapper<Scalars['String']>>;
  /** 是否封鎖 */
  locked: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 用戶名 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 代理類型 */
  nextLevelName: Maybe<FieldWrapper<Scalars['String']>>;
  /** 牛牛佔成 */
  niuniuShareProfitRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛洗碼比 */
  niuniuXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 備註 */
  note: Maybe<FieldWrapper<Scalars['String']>>;
  /** 備註名 */
  noteName: Maybe<FieldWrapper<Scalars['String']>>;
  /** 上層 */
  parent: Maybe<FieldWrapper<Agent>>;
  /** 母帳號 */
  parentAccount: Maybe<FieldWrapper<Agent>>;
  /** 母帳號名稱 */
  parentAccountUsername: Maybe<FieldWrapper<Scalars['String']>>;
  showOldReport: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 登入次數 */
  signInCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 所有子帳號 */
  subAccounts: Maybe<Array<FieldWrapper<Agent>>>;
  /** 限紅組 */
  tableLimits: Maybe<Array<FieldWrapper<TableLimit>>>;
  /** tree */
  tree: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  userWinLossReports: Array<FieldWrapper<UserWinLossReport>>;
  /** 使用者名稱 */
  username: Maybe<FieldWrapper<Scalars['String']>>;
  /** 下線用戶 */
  users: Maybe<FieldWrapper<UserCollection>>;
  /** 直線玩家總數 */
  usersCount: Maybe<FieldWrapper<Scalars['Int']>>;
  usersMaxXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 破台分 */
  winLimit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 退水模式 */
  ximaWay: Maybe<FieldWrapper<Scalars['String']>>;
};


export type AgentagentWinLossReportArgs = {
  endDate: Scalars['ISO8601Date'];
  startDate: Scalars['ISO8601Date'];
};


export type AgentuserWinLossReportsArgs = {
  endDate: Scalars['ISO8601Date'];
  startDate: Scalars['ISO8601Date'];
};


export type AgentusersArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  user?: InputMaybe<Scalars['String']>;
};

export type AgentCollection = {
  __typename: 'AgentCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 代理 */
  records: Maybe<Array<FieldWrapper<Agent>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of AgentResetUser */
export type AgentResetUserInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  userId: Scalars['ID'];
};

/** Autogenerated return type of AgentResetUser */
export type AgentResetUserPayload = {
  __typename: 'AgentResetUserPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Array<FieldWrapper<ModelError>>;
  user: Maybe<FieldWrapper<User>>;
};

/** Autogenerated input type of AgentUpdateFullUser */
export type AgentUpdateFullUserInput = {
  baccaratXimaRate?: InputMaybe<Scalars['Float']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  creditBalance?: InputMaybe<Scalars['Float']>;
  hideWinPoints?: InputMaybe<Scalars['Boolean']>;
  noteName?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  passwordConfirmation?: InputMaybe<Scalars['String']>;
  tableLimitMax?: InputMaybe<Scalars['Int']>;
  tableLimitMin?: InputMaybe<Scalars['Int']>;
  userId: Scalars['ID'];
  winLimit?: InputMaybe<Scalars['Float']>;
};

/** Autogenerated return type of AgentUpdateFullUser */
export type AgentUpdateFullUserPayload = {
  __typename: 'AgentUpdateFullUserPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  user: Maybe<FieldWrapper<User>>;
};

/** Autogenerated input type of AgentUpdateUser */
export type AgentUpdateUserInput = {
  baccaratXimaRate?: InputMaybe<Scalars['Float']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  niuniuXimaRate?: InputMaybe<Scalars['Float']>;
  note?: InputMaybe<Scalars['String']>;
  noteName?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  passwordConfirmation?: InputMaybe<Scalars['String']>;
  tableLimitMax?: InputMaybe<Scalars['Int']>;
  tableLimitMin?: InputMaybe<Scalars['Int']>;
  userId: Scalars['ID'];
  username?: InputMaybe<Scalars['String']>;
  winLimit?: InputMaybe<Scalars['Int']>;
};

/** Autogenerated return type of AgentUpdateUser */
export type AgentUpdateUserPayload = {
  __typename: 'AgentUpdateUserPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  user: Maybe<FieldWrapper<User>>;
};

export type AgentWinLoss = {
  __typename: 'AgentWinLoss';
  /** 代理 */
  agent: Maybe<FieldWrapper<Agent>>;
  /** 百家投注金額 */
  baccaratBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家有效投注 */
  baccaratEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家交上線金額 */
  baccaratParentAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家交上線有效投注 */
  baccaratParentEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家佔成 */
  baccaratShareProfit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家輸贏 */
  baccaratWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家輸贏比 */
  baccaratWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 百家洗碼佣金 */
  baccaratXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 下層代理報表 */
  childrenReports: Maybe<Array<FieldWrapper<AgentWinLoss>>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 我的收益 */
  myProfit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛投注金額 */
  niuniuBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛有效投注 */
  niuniuEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛交上線金額 */
  niuniuParentAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛交上線有效投注 */
  niuniuParentEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛佔成 */
  niuniuShareProfit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛輸贏 */
  niuniuWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛輸贏比 */
  niuniuWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 牛牛洗碼佣金 */
  niuniuXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計投注金額 */
  totalBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計有效投注 */
  totalEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計交上線金額 */
  totalParentAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計交上線有效投注 */
  totalParentEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家佔成 */
  totalShareProfit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總投注人數 */
  totalUsersCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 小計輸贏 */
  totalWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計輸贏比 */
  totalWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 小計洗碼佣金 */
  totalXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 玩家輸贏報表 */
  usersReports: Maybe<Array<FieldWrapper<UserWinLoss>>>;
};

export type AgentWinLossReport = {
  __typename: 'AgentWinLossReport';
  /** 百家投注金額 */
  betAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家有效投注 */
  effectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 禮物 */
  giftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 百家交上線金額 */
  parentAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家交上線有效投注 */
  parentEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家佔成 */
  shareProfit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總金額 */
  totalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總投注人數 */
  usersCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 百家輸贏 */
  winLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家輸贏比 */
  winLossRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家洗碼佣金 */
  ximaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
};

export type Annoncement = {
  __typename: 'Annoncement';
  /** 公告內容 */
  content: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 類型 */
  targetType: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type AnnoncementCollection = {
  __typename: 'AnnoncementCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<Annoncement>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type BaccaratBetRecord = BetInterface & ReferenceRecordInterface & {
  __typename: 'BaccaratBetRecord';
  /** 押任意對子金額 */
  anyPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押任意對子派彩 */
  anyPairDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 遊戲 */
  baccaratGame: FieldWrapper<BaccaratGame>;
  /** 房間 */
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** 投注編號 */
  betNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** 押大金額 */
  bigAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押大派彩 */
  bigDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** City */
  city: Maybe<FieldWrapper<Scalars['String']>>;
  /** Country */
  country: Maybe<FieldWrapper<Scalars['String']>>;
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 派彩後餘額 */
  creditAfterWin: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 派彩後的輸贏餘額 */
  creditDiff: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 幣別 */
  currency: Maybe<FieldWrapper<Scalars['String']>>;
  /** 押莊金額 */
  dealerAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊派彩 */
  dealerDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊雙金額 */
  dealerDoubleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊雙派彩 */
  dealerDoubleDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊龍寶金額 */
  dealerDragonAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊龍寶派彩 */
  dealerDragonDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊例牌金額 */
  dealerKingAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊例牌派彩 */
  dealerKingDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊對金額 */
  dealerPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊對派彩 */
  dealerPairDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊單金額 */
  dealerSingleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊單派彩 */
  dealerSingleDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總派彩 */
  diff: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 有效投注 */
  effectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 有效投注 * 洗碼比 */
  effectiveXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 廳 */
  hall: Maybe<FieldWrapper<Hall>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** IP Address */
  ipAddress: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** Latitude */
  latitude: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Longitude */
  longitude: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押完美對子金額 */
  perfectPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押完美對子派彩 */
  perfectPairDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒金額 */
  playerAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒派彩 */
  playerDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒雙金額 */
  playerDoubleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒雙派彩 */
  playerDoubleDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒龍寶金額 */
  playerDragonAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒龍寶派彩 */
  playerDragonDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒例牌金額 */
  playerKingAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒例牌派彩 */
  playerKingDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒對金額 */
  playerPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒對派彩 */
  playerPairDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒單金額 */
  playerSingleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒單派彩 */
  playerSingleDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Region */
  region: Maybe<FieldWrapper<Scalars['String']>>;
  /** 押小金額 */
  smallAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押小派彩 */
  smallDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押幸運6金額 */
  super6Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押幸運6派彩 */
  super6DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和0金額 */
  superTie0Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和0派彩 */
  superTie0DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和1金額 */
  superTie1Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和1派彩 */
  superTie1DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和2金額 */
  superTie2Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和2派彩 */
  superTie2DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和3金額 */
  superTie3Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和3派彩 */
  superTie3DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和4金額 */
  superTie4Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和4派彩 */
  superTie4DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和5金額 */
  superTie5Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和5派彩 */
  superTie5DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和6金額 */
  superTie6Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和6派彩 */
  superTie6DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和7金額 */
  superTie7Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和7派彩 */
  superTie7DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和8金額 */
  superTie8Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和8派彩 */
  superTie8DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和9金額 */
  superTie9Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和9派彩 */
  superTie9DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Tie amount */
  tieAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Tie diff amount */
  tieDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總押注 */
  totalBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 勝點 */
  totalWinAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
  /** 輸贏 */
  winLossAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 退水 */
  winReturn: Maybe<FieldWrapper<Scalars['Float']>>;
};

export type BaccaratBetRecordCollection = {
  __typename: 'BaccaratBetRecordCollection';
  /** 總投注量 */
  betTotal: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總輸贏 */
  diffTotal: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家押注記錄 */
  records: Maybe<Array<FieldWrapper<BaccaratBetRecord>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type BaccaratGame = {
  __typename: 'BaccaratGame';
  /** 押任意對子金額 */
  anyPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押任意對子是否贏 */
  anyPairWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 該局總投注紀錄 */
  baccaratBetRecords: Maybe<FieldWrapper<BaccaratBetRecordCollection>>;
  /** 遊戲房間 */
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** Room ID */
  baccaratRoomId: Maybe<FieldWrapper<Scalars['ID']>>;
  /** 押大金額 */
  bigAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押大是否贏 */
  bigWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 開始時間 */
  closedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 當前局數 */
  currentRound: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 押莊金額 */
  dealerAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 莊家牌 */
  dealerCards: Maybe<Array<FieldWrapper<Scalars['Int']>>>;
  /** 押莊雙金額 */
  dealerDoubleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊雙是否贏 */
  dealerDoubleWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押莊龍寶金額 */
  dealerDragonAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊龍寶是否贏 */
  dealerDragonWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押莊例牌金額 */
  dealerKingAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊例牌是否贏 */
  dealerKingWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 莊家是否需要補牌 */
  dealerNeedAnother: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押莊對金額 */
  dealerPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊對是否贏 */
  dealerPairWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 莊家點數 */
  dealerPoints: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 押莊單金額 */
  dealerSingleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊單是否贏 */
  dealerSingleWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押莊是否贏 */
  dealerWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 下注截止時間 */
  endAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 遊戲局號 */
  gameNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 押完美對子金額 */
  perfectPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押完美對子是否贏 */
  perfectPairWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押閒金額 */
  playerAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒家牌 */
  playerCards: Maybe<Array<FieldWrapper<Scalars['Int']>>>;
  /** 玩家人數 */
  playerCounts: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 押閒雙金額 */
  playerDoubleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒雙是否贏 */
  playerDoubleWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押閒龍寶金額 */
  playerDragonAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒龍寶是否贏 */
  playerDragonWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押閒例牌金額 */
  playerKingAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒例牌是否贏 */
  playerKingWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 閒家是否需要補牌 */
  playerNeedAnother: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押閒對金額 */
  playerPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒對是否贏 */
  playerPairWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 閒家點數 */
  playerPoints: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 押閒單金額 */
  playerSingleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒單是否贏 */
  playerSingleWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押閒是否贏 */
  playerWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 路單 */
  roadImage: Maybe<FieldWrapper<Scalars['String']>>;
  /** 是否洗牌 */
  shuffle: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押小金額 */
  smallAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押小是否贏 */
  smallWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 開始時間 */
  startedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 狀態 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 押幸運6金額 */
  super6Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押幸運6是否贏 */
  super6Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押超和0金額 */
  superTie0Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和0是否贏 */
  superTie0Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押超和1金額 */
  superTie1Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和1是否贏 */
  superTie1Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押超和2金額 */
  superTie2Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和2是否贏 */
  superTie2Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押超和3金額 */
  superTie3Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和3是否贏 */
  superTie3Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押超和4金額 */
  superTie4Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和4是否贏 */
  superTie4Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押超和5金額 */
  superTie5Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和5是否贏 */
  superTie5Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押超和6金額 */
  superTie6Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和6是否贏 */
  superTie6Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押超和7金額 */
  superTie7Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和7是否贏 */
  superTie7Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押超和8金額 */
  superTie8Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和8是否贏 */
  superTie8Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 押超和9金額 */
  superTie9Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和9是否贏 */
  superTie9Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 所有門的下注 */
  targets: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** Tie amount */
  tieAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Tie win */
  tieWin: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 總下注量 */
  totalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總局數 */
  totalRounds: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總輸贏 */
  totalWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總輸贏 */
  totalWinLossAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 影片 */
  video: Maybe<FieldWrapper<Scalars['String']>>;
};

export type BaccaratGameCollection = {
  __typename: 'BaccaratGameCollection';
  /** 總下注量 */
  betTotal: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<BaccaratGame>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總下注人數 */
  usersTotal: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總輸贏 */
  winLossTotal: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type BaccaratMessage = {
  __typename: 'BaccaratMessage';
  /** 房間 */
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** 內容 */
  body: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 禮物 */
  gift: Maybe<FieldWrapper<Scalars['String']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 類型 */
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

export type BaccaratMessageCollection = {
  __typename: 'BaccaratMessageCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 訊息 */
  records: Maybe<Array<FieldWrapper<BaccaratMessage>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type BaccaratRoom = {
  __typename: 'BaccaratRoom';
  /** 下注區塊顏色A */
  a: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 房間開啟時間 */
  activedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 警示跑馬燈 */
  alertText: Maybe<FieldWrapper<Scalars['String']>>;
  /** 傾斜角度 */
  angle: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 下注區塊顏色B */
  b: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 大賠率 */
  bigOdds: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 房間關閉時間 */
  closedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 下注區塊顏色 */
  color: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 登入用戶當局下注記錄 */
  currentBaccaratBetRecord: Maybe<FieldWrapper<CurrentBaccaratBetRecord>>;
  /** 當局 */
  currentGame: Maybe<FieldWrapper<BaccaratGame>>;
  /** 現在荷官收禮總金額 */
  currentGirlGiftValue: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 牌路圖片 */
  currentRoadsImage: Maybe<FieldWrapper<Scalars['String']>>;
  /** 莊賠率 */
  dealerOdds: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 莊對賠率 */
  dealerPairOdds: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 房間網域 */
  domain: Maybe<FieldWrapper<Scalars['String']>>;
  /** 是否開啟網頁推播 */
  enablePostWebhook: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 是否接收網頁推播 */
  enableReceiveWebhook: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 下注區塊顏色G */
  g: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 遊戲結果 */
  gameResults: Maybe<Array<FieldWrapper<Scalars['String']>>>;
  /** 遊戲類型 */
  gameType: Maybe<FieldWrapper<Scalars['String']>>;
  /** 荷官 */
  girl: Maybe<FieldWrapper<Girl>>;
  /** 所有荷官們 */
  girls: Array<FieldWrapper<Girl>>;
  /** 廳 */
  hall: Maybe<FieldWrapper<Hall>>;
  /** 牌路統計 */
  history: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 延遲秒數 */
  latency: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 本注最大下注量 */
  mainLimit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 房名 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 對子最大下注量 */
  pairLimit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒賠率 */
  playerOdds: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒對賠率 */
  playerPairOdds: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 下注區塊顏色R */
  r: Maybe<FieldWrapper<Scalars['Int']>>;
  roads: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 本靴第幾局 */
  roundsInCurrentShuffled: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 倒數秒數剩下幾秒 */
  secondsLeft: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 第幾靴 */
  shuffledCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 小賠率 */
  smallOdds: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 房間狀態 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 主視訊key */
  streamKey: Maybe<FieldWrapper<Scalars['String']>>;
  /** 主視訊Name */
  streamName: Maybe<FieldWrapper<Scalars['String']>>;
  /** 額外鏡位 */
  streams: Maybe<Array<FieldWrapper<Stream>>>;
  /** 幸運6賠率 */
  super6Odds: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 和最大下注量 */
  tieLimit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 和局賠率 */
  tieOdds: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 房間會員 */
  users: Maybe<Array<FieldWrapper<User>>>;
  /** 線上人數 */
  usersCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** UUID */
  uuid: Maybe<FieldWrapper<Scalars['ID']>>;
  /** 倒數秒數 */
  waitingBetSeconds: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 房間狀態為等待時的顯示文字 */
  waitingText: Maybe<FieldWrapper<Scalars['String']>>;
  /** 網頁推播網址 */
  webhookUrl: Maybe<FieldWrapper<Scalars['String']>>;
  /** 縮放類型 */
  zoomType: Maybe<FieldWrapper<Scalars['String']>>;
};


export type BaccaratRoomroadsArgs = {
  columns?: InputMaybe<Scalars['Int']>;
  rows?: InputMaybe<Scalars['Int']>;
};

export type BaccaratRoomCollection = {
  __typename: 'BaccaratRoomCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 百家房 */
  records: Maybe<Array<FieldWrapper<BaccaratRoom>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of BaccaratShuffle */
export type BaccaratShuffleInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  roomId: Scalars['ID'];
};

/** Autogenerated return type of BaccaratShuffle */
export type BaccaratShufflePayload = {
  __typename: 'BaccaratShufflePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

export type Bet = RecordInterface & {
  __typename: 'Bet';
  /** 百家遊戲 */
  baccaratGame: Maybe<FieldWrapper<BaccaratGame>>;
  /** 下注量 */
  betAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 注單編號 */
  betNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** 投注類型 */
  betType: Maybe<FieldWrapper<Scalars['String']>>;
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 輸贏 */
  diff: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 有效投注 */
  effectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 是否無效 */
  failure: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 遊戲局號 */
  gameNo: Maybe<FieldWrapper<Scalars['String']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** IP Address */
  ipAddress: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** Room UUID */
  roomUuid: Maybe<FieldWrapper<Scalars['String']>>;
  /** 關聯下注類型 */
  sourceType: Maybe<FieldWrapper<Scalars['String']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  user: Maybe<FieldWrapper<User>>;
  /** uuid */
  uuid: Maybe<FieldWrapper<Scalars['String']>>;
  /** 影片 */
  video: Maybe<FieldWrapper<Scalars['String']>>;
  /** 輸贏 */
  winLossAmount: Maybe<FieldWrapper<Scalars['Float']>>;
};

/** Autogenerated input type of Bet */
export type BetInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 閒1下注金額 */
  player1Amount: Scalars['Float'];
  /** 閒2下注金額 */
  player2Amount: Scalars['Float'];
  /** 閒3下注金額 */
  player3Amount: Scalars['Float'];
  /** 房間ID */
  roomId: Scalars['ID'];
};

export type BetInterface = {
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  user: Maybe<FieldWrapper<User>>;
};

/** Autogenerated return type of Bet */
export type BetPayload = {
  __typename: 'BetPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

export type BetRecord = BetInterface & {
  __typename: 'BetRecord';
  /** 派彩結果 */
  allResult: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 下注局號 */
  betNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** 遊戲結算結果 */
  betResult: Maybe<FieldWrapper<BetResult>>;
  /** City */
  city: Maybe<FieldWrapper<Scalars['String']>>;
  /** Country */
  country: Maybe<FieldWrapper<Scalars['String']>>;
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 幣別 */
  currency: Maybe<FieldWrapper<Scalars['String']>>;
  /** 總輸贏 */
  diff: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 水錢 */
  fee: Maybe<FieldWrapper<Scalars['Int']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** IP Address */
  ipAddress: Maybe<FieldWrapper<Scalars['String']>>;
  /** 是否為莊家 */
  isDealer: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** Latitude */
  latitude: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Longitude */
  longitude: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 遊戲局 */
  niuGame: Maybe<FieldWrapper<NiuGame>>;
  /** 閒1下注金額 */
  player1Amount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒1輸贏 */
  player1DiffAmount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒1派彩 */
  player1Result: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒1下注總金額 */
  player1TotalBet: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒2下注金額 */
  player2Amount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒2輸贏 */
  player2DiffAmount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒2派彩 */
  player2Result: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒2下注總金額 */
  player2TotalBet: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒3下注金額 */
  player3Amount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒3輸贏 */
  player3DiffAmount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒3派彩 */
  player3Result: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒3下注總金額 */
  player3TotalBet: Maybe<FieldWrapper<Scalars['Int']>>;
  /** Region */
  region: Maybe<FieldWrapper<Scalars['String']>>;
  /** 房間 */
  room: Maybe<FieldWrapper<Room>>;
  /** 總投注金額 */
  totalBet: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

export type BetRecordCollection = {
  __typename: 'BetRecordCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 下注紀錄 */
  records: Maybe<Array<FieldWrapper<BetRecord>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

export type BetResult = {
  __typename: 'BetResult';
  id: FieldWrapper<Scalars['ID']>;
  player1Bet: Maybe<FieldWrapper<Scalars['Float']>>;
  player1Result: Maybe<FieldWrapper<Scalars['Float']>>;
  player2Bet: Maybe<FieldWrapper<Scalars['Float']>>;
  player2Result: Maybe<FieldWrapper<Scalars['Float']>>;
  player3Bet: Maybe<FieldWrapper<Scalars['Float']>>;
  player3Result: Maybe<FieldWrapper<Scalars['Float']>>;
  totalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
};

/** Autogenerated input type of CancelBaccaratBet */
export type CancelBaccaratBetInput = {
  baccaratRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of CancelBaccaratBet */
export type CancelBaccaratBetPayload = {
  __typename: 'CancelBaccaratBetPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  /** 錢包資訊 */
  wallet: FieldWrapper<Wallet>;
};

export type Card = {
  __typename: 'Card';
  /** 牌面 */
  card: Maybe<FieldWrapper<Scalars['String']>>;
  /** 牌組 */
  cardSet: Maybe<FieldWrapper<CardSet>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: Maybe<FieldWrapper<Scalars['ID']>>;
  /** Key */
  key: Maybe<FieldWrapper<Scalars['Int']>>;
  /** RFID ID */
  rfid: Maybe<FieldWrapper<Scalars['String']>>;
  /** 比單張時的數值 */
  singleValue: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 牌面數值 */
  value: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type CardSet = {
  __typename: 'CardSet';
  /** 牌組下所有的牌 */
  cards: Maybe<Array<FieldWrapper<Card>>>;
  /** 牌數 */
  cardsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 牌組名稱 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type Charge = RecordInterface & {
  __typename: 'Charge';
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  user: Maybe<FieldWrapper<User>>;
};

export type ChargeRecord = {
  __typename: 'ChargeRecord';
  /** 金額 */
  amount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** City */
  city: Maybe<FieldWrapper<Scalars['String']>>;
  /** Country */
  country: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** IP Address */
  ipAddress: Maybe<FieldWrapper<Scalars['String']>>;
  /** Latitude */
  latitude: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Longitude */
  longitude: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Region */
  region: Maybe<FieldWrapper<Scalars['String']>>;
  /** 來源 */
  source: Maybe<FieldWrapper<Scalars['String']>>;
  /** 類型 */
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

export type ChargeRecordCollection = {
  __typename: 'ChargeRecordCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 儲值紀錄 */
  records: Maybe<Array<FieldWrapper<ChargeRecord>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of CountDown */
export type CountDownInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** Game ID */
  gameId: Scalars['ID'];
};

/** Autogenerated return type of CountDown */
export type CountDownPayload = {
  __typename: 'CountDownPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  status: Maybe<FieldWrapper<Scalars['String']>>;
};

/** Autogenerated input type of CreateAdminBaccaratMessage */
export type CreateAdminBaccaratMessageInput = {
  /** 房間ID */
  baccaratRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 訊息內容 */
  content: Scalars['String'];
  /** UUID */
  uuid: Scalars['String'];
};

/** Autogenerated return type of CreateAdminBaccaratMessage */
export type CreateAdminBaccaratMessagePayload = {
  __typename: 'CreateAdminBaccaratMessagePayload';
  baccaratMessage: Maybe<FieldWrapper<BaccaratMessage>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateAdminCharge */
export type CreateAdminChargeInput = {
  /** 金額 */
  amount: Scalars['Int'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** User ID */
  userId: Scalars['ID'];
};

/** Autogenerated return type of CreateAdminCharge */
export type CreateAdminChargePayload = {
  __typename: 'CreateAdminChargePayload';
  /** 充值紀錄 */
  chargeRecord: Maybe<FieldWrapper<ChargeRecord>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  /** 錯誤 */
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateAdminUser */
export type CreateAdminUserInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** Email */
  email: Scalars['String'];
  /** Password */
  password: Scalars['String'];
  /** Password Confirmation */
  passwordConfirmation: Scalars['String'];
  /** 權限 */
  role: Scalars['String'];
  /** 使用者名稱 */
  username: Scalars['String'];
};

/** Autogenerated return type of CreateAdminUser */
export type CreateAdminUserPayload = {
  __typename: 'CreateAdminUserPayload';
  adminUser: Maybe<FieldWrapper<AdminUser>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateAgent */
export type CreateAgentInput = {
  /** 百家佔成 */
  baccaratShareProfitRate: Scalars['Float'];
  /** 百家洗碼比 */
  baccaratXimaRate: Scalars['Float'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 用戶名 */
  name: Scalars['String'];
  /** 密碼 */
  password: Scalars['String'];
  /** 密碼確認 */
  passwordConfirmation: Scalars['String'];
  /** 限紅組別 */
  tableLimitIds: Array<Scalars['ID']>;
  /** 帳號 */
  username: Scalars['String'];
};

/** Autogenerated return type of CreateAgent */
export type CreateAgentPayload = {
  __typename: 'CreateAgentPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateAnnoncement */
export type CreateAnnoncementInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  content: Scalars['String'];
  targetType: Scalars['String'];
};

/** Autogenerated return type of CreateAnnoncement */
export type CreateAnnoncementPayload = {
  __typename: 'CreateAnnoncementPayload';
  annoncement: Maybe<FieldWrapper<Annoncement>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateBaccaratBet */
export type CreateBaccaratBetInput = {
  /** Any pair */
  anyPairAmount?: InputMaybe<Scalars['Float']>;
  baccaratRoomId: Scalars['ID'];
  /** Big */
  bigAmount?: InputMaybe<Scalars['Float']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** Dealer */
  dealerAmount?: InputMaybe<Scalars['Float']>;
  /** Dealer double */
  dealerDoubleAmount?: InputMaybe<Scalars['Float']>;
  /** Dealer dragon */
  dealerDragonAmount?: InputMaybe<Scalars['Float']>;
  /** Dealer king */
  dealerKingAmount?: InputMaybe<Scalars['Float']>;
  /** Dealer pair */
  dealerPairAmount?: InputMaybe<Scalars['Float']>;
  /** Dealer single */
  dealerSingleAmount?: InputMaybe<Scalars['Float']>;
  /** 裝置資訊 */
  deviceInfo: Scalars['JSON'];
  /** 遊戲類型(normal/super6) */
  gameType?: InputMaybe<Scalars['String']>;
  /** Perfect pair */
  perfectPairAmount?: InputMaybe<Scalars['Float']>;
  /** Player */
  playerAmount?: InputMaybe<Scalars['Float']>;
  /** Player double */
  playerDoubleAmount?: InputMaybe<Scalars['Float']>;
  /** Player dragon */
  playerDragonAmount?: InputMaybe<Scalars['Float']>;
  /** Player king */
  playerKingAmount?: InputMaybe<Scalars['Float']>;
  /** Player pair */
  playerPairAmount?: InputMaybe<Scalars['Float']>;
  /** Player single */
  playerSingleAmount?: InputMaybe<Scalars['Float']>;
  /** Small */
  smallAmount?: InputMaybe<Scalars['Float']>;
  /** Super6 */
  super6Amount?: InputMaybe<Scalars['Float']>;
  /** Super tie 0 */
  superTie0Amount?: InputMaybe<Scalars['Float']>;
  /** Super tie 1 */
  superTie1Amount?: InputMaybe<Scalars['Float']>;
  /** Super tie 2 */
  superTie2Amount?: InputMaybe<Scalars['Float']>;
  /** Super tie 3 */
  superTie3Amount?: InputMaybe<Scalars['Float']>;
  /** Super tie 4 */
  superTie4Amount?: InputMaybe<Scalars['Float']>;
  /** Super tie 5 */
  superTie5Amount?: InputMaybe<Scalars['Float']>;
  /** Super tie 6 */
  superTie6Amount?: InputMaybe<Scalars['Float']>;
  /** Super tie 7 */
  superTie7Amount?: InputMaybe<Scalars['Float']>;
  /** Super tie 8 */
  superTie8Amount?: InputMaybe<Scalars['Float']>;
  /** Super tie 9 */
  superTie9Amount?: InputMaybe<Scalars['Float']>;
  /** Tie */
  tieAmount?: InputMaybe<Scalars['Float']>;
};

/** Autogenerated return type of CreateBaccaratBet */
export type CreateBaccaratBetPayload = {
  __typename: 'CreateBaccaratBetPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  currentBaccaratBetRecord: Maybe<FieldWrapper<CurrentBaccaratBetRecord>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  profile: Maybe<FieldWrapper<Profile>>;
  /** 錢包資訊 */
  wallet: FieldWrapper<Wallet>;
};

/** Autogenerated input type of CreateBaccaratMessage */
export type CreateBaccaratMessageInput = {
  baccaratRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  content: Scalars['String'];
  /** UUID */
  uuid: Scalars['String'];
};

/** Autogenerated return type of CreateBaccaratMessage */
export type CreateBaccaratMessagePayload = {
  __typename: 'CreateBaccaratMessagePayload';
  baccaratMessage: Maybe<FieldWrapper<BaccaratMessage>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateBaccaratRoom */
export type CreateBaccaratRoomInput = {
  /** 押大賠率 */
  bigOdds?: InputMaybe<Scalars['Float']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 押莊賠率 */
  dealerOdds?: InputMaybe<Scalars['Float']>;
  /** 莊對賠率 */
  dealerPairOdds?: InputMaybe<Scalars['Float']>;
  /** 遊戲類型 */
  gameType: Scalars['String'];
  /** 荷官 */
  girlId: Scalars['ID'];
  /** 本注最大下注量 */
  mainLimit?: InputMaybe<Scalars['Float']>;
  /** 房名 */
  name: Scalars['String'];
  /** 對子最大下注量 */
  pairLimit?: InputMaybe<Scalars['Float']>;
  /** 押閒賠率 */
  playerOdds?: InputMaybe<Scalars['Float']>;
  /** 閒對賠率 */
  playerPairOdds?: InputMaybe<Scalars['Float']>;
  /** 押小賠率 */
  smallOdds?: InputMaybe<Scalars['Float']>;
  /** Super6 賠率 */
  super6Odds: Scalars['Int'];
  /** 和最大下注量 */
  tieLimit?: InputMaybe<Scalars['Float']>;
  /** 和局賠率 */
  tieOdds?: InputMaybe<Scalars['Float']>;
};

/** Autogenerated return type of CreateBaccaratRoom */
export type CreateBaccaratRoomPayload = {
  __typename: 'CreateBaccaratRoomPayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateCard */
export type CreateCardInput = {
  /** 牌面 */
  card: Scalars['Int'];
  /** 牌組ID */
  cardSetId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** RFID 10進位序號 */
  rfid: Scalars['String'];
};

/** Autogenerated return type of CreateCard */
export type CreateCardPayload = {
  __typename: 'CreateCardPayload';
  card: Maybe<FieldWrapper<Card>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateCardSet */
export type CreateCardSetInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 牌組名稱 */
  name: Scalars['String'];
};

/** Autogenerated return type of CreateCardSet */
export type CreateCardSetPayload = {
  __typename: 'CreateCardSetPayload';
  cardSet: Maybe<FieldWrapper<CardSet>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateCharge */
export type CreateChargeInput = {
  /** 金額 */
  amount: Scalars['Int'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of CreateCharge */
export type CreateChargePayload = {
  __typename: 'CreateChargePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  profile: Maybe<FieldWrapper<Profile>>;
};

/** Autogenerated input type of CreateChatroomMessage */
export type CreateChatroomMessageInput = {
  body: Scalars['String'];
  channelId: Scalars['ID'];
  channelType: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** UUID */
  uuid: Scalars['String'];
};

/** Autogenerated return type of CreateChatroomMessage */
export type CreateChatroomMessagePayload = {
  __typename: 'CreateChatroomMessagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateChild */
export type CreateChildInput = {
  agentId?: InputMaybe<Scalars['ID']>;
  baccaratShareProfitRate: Scalars['Float'];
  baccaratXimaRate: Scalars['Float'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  creditLimit: Scalars['Float'];
  name: Scalars['String'];
  niuniuShareProfitRate: Scalars['Float'];
  niuniuXimaRate: Scalars['Float'];
  password?: InputMaybe<Scalars['String']>;
  passwordConfirmation?: InputMaybe<Scalars['String']>;
  tableLimitIds: Array<Scalars['ID']>;
  username: Scalars['String'];
  winLimit?: InputMaybe<Scalars['Float']>;
};

/** Autogenerated return type of CreateChild */
export type CreateChildPayload = {
  __typename: 'CreateChildPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateChildUser */
export type CreateChildUserInput = {
  agentId?: InputMaybe<Scalars['ID']>;
  baccaratXimaRate: Scalars['Float'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  creditBalance: Scalars['Float'];
  hideWinPoints?: InputMaybe<Scalars['Boolean']>;
  note?: InputMaybe<Scalars['String']>;
  noteName?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  passwordConfirmation?: InputMaybe<Scalars['String']>;
  tableLimitMax: Scalars['Int'];
  tableLimitMin: Scalars['Int'];
  username: Scalars['String'];
  winLimit?: InputMaybe<Scalars['Float']>;
};

/** Autogenerated return type of CreateChildUser */
export type CreateChildUserPayload = {
  __typename: 'CreateChildUserPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  user: Maybe<FieldWrapper<User>>;
};

/** Autogenerated input type of CreateCsMessage */
export type CreateCsMessageInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  ticketId: Scalars['ID'];
  type: Scalars['String'];
};

/** Autogenerated return type of CreateCsMessage */
export type CreateCsMessagePayload = {
  __typename: 'CreateCsMessagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  ticketMessage: Maybe<FieldWrapper<TicketMessageInterface>>;
};

/** Autogenerated input type of CreateGirl */
export type CreateGirlInput = {
  /** 頭像 */
  avatar: Scalars['String'];
  /** 上圍 */
  bust?: InputMaybe<Scalars['String']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 星座 */
  constellation?: InputMaybe<Scalars['String']>;
  /** 身高 */
  height?: InputMaybe<Scalars['Float']>;
  /** 是否隱藏 */
  hidden?: InputMaybe<Scalars['Boolean']>;
  /** 下圍 */
  hips?: InputMaybe<Scalars['Float']>;
  /** 興趣 */
  hobby?: InputMaybe<Scalars['String']>;
  /** 名稱 */
  name: Scalars['String'];
  /** 中圍 */
  waist?: InputMaybe<Scalars['Float']>;
  /** 體重 */
  weight?: InputMaybe<Scalars['Float']>;
  /** 下班時間 */
  workingEndAt?: InputMaybe<Scalars['String']>;
  /** 上班時間 */
  workingStartAt?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of CreateGirl */
export type CreateGirlPayload = {
  __typename: 'CreateGirlPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  girl: Maybe<FieldWrapper<Girl>>;
};

/** Autogenerated input type of CreateHall */
export type CreateHallInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 網域 */
  domain: Scalars['String'];
  /** 開房最大數量 */
  maxRoomsCount: Scalars['String'];
  /** 廳名稱 */
  name: Scalars['String'];
  /** 密碼 */
  password: Scalars['String'];
  /** 確認密碼 */
  passwordConfirmation: Scalars['String'];
  /** 帳號 */
  username: Scalars['String'];
};

/** Autogenerated return type of CreateHall */
export type CreateHallPayload = {
  __typename: 'CreateHallPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  hall: Maybe<FieldWrapper<Hall>>;
};

/** Autogenerated input type of CreateIssue */
export type CreateIssueInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  data?: InputMaybe<Scalars['JSON']>;
  description?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of CreateIssue */
export type CreateIssuePayload = {
  __typename: 'CreateIssuePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  issue: Maybe<FieldWrapper<Issue>>;
};

/** Autogenerated input type of CreateMessage */
export type CreateMessageInput = {
  /** 訊息內容 */
  body: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 房間ID */
  roomId: Scalars['ID'];
  /** UUID */
  uuid: Scalars['String'];
};

/** Autogenerated return type of CreateMessage */
export type CreateMessagePayload = {
  __typename: 'CreateMessagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  message: Maybe<FieldWrapper<Message>>;
};

/** Autogenerated input type of CreateOrder */
export type CreateOrderInput = {
  /** 金額 */
  amount: Scalars['Int'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 支付方式 */
  gateway: Scalars['String'];
};

/** Autogenerated return type of CreateOrder */
export type CreateOrderPayload = {
  __typename: 'CreateOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  order: Maybe<FieldWrapper<Order>>;
};

/** Autogenerated input type of CreatePlatformChild */
export type CreatePlatformChildInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  confirmPassword: Scalars['String'];
  maxBet: Scalars['Float'];
  minBet: Scalars['Float'];
  name: Scalars['String'];
  password: Scalars['String'];
  username: Scalars['String'];
};

/** Autogenerated return type of CreatePlatformChild */
export type CreatePlatformChildPayload = {
  __typename: 'CreatePlatformChildPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  platform: Maybe<FieldWrapper<Platform>>;
};

/** Autogenerated input type of CreatePlayerTransaction */
export type CreatePlayerTransactionInput = {
  addressType: Scalars['String'];
  amount: Scalars['Float'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  txid: Scalars['String'];
  userAddress: Scalars['String'];
  username: Scalars['String'];
};

/** Autogenerated return type of CreatePlayerTransaction */
export type CreatePlayerTransactionPayload = {
  __typename: 'CreatePlayerTransactionPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  playerTransaction: Maybe<FieldWrapper<PlayerTransaction>>;
};

/** Autogenerated input type of CreatePromotion */
export type CreatePromotionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 條件與回饋 */
  conditionAndOffer: Scalars['JSON'];
  /** 結束時間 */
  endAt: Scalars['ISO8601DateTime'];
  /** 活動名稱 */
  name: Scalars['String'];
  /** 開始時間 */
  startAt: Scalars['ISO8601DateTime'];
  /** 活動類型 */
  type: Scalars['String'];
};

/** Autogenerated return type of CreatePromotion */
export type CreatePromotionPayload = {
  __typename: 'CreatePromotionPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
};

/** Autogenerated input type of CreateRoom */
export type CreateRoomInput = {
  /** 是否可排莊 */
  canBeDealer: Scalars['Boolean'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 排莊最低餘額限制 */
  dealerMinBalance: Scalars['Int'];
  /** 水錢 */
  fee: Scalars['Int'];
  /** 荷官 */
  girlId: Scalars['ID'];
  /** 單注上限 */
  maxBet: Scalars['Int'];
  /** 單門押注上限 */
  maxSinglePlayerBet: Scalars['Int'];
  /** 單注下限 */
  minBet: Scalars['Int'];
  /** 房間名稱 */
  name: Scalars['String'];
  /** 牛7賠率 */
  odds7: Scalars['Int'];
  /** 牛8賠率 */
  odds8: Scalars['Int'];
  /** 牛9賠率 */
  odds9: Scalars['Int'];
  /** 牛牛賠率 */
  odds20: Scalars['Int'];
  /** 五公賠率 */
  odds50: Scalars['Int'];
  /** 開牌秒數 */
  openingSeconds?: InputMaybe<Scalars['Int']>;
  /** 下注秒數 */
  waitingBetSeconds?: InputMaybe<Scalars['Int']>;
};

/** Autogenerated input type of CreateRoomMessage */
export type CreateRoomMessageInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  content: Scalars['String'];
  /** ID */
  roomId: Scalars['ID'];
  /** room type */
  roomType: Scalars['String'];
  /** UUID */
  uuid: Scalars['String'];
};

/** Autogenerated return type of CreateRoomMessage */
export type CreateRoomMessagePayload = {
  __typename: 'CreateRoomMessagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  message: Maybe<FieldWrapper<Message>>;
};

/** Autogenerated return type of CreateRoom */
export type CreateRoomPayload = {
  __typename: 'CreateRoomPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  room: Maybe<FieldWrapper<Room>>;
};

/** Autogenerated input type of CreateRootPlatform */
export type CreateRootPlatformInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 牛牛限紅最大下注 */
  maxBet: Scalars['Int'];
  /** 牛牛限紅最小下注 */
  minBet: Scalars['Int'];
  /** 平台名稱 */
  name: Scalars['String'];
  /** 暱稱 */
  nickname?: InputMaybe<Scalars['String']>;
  /** 密碼 */
  password: Scalars['String'];
  /** 帳號 */
  username: Scalars['String'];
  /** 錢包類型 */
  walletType: Scalars['String'];
};

/** Autogenerated return type of CreateRootPlatform */
export type CreateRootPlatformPayload = {
  __typename: 'CreateRootPlatformPayload';
  agent: Maybe<FieldWrapper<Platform>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateStream */
export type CreateStreamInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  sourceId: Scalars['ID'];
  sourceType: Scalars['String'];
};

/** Autogenerated return type of CreateStream */
export type CreateStreamPayload = {
  __typename: 'CreateStreamPayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateStreamer */
export type CreateStreamerInput = {
  boundRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  username: Scalars['String'];
};

/** Autogenerated return type of CreateStreamer */
export type CreateStreamerPayload = {
  __typename: 'CreateStreamerPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  streamer: Maybe<FieldWrapper<Streamer>>;
};

/** Autogenerated input type of CreateSubAccount */
export type CreateSubAccountInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  password?: InputMaybe<Scalars['String']>;
  passwordConfirmation?: InputMaybe<Scalars['String']>;
  username: Scalars['String'];
};

/** Autogenerated return type of CreateSubAccount */
export type CreateSubAccountPayload = {
  __typename: 'CreateSubAccountPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of CreateTableLimit */
export type CreateTableLimitInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 上限 */
  max: Scalars['Float'];
  /** 下限 */
  min: Scalars['Float'];
  /** 名稱 */
  name: Scalars['String'];
};

/** Autogenerated return type of CreateTableLimit */
export type CreateTableLimitPayload = {
  __typename: 'CreateTableLimitPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  tableLimit: Maybe<FieldWrapper<TableLimit>>;
};

/** Autogenerated input type of CreateTicketMessage */
export type CreateTicketMessageInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  ticketId: Scalars['ID'];
  type: Scalars['String'];
};

/** Autogenerated return type of CreateTicketMessage */
export type CreateTicketMessagePayload = {
  __typename: 'CreateTicketMessagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  ticketMessage: Maybe<FieldWrapper<TicketMessageInterface>>;
};

/** Autogenerated input type of CreateTongRoom */
export type CreateTongRoomInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 荷官 */
  girlId: Scalars['ID'];
  /** 房名 */
  name: Scalars['String'];
};

/** Autogenerated return type of CreateTongRoom */
export type CreateTongRoomPayload = {
  __typename: 'CreateTongRoomPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  tongRoom: Maybe<FieldWrapper<TongRoom>>;
};

/** Autogenerated input type of CreateTrialUser */
export type CreateTrialUserInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of CreateTrialUser */
export type CreateTrialUserPayload = {
  __typename: 'CreateTrialUserPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  token: Maybe<FieldWrapper<Scalars['String']>>;
};

/** Autogenerated input type of CreateWalletAddress */
export type CreateWalletAddressInput = {
  address: Scalars['String'];
  addressType: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of CreateWalletAddress */
export type CreateWalletAddressPayload = {
  __typename: 'CreateWalletAddressPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  walletAddress: Maybe<FieldWrapper<WalletAddress>>;
};

/** Autogenerated input type of CreateWithdrawRecord */
export type CreateWithdrawRecordInput = {
  /** 账户号码 */
  account: Scalars['String'];
  /** 账户名称 */
  accountName: Scalars['String'];
  /** 银行代码 */
  bankCode: Scalars['String'];
  /** 分行名称 */
  branch: Scalars['String'];
  /** 城市 */
  city: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 省份 */
  province: Scalars['String'];
};

/** Autogenerated return type of CreateWithdrawRecord */
export type CreateWithdrawRecordPayload = {
  __typename: 'CreateWithdrawRecordPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  withdrawRecord: Maybe<FieldWrapper<WithdrawRecord>>;
};

/** Autogenerated input type of CreateWorldCupRoom */
export type CreateWorldCupRoomInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  endAt: Scalars['ISO8601DateTime'];
  startAt: Scalars['ISO8601DateTime'];
  title: Scalars['String'];
  username?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of CreateWorldCupRoom */
export type CreateWorldCupRoomPayload = {
  __typename: 'CreateWorldCupRoomPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  worldCupRoom: Maybe<FieldWrapper<WorldCupRoom>>;
};

export type CreditChangeRecord = {
  __typename: 'CreditChangeRecord';
  /** 操作 */
  action: Maybe<FieldWrapper<Scalars['String']>>;
  /** Agent */
  agent: Maybe<FieldWrapper<Agent>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 額度變動 */
  creditDiff: Maybe<FieldWrapper<Scalars['Float']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 變動後額度 */
  newCredit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 變動後剩餘額度 */
  newCreditLeft: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 變動前額度 */
  prevCredit: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 變動前剩餘額度 */
  prevCreditLeft: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 關聯紀錄 */
  referenceRecord: Maybe<FieldWrapper<ReferenceRecordInterface>>;
  /** 操作者 */
  source: Maybe<FieldWrapper<SourceInterface>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** Agent */
  user: Maybe<FieldWrapper<User>>;
};

export type CreditChangeRecordCollection = {
  __typename: 'CreditChangeRecordCollection';
  allBetRecordsWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  allBetSum: Maybe<FieldWrapper<Scalars['Float']>>;
  allGiftsRecordsSum: Maybe<FieldWrapper<Scalars['Float']>>;
  allGiftsSum: Maybe<FieldWrapper<Scalars['Float']>>;
  allRollbackSum: Maybe<FieldWrapper<Scalars['Float']>>;
  allWinSum: Maybe<FieldWrapper<Scalars['Float']>>;
  currentBetSum: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  currentRollbackSum: Maybe<FieldWrapper<Scalars['Float']>>;
  currentWinSum: Maybe<FieldWrapper<Scalars['Float']>>;
  records: Maybe<Array<FieldWrapper<CreditChangeRecord>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of CsReadTicketMessages */
export type CsReadTicketMessagesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  ticketId: Scalars['ID'];
};

/** Autogenerated return type of CsReadTicketMessages */
export type CsReadTicketMessagesPayload = {
  __typename: 'CsReadTicketMessagesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  ok: Maybe<FieldWrapper<Scalars['Boolean']>>;
};

export type CurrentBaccaratBetRecord = {
  __typename: 'CurrentBaccaratBetRecord';
  /** 押任意對子金額 */
  anyPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押任意對子派彩 */
  anyPairDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押大金額 */
  bigAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押大派彩 */
  bigDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊金額 */
  dealerAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊派彩 */
  dealerDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊雙金額 */
  dealerDoubleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊雙派彩 */
  dealerDoubleDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊龍寶金額 */
  dealerDragonAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊龍寶派彩 */
  dealerDragonDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊例牌金額 */
  dealerKingAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊例牌派彩 */
  dealerKingDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊對金額 */
  dealerPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊對派彩 */
  dealerPairDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊單金額 */
  dealerSingleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押莊單派彩 */
  dealerSingleDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 遊戲局號 */
  gameNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** 是否已派彩 */
  hasResult: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 押完美對子金額 */
  perfectPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押完美對子派彩 */
  perfectPairDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒金額 */
  playerAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒派彩 */
  playerDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒雙金額 */
  playerDoubleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒雙派彩 */
  playerDoubleDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒龍寶金額 */
  playerDragonAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒龍寶派彩 */
  playerDragonDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒例牌金額 */
  playerKingAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒例牌派彩 */
  playerKingDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒對金額 */
  playerPairAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒對派彩 */
  playerPairDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒單金額 */
  playerSingleAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押閒單派彩 */
  playerSingleDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 房名 */
  roomName: Maybe<FieldWrapper<Scalars['String']>>;
  /** 押小金額 */
  smallAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押小派彩 */
  smallDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押幸運6金額 */
  super6Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押幸運6派彩 */
  super6DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和0金額 */
  superTie0Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和0派彩 */
  superTie0DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和1金額 */
  superTie1Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和1派彩 */
  superTie1DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和2金額 */
  superTie2Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和2派彩 */
  superTie2DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和3金額 */
  superTie3Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和3派彩 */
  superTie3DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和4金額 */
  superTie4Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和4派彩 */
  superTie4DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和5金額 */
  superTie5Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和5派彩 */
  superTie5DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和6金額 */
  superTie6Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和6派彩 */
  superTie6DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和7金額 */
  superTie7Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和7派彩 */
  superTie7DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和8金額 */
  superTie8Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和8派彩 */
  superTie8DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和9金額 */
  superTie9Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押超和9派彩 */
  superTie9DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Tie amount */
  tieAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Tie diff amount */
  tieDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總押注金額 */
  totalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總派彩 */
  totalDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總輸贏 */
  winLossAmount: Maybe<FieldWrapper<Scalars['Float']>>;
};

export type CurrentNiuniuBetRecord = {
  __typename: 'CurrentNiuniuBetRecord';
  /** 水錢 */
  fee: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 是否結算 */
  hasResult: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 是否為莊家 */
  isDealer: FieldWrapper<Scalars['Boolean']>;
  /** 閒1下注金額 */
  player1Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒1輸贏 */
  player1DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒2下注金額 */
  player2Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒2輸贏 */
  player2DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒3下注金額 */
  player3Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒3輸贏 */
  player3DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總投注金額 */
  totalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總輸贏 */
  totalDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
};

export type CurrentTongBetRecord = {
  __typename: 'CurrentTongBetRecord';
  /** 遊戲局號 */
  gameNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** 是否已派彩 */
  hasResult: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 押出金額 */
  player1Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押出派彩 */
  player1DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押川金額 */
  player2Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押川派彩 */
  player2DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押尾金額 */
  player3Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押尾派彩 */
  player3DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總押注金額 */
  totalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總派彩 */
  totalDiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總輸贏 */
  winLossAmount: Maybe<FieldWrapper<Scalars['Float']>>;
};

export type CurrentUserBetRecordCollection = {
  __typename: 'CurrentUserBetRecordCollection';
  betTotal: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  diffTotal: Maybe<FieldWrapper<Scalars['Float']>>;
  effectiveBetTotal: Maybe<FieldWrapper<Scalars['Float']>>;
  records: Maybe<Array<FieldWrapper<RecordInterface>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
  ximaCommission: Maybe<FieldWrapper<Scalars['Float']>>;
  ximaRate: Maybe<FieldWrapper<Scalars['String']>>;
};

export type Dealer = RecordInterface & {
  __typename: 'Dealer';
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  user: Maybe<FieldWrapper<User>>;
};

/** Autogenerated input type of DeleteAgent */
export type DeleteAgentInput = {
  agentId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of DeleteAgent */
export type DeleteAgentPayload = {
  __typename: 'DeleteAgentPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of DeleteBaccaratRoom */
export type DeleteBaccaratRoomInput = {
  baccaratRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of DeleteBaccaratRoom */
export type DeleteBaccaratRoomPayload = {
  __typename: 'DeleteBaccaratRoomPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of DeleteStream */
export type DeleteStreamInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id: Scalars['ID'];
};

/** Autogenerated return type of DeleteStream */
export type DeleteStreamPayload = {
  __typename: 'DeleteStreamPayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of DeleteSubAccount */
export type DeleteSubAccountInput = {
  agentId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of DeleteSubAccount */
export type DeleteSubAccountPayload = {
  __typename: 'DeleteSubAccountPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of DeleteUser */
export type DeleteUserInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  userId: Scalars['ID'];
};

/** Autogenerated return type of DeleteUser */
export type DeleteUserPayload = {
  __typename: 'DeleteUserPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of Deposit */
export type DepositInput = {
  agentId: Scalars['ID'];
  amount: Scalars['Float'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of Deposit */
export type DepositPayload = {
  __typename: 'DepositPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of DepositUser */
export type DepositUserInput = {
  amount: Scalars['Float'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  userId: Scalars['ID'];
};

/** Autogenerated return type of DepositUser */
export type DepositUserPayload = {
  __typename: 'DepositUserPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  user: Maybe<FieldWrapper<User>>;
};

export type DoubleBet = {
  __typename: 'DoubleBet';
  amount: FieldWrapper<Scalars['Int']>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  opponentUser: FieldWrapper<User>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  user: FieldWrapper<User>;
};

export type Gift = RecordInterface & ReferenceRecordInterface & {
  __typename: 'Gift';
  amount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  gift: Maybe<FieldWrapper<Scalars['String']>>;
  giftZhTw: Maybe<FieldWrapper<Scalars['String']>>;
  girl: Maybe<FieldWrapper<Girl>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  room: Maybe<FieldWrapper<BaccaratRoom>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  user: Maybe<FieldWrapper<User>>;
};

export type GiftCollection = {
  __typename: 'GiftCollection';
  allSum: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  currentSum: Maybe<FieldWrapper<Scalars['JSON']>>;
  records: Maybe<Array<FieldWrapper<Gift>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type Girl = {
  __typename: 'Girl';
  /** 頭像 */
  avatar: Maybe<FieldWrapper<Scalars['String']>>;
  /** avatar data */
  avatarData: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 上圍 */
  bust: Maybe<FieldWrapper<Scalars['String']>>;
  /** 星座 */
  constellation: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 房間收禮總額 */
  giftValueForRoom: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 廳 */
  hall: FieldWrapper<Hall>;
  /** 身高 */
  height: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 是否隱藏 */
  hidden: FieldWrapper<Scalars['Boolean']>;
  /** 下圍 */
  hips: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 興趣 */
  hobby: Maybe<FieldWrapper<Scalars['String']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  liked: FieldWrapper<Scalars['Boolean']>;
  /** 喜歡數 */
  likesCount: FieldWrapper<Scalars['Int']>;
  /** 名字 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 中圍 */
  waist: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 體重 */
  weight: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 下班時間 */
  workingEndAt: Maybe<FieldWrapper<Scalars['String']>>;
  /** 上班時間 */
  workingEndAtInHuman: Maybe<FieldWrapper<Scalars['String']>>;
  /** 上班時間 */
  workingStartAt: Maybe<FieldWrapper<Scalars['String']>>;
  /** 上班時間 */
  workingStartAtInHuman: Maybe<FieldWrapper<Scalars['String']>>;
};


export type GirlgiftValueForRoomArgs = {
  roomId: Scalars['ID'];
  roomType: Scalars['String'];
};

export type GirlCollection = {
  __typename: 'GirlCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 房間 */
  records: Maybe<Array<FieldWrapper<Girl>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type Hall = {
  __typename: 'Hall';
  /** Auth Token */
  authToken: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 網域 */
  domain: Maybe<FieldWrapper<Scalars['String']>>;
  /** 荷官 */
  girls: Maybe<Array<FieldWrapper<Girl>>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 上次登入時間 */
  lastSignInAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 上次登入IP */
  lastSignInIp: Maybe<FieldWrapper<Scalars['String']>>;
  /** 大廳荷官 */
  listGirls: Maybe<Array<FieldWrapper<Girl>>>;
  /** 是否封鎖 */
  locked: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 最多開房數量 */
  maxRoomsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 名稱 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 登入次數 */
  signInCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 帳號 */
  username: Maybe<FieldWrapper<Scalars['String']>>;
};

/** Autogenerated input type of HallBaccaratShuffle */
export type HallBaccaratShuffleInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  roomId: Scalars['ID'];
};

/** Autogenerated return type of HallBaccaratShuffle */
export type HallBaccaratShufflePayload = {
  __typename: 'HallBaccaratShufflePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

export type HallCollection = {
  __typename: 'HallCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<Hall>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of HallCreateBaccaratMessage */
export type HallCreateBaccaratMessageInput = {
  /** 房間ID */
  baccaratRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 訊息內容 */
  content: Scalars['String'];
  /** UUID */
  uuid: Scalars['String'];
};

/** Autogenerated return type of HallCreateBaccaratMessage */
export type HallCreateBaccaratMessagePayload = {
  __typename: 'HallCreateBaccaratMessagePayload';
  baccaratMessage: Maybe<FieldWrapper<BaccaratMessage>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of HallCreateBaccaratRoom */
export type HallCreateBaccaratRoomInput = {
  /** 押大賠率 */
  bigOdds?: InputMaybe<Scalars['Float']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 押莊賠率 */
  dealerOdds?: InputMaybe<Scalars['Float']>;
  /** 莊對賠率 */
  dealerPairOdds?: InputMaybe<Scalars['Float']>;
  /** 遊戲類型 */
  gameType: Scalars['String'];
  /** 荷官 */
  girlId: Scalars['ID'];
  /** 本注最大下注量 */
  mainLimit?: InputMaybe<Scalars['Float']>;
  /** 房名 */
  name: Scalars['String'];
  /** 對子最大下注量 */
  pairLimit?: InputMaybe<Scalars['Float']>;
  /** 押閒賠率 */
  playerOdds?: InputMaybe<Scalars['Float']>;
  /** 閒對賠率 */
  playerPairOdds?: InputMaybe<Scalars['Float']>;
  /** 押小賠率 */
  smallOdds?: InputMaybe<Scalars['Float']>;
  /** Super6 賠率 */
  super6Odds: Scalars['Int'];
  /** 和最大下注量 */
  tieLimit?: InputMaybe<Scalars['Float']>;
  /** 和局賠率 */
  tieOdds?: InputMaybe<Scalars['Float']>;
};

/** Autogenerated return type of HallCreateBaccaratRoom */
export type HallCreateBaccaratRoomPayload = {
  __typename: 'HallCreateBaccaratRoomPayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of HallCreateGirl */
export type HallCreateGirlInput = {
  /** 頭像 */
  avatar: Scalars['String'];
  /** 上圍 */
  bust?: InputMaybe<Scalars['String']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 星座 */
  constellation?: InputMaybe<Scalars['String']>;
  /** 身高 */
  height?: InputMaybe<Scalars['Float']>;
  /** 是否隱藏 */
  hidden?: InputMaybe<Scalars['Boolean']>;
  /** 下圍 */
  hips?: InputMaybe<Scalars['Float']>;
  /** 興趣 */
  hobby?: InputMaybe<Scalars['String']>;
  /** 名稱 */
  name: Scalars['String'];
  /** 中圍 */
  waist?: InputMaybe<Scalars['Float']>;
  /** 體重 */
  weight?: InputMaybe<Scalars['Float']>;
  /** 下班時間 */
  workingEndAt?: InputMaybe<Scalars['String']>;
  /** 上班時間 */
  workingStartAt?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of HallCreateGirl */
export type HallCreateGirlPayload = {
  __typename: 'HallCreateGirlPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  girl: Maybe<FieldWrapper<Girl>>;
};

/** Autogenerated input type of HallResetBaccaratCards */
export type HallResetBaccaratCardsInput = {
  baccaratRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of HallResetBaccaratCards */
export type HallResetBaccaratCardsPayload = {
  __typename: 'HallResetBaccaratCardsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of HallUpdateBaccaratCard */
export type HallUpdateBaccaratCardInput = {
  /** 牌 */
  card: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 房間ID */
  roomId: Scalars['ID'];
};

/** Autogenerated return type of HallUpdateBaccaratCard */
export type HallUpdateBaccaratCardPayload = {
  __typename: 'HallUpdateBaccaratCardPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of HallUpdateBaccaratCards */
export type HallUpdateBaccaratCardsInput = {
  baccaratRoomId: Scalars['ID'];
  cards: Array<Scalars['Int']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  target: Scalars['String'];
};

/** Autogenerated return type of HallUpdateBaccaratCards */
export type HallUpdateBaccaratCardsPayload = {
  __typename: 'HallUpdateBaccaratCardsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of HallUpdateBaccaratGameResult */
export type HallUpdateBaccaratGameResultInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  dealerCards: Array<Scalars['Int']>;
  gameId: Scalars['ID'];
  playerCards: Array<Scalars['Int']>;
};

/** Autogenerated return type of HallUpdateBaccaratGameResult */
export type HallUpdateBaccaratGameResultPayload = {
  __typename: 'HallUpdateBaccaratGameResultPayload';
  baccaratGame: Maybe<FieldWrapper<BaccaratGame>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of HallUpdateBaccaratRoom */
export type HallUpdateBaccaratRoomInput = {
  /** a */
  a?: InputMaybe<Scalars['Float']>;
  /** 警告文字 */
  alertText?: InputMaybe<Scalars['String']>;
  /** 賭桌傾斜角度 */
  angle?: InputMaybe<Scalars['Int']>;
  /** b */
  b?: InputMaybe<Scalars['Int']>;
  /** 房間ID */
  baccaratRoomId: Scalars['ID'];
  /** 大賠率 */
  bigOdds?: InputMaybe<Scalars['Float']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 莊賠率 */
  dealerOdds?: InputMaybe<Scalars['Float']>;
  /** 莊對賠率 */
  dealerPairOdds?: InputMaybe<Scalars['Float']>;
  /** 是否啟用網頁推播 */
  enablePostWebhook?: InputMaybe<Scalars['Boolean']>;
  /** 是否啟用網頁推播 */
  enableReceiveWebhook?: InputMaybe<Scalars['Boolean']>;
  /** g */
  g?: InputMaybe<Scalars['Int']>;
  /** 荷官 */
  girlId?: InputMaybe<Scalars['ID']>;
  /** 延遲 */
  latency?: InputMaybe<Scalars['Float']>;
  /** 本注最大下注量 */
  mainLimit?: InputMaybe<Scalars['Float']>;
  /** 房間名稱 */
  name?: InputMaybe<Scalars['String']>;
  /** 對子最大下注量 */
  pairLimit?: InputMaybe<Scalars['Float']>;
  /** 閒賠率 */
  playerOdds?: InputMaybe<Scalars['Float']>;
  /** 閒對賠率 */
  playerPairOdds?: InputMaybe<Scalars['Float']>;
  /** r */
  r?: InputMaybe<Scalars['Int']>;
  /** 小賠率 */
  smallOdds?: InputMaybe<Scalars['Float']>;
  /** 房間狀態 */
  status?: InputMaybe<Scalars['String']>;
  /** 幸運6賠率 */
  super6Odds?: InputMaybe<Scalars['Float']>;
  /** 和最大下注量 */
  tieLimit?: InputMaybe<Scalars['Float']>;
  /** 和賠率 */
  tieOdds?: InputMaybe<Scalars['Float']>;
  /** 等待下注秒數 */
  waitingBetSeconds?: InputMaybe<Scalars['Int']>;
  /** 等待文字 */
  waitingText?: InputMaybe<Scalars['String']>;
  /** 推播網址 */
  webhookUrl?: InputMaybe<Scalars['String']>;
  /** 縮放類型 */
  zoomType?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of HallUpdateBaccaratRoom */
export type HallUpdateBaccaratRoomPayload = {
  __typename: 'HallUpdateBaccaratRoomPayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of HallUpdateBaccaratRound */
export type HallUpdateBaccaratRoundInput = {
  /** 房間ID */
  baccaratRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 更新資訊 */
  status: Scalars['String'];
};

/** Autogenerated return type of HallUpdateBaccaratRound */
export type HallUpdateBaccaratRoundPayload = {
  __typename: 'HallUpdateBaccaratRoundPayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of HallUpdateBaccaratThirdCard */
export type HallUpdateBaccaratThirdCardInput = {
  baccaratRoomId: Scalars['ID'];
  card: Scalars['Int'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  target: Scalars['String'];
};

/** Autogenerated return type of HallUpdateBaccaratThirdCard */
export type HallUpdateBaccaratThirdCardPayload = {
  __typename: 'HallUpdateBaccaratThirdCardPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of HallUpdateGirl */
export type HallUpdateGirlInput = {
  /** 頭像 */
  avatar: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** girl id */
  girlId: Scalars['ID'];
  /** 名稱 */
  name: Scalars['String'];
};

/** Autogenerated return type of HallUpdateGirl */
export type HallUpdateGirlPayload = {
  __typename: 'HallUpdateGirlPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  girl: Maybe<FieldWrapper<Girl>>;
};

export type Ip = {
  __typename: 'Ip';
  /** city */
  city: Maybe<FieldWrapper<Scalars['String']>>;
  /** country */
  country: Maybe<FieldWrapper<Scalars['String']>>;
  /** Country code */
  countryCode: Maybe<FieldWrapper<Scalars['String']>>;
  /** ip */
  ipAddress: Maybe<FieldWrapper<Scalars['String']>>;
  /** region */
  region: Maybe<FieldWrapper<Scalars['String']>>;
};

export type Issue = {
  __typename: 'Issue';
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  data: Maybe<FieldWrapper<Scalars['JSON']>>;
  description: Maybe<FieldWrapper<Scalars['String']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 建立時的IP */
  ipInfo: Maybe<FieldWrapper<Scalars['JSON']>>;
  reporter: Maybe<FieldWrapper<SourceInterface>>;
  title: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type IssueCollection = {
  __typename: 'IssueCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<Issue>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of JoinQueue */
export type JoinQueueInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** Game ID */
  roomId: Scalars['ID'];
};

/** Autogenerated return type of JoinQueue */
export type JoinQueuePayload = {
  __typename: 'JoinQueuePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  room: Maybe<FieldWrapper<Room>>;
};

/** Autogenerated input type of LikeGirl */
export type LikeGirlInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 荷官 ID */
  girlId: Scalars['ID'];
};

/** Autogenerated return type of LikeGirl */
export type LikeGirlPayload = {
  __typename: 'LikeGirlPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  girl: FieldWrapper<Girl>;
};

/** Autogenerated input type of LikeStreamer */
export type LikeStreamerInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  streamerId: Scalars['ID'];
};

/** Autogenerated return type of LikeStreamer */
export type LikeStreamerPayload = {
  __typename: 'LikeStreamerPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  streamer: FieldWrapper<Streamer>;
};

/** Autogenerated input type of Logout */
export type LogoutInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of Logout */
export type LogoutPayload = {
  __typename: 'LogoutPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  ok: Maybe<FieldWrapper<Scalars['Boolean']>>;
};

export type Message = {
  __typename: 'Message';
  /** 內容 */
  body: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 禮物 */
  gift: Maybe<FieldWrapper<Scalars['String']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 房間 */
  room: Maybe<FieldWrapper<Room>>;
  /** 類型 */
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

export type MessageCollection = {
  __typename: 'MessageCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 聊天訊息 */
  records: Maybe<Array<FieldWrapper<Message>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Error */
export type ModelError = {
  __typename: 'ModelError';
  /** Which input value this error came from */
  attribute: FieldWrapper<Scalars['String']>;
  /** A description of the error */
  message: FieldWrapper<Scalars['String']>;
};

export type Mutation = {
  __typename: 'Mutation';
  /** 新增下級代理 */
  addChildAgent: Maybe<FieldWrapper<AddChildAgentPayload>>;
  /** 存入額度 */
  agentDeposit: Maybe<FieldWrapper<DepositPayload>>;
  /** 存入玩家額度 */
  agentDepositUser: Maybe<FieldWrapper<DepositUserPayload>>;
  /** 玩家洗分 */
  agentResetUser: Maybe<FieldWrapper<AgentResetUserPayload>>;
  /** 超級更新玩家 */
  agentUpdateFullUser: Maybe<FieldWrapper<AgentUpdateFullUserPayload>>;
  /** 更新玩家 */
  agentUpdateUser: Maybe<FieldWrapper<AgentUpdateUserPayload>>;
  /** 取出額度 */
  agentWithdraw: Maybe<FieldWrapper<WithdrawPayload>>;
  /** 取出玩家額度 */
  agentWithdrawUser: Maybe<FieldWrapper<WithdrawUserPayload>>;
  /** 百家洗牌 */
  baccaratShuffle: Maybe<FieldWrapper<BaccaratShufflePayload>>;
  /** 下注 */
  bet: Maybe<FieldWrapper<BetPayload>>;
  /** 取消下注 */
  cancelBaccaratBet: Maybe<FieldWrapper<CancelBaccaratBetPayload>>;
  /** 下注倒數 */
  countDown: Maybe<FieldWrapper<CountDownPayload>>;
  /** 新增百家房聊天訊息 */
  createAdminBaccaratMessage: Maybe<FieldWrapper<CreateAdminBaccaratMessagePayload>>;
  /** 手動充值 */
  createAdminCharge: Maybe<FieldWrapper<CreateAdminChargePayload>>;
  /** 新增管理員 */
  createAdminUser: Maybe<FieldWrapper<CreateAdminUserPayload>>;
  /** 新增代理 */
  createAgent: Maybe<FieldWrapper<CreateAgentPayload>>;
  /** 新增公告 */
  createAnnoncement: Maybe<FieldWrapper<CreateAnnoncementPayload>>;
  /** 下注百家 */
  createBaccaratBet: Maybe<FieldWrapper<CreateBaccaratBetPayload>>;
  /** 新增百家聊天訊息 */
  createBaccaratMessage: Maybe<FieldWrapper<CreateBaccaratMessagePayload>>;
  /** 新增百家房 */
  createBaccaratRoom: Maybe<FieldWrapper<CreateBaccaratRoomPayload>>;
  /** 新增牌 */
  createCard: Maybe<FieldWrapper<CreateCardPayload>>;
  /** 新增牌組 */
  createCardSet: Maybe<FieldWrapper<CreateCardSetPayload>>;
  /** 充值 */
  createCharge: Maybe<FieldWrapper<CreateChargePayload>>;
  /** 新增聊天訊息 */
  createChatroomMessage: Maybe<FieldWrapper<CreateChatroomMessagePayload>>;
  /** 新增下線代理 */
  createChild: Maybe<FieldWrapper<CreateChildPayload>>;
  /** 新增下線玩家 */
  createChildUser: Maybe<FieldWrapper<CreateChildUserPayload>>;
  /** 客服回覆訊息 */
  createCsMessage: Maybe<FieldWrapper<CreateCsMessagePayload>>;
  /** 新增荷官 */
  createGirl: Maybe<FieldWrapper<CreateGirlPayload>>;
  /** 新增廳 */
  createHall: Maybe<FieldWrapper<CreateHallPayload>>;
  /** 問題回報 */
  createIssue: Maybe<FieldWrapper<CreateIssuePayload>>;
  /** 新增聊天訊息 */
  createMessage: Maybe<FieldWrapper<CreateMessagePayload>>;
  /** 新增訂單 */
  createOrder: Maybe<FieldWrapper<CreateOrderPayload>>;
  /** 新增下線代理 */
  createPlatformChild: Maybe<FieldWrapper<CreatePlatformChildPayload>>;
  createPlayerTransaction: Maybe<FieldWrapper<CreatePlayerTransactionPayload>>;
  /** 新增活動 */
  createPromotion: Maybe<FieldWrapper<CreatePromotionPayload>>;
  /** 開房間 */
  createRoom: Maybe<FieldWrapper<CreateRoomPayload>>;
  /** 聊天訊息 */
  createRoomMessage: Maybe<FieldWrapper<CreateRoomMessagePayload>>;
  /** 建立B2B平台 */
  createRootPlatform: Maybe<FieldWrapper<CreateRootPlatformPayload>>;
  /** 添加鏡位 */
  createStream: Maybe<FieldWrapper<CreateStreamPayload>>;
  createStreamer: FieldWrapper<CreateStreamerPayload>;
  /** 新增子帳號 */
  createSubAccount: Maybe<FieldWrapper<CreateSubAccountPayload>>;
  /** 建立限紅組 */
  createTableLimit: Maybe<FieldWrapper<CreateTableLimitPayload>>;
  /** 建立客服聊天訊息 */
  createTicketMessage: Maybe<FieldWrapper<CreateTicketMessagePayload>>;
  /** 下注推筒子 */
  createTongBet: Maybe<FieldWrapper<TongBetPayload>>;
  /** 新增推筒子房 */
  createTongRoom: Maybe<FieldWrapper<CreateTongRoomPayload>>;
  /** 建立試玩玩家 */
  createTrialUser: Maybe<FieldWrapper<CreateTrialUserPayload>>;
  createWalletAddress: Maybe<FieldWrapper<CreateWalletAddressPayload>>;
  /** 申請提現 */
  createWithdrawRecord: Maybe<FieldWrapper<CreateWithdrawRecordPayload>>;
  createWorldCupRoom: Maybe<FieldWrapper<CreateWorldCupRoomPayload>>;
  /** 客服已讀所有訊息 */
  csRead: Maybe<FieldWrapper<CsReadTicketMessagesPayload>>;
  /** 刪除代理 */
  deleteAgent: Maybe<FieldWrapper<DeleteAgentPayload>>;
  /** 刪除百家房 */
  deleteBaccaratRoom: Maybe<FieldWrapper<DeleteBaccaratRoomPayload>>;
  /** 刪除鏡位 */
  deleteStream: Maybe<FieldWrapper<DeleteStreamPayload>>;
  /** 更新子帳號 */
  deleteSubAccount: Maybe<FieldWrapper<DeleteSubAccountPayload>>;
  /** 刪除玩家 */
  deleteUser: Maybe<FieldWrapper<DeleteUserPayload>>;
  /** 百家洗牌 */
  hallBaccaratShuffle: Maybe<FieldWrapper<HallBaccaratShufflePayload>>;
  /** 新增百家房聊天訊息 */
  hallCreateBaccaratMessage: Maybe<FieldWrapper<HallCreateBaccaratMessagePayload>>;
  /** 新增百家房 */
  hallCreateBaccaratRoom: Maybe<FieldWrapper<HallCreateBaccaratRoomPayload>>;
  /** 新增荷官 */
  hallCreateGirl: Maybe<FieldWrapper<HallCreateGirlPayload>>;
  /** 重置所有牌 */
  hallResetBaccaratCards: Maybe<FieldWrapper<HallResetBaccaratCardsPayload>>;
  /** 自動掃描更新百家牌 */
  hallUpdateBaccaratCard: Maybe<FieldWrapper<HallUpdateBaccaratCardPayload>>;
  /** 百家開牌 */
  hallUpdateBaccaratCards: Maybe<FieldWrapper<HallUpdateBaccaratCardsPayload>>;
  /** 修改百家牌局 */
  hallUpdateBaccaratGameResult: Maybe<FieldWrapper<HallUpdateBaccaratGameResultPayload>>;
  /** 更新百家房 */
  hallUpdateBaccaratRoom: Maybe<FieldWrapper<HallUpdateBaccaratRoomPayload>>;
  /** 更新百家遊戲資訊 */
  hallUpdateBaccaratRoundStatus: Maybe<FieldWrapper<HallUpdateBaccaratRoundPayload>>;
  /** 百家補牌 */
  hallUpdateBaccaratThirdCard: Maybe<FieldWrapper<HallUpdateBaccaratThirdCardPayload>>;
  /** 更新荷官 */
  hallUpdateGirl: Maybe<FieldWrapper<HallUpdateGirlPayload>>;
  /** 加入排莊序列 */
  joinQueue: Maybe<FieldWrapper<JoinQueuePayload>>;
  likeGirl: Maybe<FieldWrapper<LikeGirlPayload>>;
  /** 喜歡直播主 */
  likeStreamer: FieldWrapper<LikeStreamerPayload>;
  /** 登出 */
  logout: Maybe<FieldWrapper<LogoutPayload>>;
  /** 呼吸 */
  pingRoom: Maybe<FieldWrapper<PingRoomPayload>>;
  /** 自動掃描更新百家牌 */
  resetBaccaratCards: Maybe<FieldWrapper<ResetBaccaratCardsPayload>>;
  /** 重置最後一次洗牌 */
  resetLastShuffle: Maybe<FieldWrapper<ResetLastShufflePayload>>;
  /** 送百家禮物 */
  sendBaccaratGift: Maybe<FieldWrapper<SendBaccaratGiftPayload>>;
  /** 送禮物 */
  sendGift: Maybe<FieldWrapper<SendGiftPayload>>;
  /** 送直播主禮物 */
  sendStreamerGift: FieldWrapper<SendStreamerGiftPayload>;
  /** 發送驗證碼 */
  sendVerificationCode: Maybe<FieldWrapper<SendVerificationCodePayload>>;
  /** 註冊 */
  signUp: Maybe<FieldWrapper<SignUpPayload>>;
  toggleAgentBots: Maybe<FieldWrapper<ToggleAgentBotsPayload>>;
  toggleEnableEditProfit: Maybe<FieldWrapper<ToggleEnableEditProfitPayload>>;
  toggleEnableStreamer: FieldWrapper<ToggleEnableStreamerPayload>;
  /** 廳開關 */
  toggleHall: Maybe<FieldWrapper<ToggleHallPayload>>;
  /** 封鎖或解開代理 */
  toggleLock: Maybe<FieldWrapper<ToggleLockPayload>>;
  toggleLockdown: Maybe<FieldWrapper<ToggleLockdownPayload>>;
  /** 封鎖或解開玩家 */
  toggleUserLock: Maybe<FieldWrapper<ToggleUserLockPayload>>;
  /** 筒子房洗牌 */
  tongShuffle: Maybe<FieldWrapper<TongShufflePayload>>;
  /** 轉移下層代理 */
  transferChildren: Maybe<FieldWrapper<TransferChildrenPayload>>;
  unlikeGirl: Maybe<FieldWrapper<UnlikeGirlPayload>>;
  /** 不喜歡直播主 */
  unlikeStreamer: FieldWrapper<UnlikeStreamerPayload>;
  /** 更新廣告 */
  updateAds: Maybe<FieldWrapper<UpdateAdsPayload>>;
  /** 更新代理 */
  updateAgent: Maybe<FieldWrapper<UpdateAgentPayload>>;
  /** 更新代理廣告 */
  updateAgentAd: Maybe<FieldWrapper<UpdateAgentAdPayload>>;
  /** 更新代理密碼 */
  updateAgentPassword: Maybe<FieldWrapper<UpdateAgentPasswordPayload>>;
  /** 更新公告 */
  updateAnnoncement: Maybe<FieldWrapper<UpdateAnnoncementPayload>>;
  /** 自動掃描更新百家牌 */
  updateBaccaratCard: Maybe<FieldWrapper<UpdateBaccaratCardPayload>>;
  /** 百家開牌 */
  updateBaccaratCards: Maybe<FieldWrapper<UpdateBaccaratCardsPayload>>;
  /** 修改百家牌局 */
  updateBaccaratGameResult: Maybe<FieldWrapper<UpdateBaccaratGameResultPayload>>;
  /** 更新百家房 */
  updateBaccaratRoom: Maybe<FieldWrapper<UpdateBaccaratRoomPayload>>;
  /** 更新百家房位置 */
  updateBaccaratRoomPosition: Maybe<FieldWrapper<UpdateBaccaratRoomPositionPayload>>;
  /** 更新百家遊戲資訊 */
  updateBaccaratRoundStatus: Maybe<FieldWrapper<UpdateBaccaratRoundPayload>>;
  /** 百家補牌 */
  updateBaccaratThirdCard: Maybe<FieldWrapper<UpdateBaccaratThirdCardPayload>>;
  updateBotAgentUsernames: Maybe<FieldWrapper<UpdateBotAgentUsernamesPayload>>;
  updateBotTime: Maybe<FieldWrapper<UpdateBotTimePayload>>;
  /** 更新回調網址設定 */
  updateCallbacks: Maybe<FieldWrapper<UpdateCallbacksPayload>>;
  /** 更新玩家牌面 */
  updateCard: Maybe<FieldWrapper<UpdateCardPayload>>;
  /** 批次更新玩家牌面 */
  updateCards: Maybe<FieldWrapper<UpdateCardsPayload>>;
  /** 編輯下線代理 */
  updateChild: Maybe<FieldWrapper<UpdateChildPayload>>;
  /** 修改骰子 */
  updateDice: Maybe<FieldWrapper<UpdateDicePayload>>;
  updateDisabledChatUsernames: Maybe<FieldWrapper<UpdateDisabledChatUsernamesPayload>>;
  /** 超級更新下線 */
  updateFullChild: Maybe<FieldWrapper<UpdateFullChildPayload>>;
  /** 更新遊戲狀態 */
  updateGameStatus: Maybe<FieldWrapper<UpdateGameStatusPayload>>;
  /** 更新荷官 */
  updateGirl: Maybe<FieldWrapper<UpdateGirlPayload>>;
  /** 更新廳 */
  updateHall: Maybe<FieldWrapper<UpdateHallPayload>>;
  /** 上線狀態 */
  updateLastSeen: Maybe<FieldWrapper<UpdateLastSeenPayload>>;
  /** 修改代理 */
  updatePlatform: Maybe<FieldWrapper<UpdatePlatformPayload>>;
  /** 修改玩家限紅 */
  updatePlayerTableLimit: Maybe<FieldWrapper<UpdatePlayerTableLimitPayload>>;
  /** 更新彩池 */
  updatePool: Maybe<FieldWrapper<UpdatePoolPayload>>;
  /** 更新個人資訊 */
  updateProfile: Maybe<FieldWrapper<UpdateProfilePayload>>;
  /** 更新房間 */
  updateRoom: Maybe<FieldWrapper<UpdateRoomPayload>>;
  /** 更新房間狀態 */
  updateRoomStatus: Maybe<FieldWrapper<UpdateRoomStatusPayload>>;
  /** 更新跑馬燈文字 */
  updateRoomText: Maybe<FieldWrapper<UpdateRoomTextPayload>>;
  updateSensitiveWords: Maybe<FieldWrapper<UpdateSensitiveWordsPayload>>;
  /** 更新用戶設定 */
  updateSettings: Maybe<FieldWrapper<UpdateSettingsPayload>>;
  /** 更新直播主資訊 */
  updateStreamer: FieldWrapper<UpdateStreamerPayload>;
  updateStreamerDisabled: FieldWrapper<UpdateStreamerDisabledPayload>;
  /** 設定上下線 */
  updateStreamerOnline: FieldWrapper<UpdateStreamerOnlinePayload>;
  /** 更新直播主房間 */
  updateStreamerRoom: FieldWrapper<UpdateStreamerRoomPayload>;
  updateStreamerRoomText: Maybe<FieldWrapper<UpdateStreamerRoomTextPayload>>;
  /** 更新主播班表 */
  updateStreamersImage: Maybe<FieldWrapper<UpdateStreamersImagePayload>>;
  /** 更新子帳號 */
  updateSubAccount: Maybe<FieldWrapper<UpdateSubAccountPayload>>;
  /** 客服更新ISSUE */
  updateTicket: Maybe<FieldWrapper<UpdateTicketPayload>>;
  /** 更新筒子房牌 */
  updateTongCards: Maybe<FieldWrapper<UpdateTongCardsPayload>>;
  /** 更新推筒子房 */
  updateTongRoom: Maybe<FieldWrapper<UpdateTongRoomPayload>>;
  /** 更新筒子房狀態 */
  updateTongRound: Maybe<FieldWrapper<UpdateTongRoundPayload>>;
  /** 更新提現紀錄狀態 */
  updateWithdrawStatus: Maybe<FieldWrapper<UpdateWithdrawStatusPayload>>;
  updateWorldCupRoom: Maybe<FieldWrapper<UpdateWorldCupRoomPayload>>;
  /** 用戶已讀所有訊息 */
  userRead: Maybe<FieldWrapper<UserReadTicketMessagesPayload>>;
  /** 驗證驗證碼 */
  verifyCode: Maybe<FieldWrapper<VerifyCodePayload>>;
  /** 進房歡迎訊息 */
  welcomeMessage: Maybe<FieldWrapper<WelcomeMessagePayload>>;
};


export type MutationaddChildAgentArgs = {
  input: AddChildAgentInput;
};


export type MutationagentDepositArgs = {
  input: DepositInput;
};


export type MutationagentDepositUserArgs = {
  input: DepositUserInput;
};


export type MutationagentResetUserArgs = {
  input: AgentResetUserInput;
};


export type MutationagentUpdateFullUserArgs = {
  input: AgentUpdateFullUserInput;
};


export type MutationagentUpdateUserArgs = {
  input: AgentUpdateUserInput;
};


export type MutationagentWithdrawArgs = {
  input: WithdrawInput;
};


export type MutationagentWithdrawUserArgs = {
  input: WithdrawUserInput;
};


export type MutationbaccaratShuffleArgs = {
  input: BaccaratShuffleInput;
};


export type MutationbetArgs = {
  input: BetInput;
};


export type MutationcancelBaccaratBetArgs = {
  input: CancelBaccaratBetInput;
};


export type MutationcountDownArgs = {
  input: CountDownInput;
};


export type MutationcreateAdminBaccaratMessageArgs = {
  input: CreateAdminBaccaratMessageInput;
};


export type MutationcreateAdminChargeArgs = {
  input: CreateAdminChargeInput;
};


export type MutationcreateAdminUserArgs = {
  input: CreateAdminUserInput;
};


export type MutationcreateAgentArgs = {
  input: CreateAgentInput;
};


export type MutationcreateAnnoncementArgs = {
  input: CreateAnnoncementInput;
};


export type MutationcreateBaccaratBetArgs = {
  input: CreateBaccaratBetInput;
};


export type MutationcreateBaccaratMessageArgs = {
  input: CreateBaccaratMessageInput;
};


export type MutationcreateBaccaratRoomArgs = {
  input: CreateBaccaratRoomInput;
};


export type MutationcreateCardArgs = {
  input: CreateCardInput;
};


export type MutationcreateCardSetArgs = {
  input: CreateCardSetInput;
};


export type MutationcreateChargeArgs = {
  input: CreateChargeInput;
};


export type MutationcreateChatroomMessageArgs = {
  input: CreateChatroomMessageInput;
};


export type MutationcreateChildArgs = {
  input: CreateChildInput;
};


export type MutationcreateChildUserArgs = {
  input: CreateChildUserInput;
};


export type MutationcreateCsMessageArgs = {
  input: CreateCsMessageInput;
};


export type MutationcreateGirlArgs = {
  input: CreateGirlInput;
};


export type MutationcreateHallArgs = {
  input: CreateHallInput;
};


export type MutationcreateIssueArgs = {
  input: CreateIssueInput;
};


export type MutationcreateMessageArgs = {
  input: CreateMessageInput;
};


export type MutationcreateOrderArgs = {
  input: CreateOrderInput;
};


export type MutationcreatePlatformChildArgs = {
  input: CreatePlatformChildInput;
};


export type MutationcreatePlayerTransactionArgs = {
  input: CreatePlayerTransactionInput;
};


export type MutationcreatePromotionArgs = {
  input: CreatePromotionInput;
};


export type MutationcreateRoomArgs = {
  input: CreateRoomInput;
};


export type MutationcreateRoomMessageArgs = {
  input: CreateRoomMessageInput;
};


export type MutationcreateRootPlatformArgs = {
  input: CreateRootPlatformInput;
};


export type MutationcreateStreamArgs = {
  input: CreateStreamInput;
};


export type MutationcreateStreamerArgs = {
  input: CreateStreamerInput;
};


export type MutationcreateSubAccountArgs = {
  input: CreateSubAccountInput;
};


export type MutationcreateTableLimitArgs = {
  input: CreateTableLimitInput;
};


export type MutationcreateTicketMessageArgs = {
  input: CreateTicketMessageInput;
};


export type MutationcreateTongBetArgs = {
  input: TongBetInput;
};


export type MutationcreateTongRoomArgs = {
  input: CreateTongRoomInput;
};


export type MutationcreateTrialUserArgs = {
  input: CreateTrialUserInput;
};


export type MutationcreateWalletAddressArgs = {
  input: CreateWalletAddressInput;
};


export type MutationcreateWithdrawRecordArgs = {
  input: CreateWithdrawRecordInput;
};


export type MutationcreateWorldCupRoomArgs = {
  input: CreateWorldCupRoomInput;
};


export type MutationcsReadArgs = {
  input: CsReadTicketMessagesInput;
};


export type MutationdeleteAgentArgs = {
  input: DeleteAgentInput;
};


export type MutationdeleteBaccaratRoomArgs = {
  input: DeleteBaccaratRoomInput;
};


export type MutationdeleteStreamArgs = {
  input: DeleteStreamInput;
};


export type MutationdeleteSubAccountArgs = {
  input: DeleteSubAccountInput;
};


export type MutationdeleteUserArgs = {
  input: DeleteUserInput;
};


export type MutationhallBaccaratShuffleArgs = {
  input: HallBaccaratShuffleInput;
};


export type MutationhallCreateBaccaratMessageArgs = {
  input: HallCreateBaccaratMessageInput;
};


export type MutationhallCreateBaccaratRoomArgs = {
  input: HallCreateBaccaratRoomInput;
};


export type MutationhallCreateGirlArgs = {
  input: HallCreateGirlInput;
};


export type MutationhallResetBaccaratCardsArgs = {
  input: HallResetBaccaratCardsInput;
};


export type MutationhallUpdateBaccaratCardArgs = {
  input: HallUpdateBaccaratCardInput;
};


export type MutationhallUpdateBaccaratCardsArgs = {
  input: HallUpdateBaccaratCardsInput;
};


export type MutationhallUpdateBaccaratGameResultArgs = {
  input: HallUpdateBaccaratGameResultInput;
};


export type MutationhallUpdateBaccaratRoomArgs = {
  input: HallUpdateBaccaratRoomInput;
};


export type MutationhallUpdateBaccaratRoundStatusArgs = {
  input: HallUpdateBaccaratRoundInput;
};


export type MutationhallUpdateBaccaratThirdCardArgs = {
  input: HallUpdateBaccaratThirdCardInput;
};


export type MutationhallUpdateGirlArgs = {
  input: HallUpdateGirlInput;
};


export type MutationjoinQueueArgs = {
  input: JoinQueueInput;
};


export type MutationlikeGirlArgs = {
  input: LikeGirlInput;
};


export type MutationlikeStreamerArgs = {
  input: LikeStreamerInput;
};


export type MutationlogoutArgs = {
  input: LogoutInput;
};


export type MutationpingRoomArgs = {
  input: PingRoomInput;
};


export type MutationresetBaccaratCardsArgs = {
  input: ResetBaccaratCardsInput;
};


export type MutationresetLastShuffleArgs = {
  input: ResetLastShuffleInput;
};


export type MutationsendBaccaratGiftArgs = {
  input: SendBaccaratGiftInput;
};


export type MutationsendGiftArgs = {
  input: SendGiftInput;
};


export type MutationsendStreamerGiftArgs = {
  input: SendStreamerGiftInput;
};


export type MutationsendVerificationCodeArgs = {
  input: SendVerificationCodeInput;
};


export type MutationsignUpArgs = {
  input: SignUpInput;
};


export type MutationtoggleAgentBotsArgs = {
  input: ToggleAgentBotsInput;
};


export type MutationtoggleEnableEditProfitArgs = {
  input: ToggleEnableEditProfitInput;
};


export type MutationtoggleEnableStreamerArgs = {
  input: ToggleEnableStreamerInput;
};


export type MutationtoggleHallArgs = {
  input: ToggleHallInput;
};


export type MutationtoggleLockArgs = {
  input: ToggleLockInput;
};


export type MutationtoggleLockdownArgs = {
  input: ToggleLockdownInput;
};


export type MutationtoggleUserLockArgs = {
  input: ToggleUserLockInput;
};


export type MutationtongShuffleArgs = {
  input: TongShuffleInput;
};


export type MutationtransferChildrenArgs = {
  input: TransferChildrenInput;
};


export type MutationunlikeGirlArgs = {
  input: UnlikeGirlInput;
};


export type MutationunlikeStreamerArgs = {
  input: UnlikeStreamerInput;
};


export type MutationupdateAdsArgs = {
  input: UpdateAdsInput;
};


export type MutationupdateAgentArgs = {
  input: UpdateAgentInput;
};


export type MutationupdateAgentAdArgs = {
  input: UpdateAgentAdInput;
};


export type MutationupdateAgentPasswordArgs = {
  input: UpdateAgentPasswordInput;
};


export type MutationupdateAnnoncementArgs = {
  input: UpdateAnnoncementInput;
};


export type MutationupdateBaccaratCardArgs = {
  input: UpdateBaccaratCardInput;
};


export type MutationupdateBaccaratCardsArgs = {
  input: UpdateBaccaratCardsInput;
};


export type MutationupdateBaccaratGameResultArgs = {
  input: UpdateBaccaratGameResultInput;
};


export type MutationupdateBaccaratRoomArgs = {
  input: UpdateBaccaratRoomInput;
};


export type MutationupdateBaccaratRoomPositionArgs = {
  input: UpdateBaccaratRoomPositionInput;
};


export type MutationupdateBaccaratRoundStatusArgs = {
  input: UpdateBaccaratRoundInput;
};


export type MutationupdateBaccaratThirdCardArgs = {
  input: UpdateBaccaratThirdCardInput;
};


export type MutationupdateBotAgentUsernamesArgs = {
  input: UpdateBotAgentUsernamesInput;
};


export type MutationupdateBotTimeArgs = {
  input: UpdateBotTimeInput;
};


export type MutationupdateCallbacksArgs = {
  input: UpdateCallbacksInput;
};


export type MutationupdateCardArgs = {
  input: UpdateCardInput;
};


export type MutationupdateCardsArgs = {
  input: UpdateCardsInput;
};


export type MutationupdateChildArgs = {
  input: UpdateChildInput;
};


export type MutationupdateDiceArgs = {
  input: UpdateDiceInput;
};


export type MutationupdateDisabledChatUsernamesArgs = {
  input: UpdateDisabledChatUsernamesInput;
};


export type MutationupdateFullChildArgs = {
  input: UpdateFullChildInput;
};


export type MutationupdateGameStatusArgs = {
  input: UpdateGameStatusInput;
};


export type MutationupdateGirlArgs = {
  input: UpdateGirlInput;
};


export type MutationupdateHallArgs = {
  input: UpdateHallInput;
};


export type MutationupdateLastSeenArgs = {
  input: UpdateLastSeenInput;
};


export type MutationupdatePlatformArgs = {
  input: UpdatePlatformInput;
};


export type MutationupdatePlayerTableLimitArgs = {
  input: UpdatePlayerTableLimitInput;
};


export type MutationupdatePoolArgs = {
  input: UpdatePoolInput;
};


export type MutationupdateProfileArgs = {
  input: UpdateProfileInput;
};


export type MutationupdateRoomArgs = {
  input: UpdateRoomInput;
};


export type MutationupdateRoomStatusArgs = {
  input: UpdateRoomStatusInput;
};


export type MutationupdateRoomTextArgs = {
  input: UpdateRoomTextInput;
};


export type MutationupdateSensitiveWordsArgs = {
  input: UpdateSensitiveWordsInput;
};


export type MutationupdateSettingsArgs = {
  input: UpdateSettingsInput;
};


export type MutationupdateStreamerArgs = {
  input: UpdateStreamerInput;
};


export type MutationupdateStreamerDisabledArgs = {
  input: UpdateStreamerDisabledInput;
};


export type MutationupdateStreamerOnlineArgs = {
  input: UpdateStreamerOnlineInput;
};


export type MutationupdateStreamerRoomArgs = {
  input: UpdateStreamerRoomInput;
};


export type MutationupdateStreamerRoomTextArgs = {
  input: UpdateStreamerRoomTextInput;
};


export type MutationupdateStreamersImageArgs = {
  input: UpdateStreamersImageInput;
};


export type MutationupdateSubAccountArgs = {
  input: UpdateSubAccountInput;
};


export type MutationupdateTicketArgs = {
  input: UpdateTicketInput;
};


export type MutationupdateTongCardsArgs = {
  input: UpdateTongCardsInput;
};


export type MutationupdateTongRoomArgs = {
  input: UpdateTongRoomInput;
};


export type MutationupdateTongRoundArgs = {
  input: UpdateTongRoundInput;
};


export type MutationupdateWithdrawStatusArgs = {
  input: UpdateWithdrawStatusInput;
};


export type MutationupdateWorldCupRoomArgs = {
  input: UpdateWorldCupRoomInput;
};


export type MutationuserReadArgs = {
  input: UserReadTicketMessagesInput;
};


export type MutationverifyCodeArgs = {
  input: VerifyCodeInput;
};


export type MutationwelcomeMessageArgs = {
  input: WelcomeMessageInput;
};

export type NiuGame = {
  __typename: 'NiuGame';
  /** 遊戲下注紀錄 */
  betRecords: Maybe<Array<FieldWrapper<BetRecord>>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 我目前的投注 */
  currentBet: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 莊家 */
  dealer: Maybe<FieldWrapper<Player>>;
  /** 本局莊家剩下幾局 */
  dealerCountLeft: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 本局排莊莊家 */
  dealerId: Maybe<FieldWrapper<Scalars['ID']>>;
  /** 骰子點數 */
  dice: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 遊戲局號 */
  gameNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** 是否已有結果 */
  hasResult: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 我的遊戲紀錄 */
  myBetRecords: Maybe<Array<FieldWrapper<BetRecord>>>;
  /** 閒1 */
  player1: Maybe<FieldWrapper<Player>>;
  /** 閒2 */
  player2: Maybe<FieldWrapper<Player>>;
  /** 閒3 */
  player3: Maybe<FieldWrapper<Player>>;
  /** 房間 */
  room: Maybe<FieldWrapper<Room>>;
  /** 狀態 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type NiuniuStatistics = {
  __typename: 'NiuniuStatistics';
  dealerWins: Maybe<FieldWrapper<Scalars['Int']>>;
  id: FieldWrapper<Scalars['ID']>;
  player1Wins: Maybe<FieldWrapper<Scalars['Int']>>;
  player2Wins: Maybe<FieldWrapper<Scalars['Int']>>;
  player3Wins: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated return type of OnBaccaratBetChanged */
export type OnBaccaratBetChangedPayload = {
  __typename: 'OnBaccaratBetChangedPayload';
  currentBaccaratBetRecord: Maybe<FieldWrapper<CurrentBaccaratBetRecord>>;
};

/** Autogenerated return type of OnBaccaratRoomChanged */
export type OnBaccaratRoomChangedPayload = {
  __typename: 'OnBaccaratRoomChangedPayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  profile: Maybe<FieldWrapper<Profile>>;
};

/** Autogenerated return type of OnNiuniuBetChanged */
export type OnNiuniuBetChangedPayload = {
  __typename: 'OnNiuniuBetChangedPayload';
  currentNiuniuBetRecord: Maybe<FieldWrapper<CurrentNiuniuBetRecord>>;
};

/** Autogenerated return type of OnNiuniuDealerQueueChanged */
export type OnNiuniuDealerQueueChangedPayload = {
  __typename: 'OnNiuniuDealerQueueChangedPayload';
  dealerQueue: Maybe<Array<FieldWrapper<QueueUser>>>;
};

/** Autogenerated return type of OnNiuniuGameChanged */
export type OnNiuniuGameChangedPayload = {
  __typename: 'OnNiuniuGameChangedPayload';
  currentNiuniuGame: FieldWrapper<NiuGame>;
};

/** Autogenerated return type of OnNiuniuTotalBetChanged */
export type OnNiuniuTotalBetChangedPayload = {
  __typename: 'OnNiuniuTotalBetChangedPayload';
  /** 該局玩家總下注 */
  currentGameBetTotal: Maybe<FieldWrapper<Scalars['JSON']>>;
};

/** Autogenerated return type of OnNotify */
export type OnNotifyPayload = {
  __typename: 'OnNotifyPayload';
  message: FieldWrapper<Scalars['String']>;
  variant: FieldWrapper<Scalars['String']>;
};

/** Autogenerated return type of OnOnlineUsersChanged */
export type OnOnlineUsersChangedPayload = {
  __typename: 'OnOnlineUsersChangedPayload';
  roomOnlineUsers: Array<FieldWrapper<User>>;
};

/** Autogenerated return type of OnProfileChanged */
export type OnProfileChangedPayload = {
  __typename: 'OnProfileChangedPayload';
  profile: FieldWrapper<Profile>;
};

/** Autogenerated return type of OnRoomChanged */
export type OnRoomChangedPayload = {
  __typename: 'OnRoomChangedPayload';
  room: Maybe<FieldWrapper<Room>>;
};

/** Autogenerated return type of OnTicketsStatusChanged */
export type OnTicketsStatusChangedPayload = {
  __typename: 'OnTicketsStatusChangedPayload';
  currentTickets: Maybe<Array<FieldWrapper<Ticket>>>;
};

/** Autogenerated return type of OnTongRoomChanged */
export type OnTongRoomChangedPayload = {
  __typename: 'OnTongRoomChangedPayload';
  profile: Maybe<FieldWrapper<Profile>>;
  tongRoom: Maybe<FieldWrapper<TongRoom>>;
};

export type Order = {
  __typename: 'Order';
  /** 訂單金額 */
  amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Webhook URL */
  callbackUrl: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** gateway */
  gateway: Maybe<FieldWrapper<Scalars['String']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 用戶請求IP */
  ipAddress: Maybe<FieldWrapper<Scalars['String']>>;
  /** 訂單號碼 */
  orderNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** 支付網址 */
  paymentUrl: Maybe<FieldWrapper<Scalars['String']>>;
  /** 訂單加密編號 */
  sign: Maybe<FieldWrapper<Scalars['String']>>;
  /** 訂單狀態 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 用戶ID */
  userId: Maybe<FieldWrapper<Scalars['ID']>>;
};

/** Autogenerated input type of PingRoom */
export type PingRoomInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** Room ID */
  forceJoinMessage?: InputMaybe<Scalars['Boolean']>;
  /** Room ID */
  roomId: Scalars['ID'];
  /** Room type */
  roomType: Scalars['String'];
};

/** Autogenerated return type of PingRoom */
export type PingRoomPayload = {
  __typename: 'PingRoomPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  status: Maybe<FieldWrapper<Scalars['String']>>;
};

export type Platform = {
  __typename: 'Platform';
  /** 最大下注 */
  baccaratMaxBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 最小下注 */
  baccaratMinBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 免轉錢包下注回調 */
  betUrl: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 幣別 */
  currency: Maybe<FieldWrapper<Scalars['String']>>;
  /** 免轉錢包預儲值回調 */
  depositUrl: Maybe<FieldWrapper<Scalars['String']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 是否為根平台 */
  isRoot: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** JWT Token */
  jwtToken: Maybe<FieldWrapper<Scalars['String']>>;
  /** 上次登入時間 */
  lastLoginAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 上次登入IP */
  lastLoginIp: Maybe<FieldWrapper<Ip>>;
  /** 自管 Token 登入回調 */
  loginUrl: Maybe<FieldWrapper<Scalars['String']>>;
  /** 平台名稱 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 平台暱稱 */
  nickname: Maybe<FieldWrapper<Scalars['String']>>;
  /** 上層平台 */
  parentPlatform: Maybe<FieldWrapper<Platform>>;
  players: Maybe<FieldWrapper<UserCollection>>;
  /** 玩家數 */
  playersCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 平台密鑰 */
  secureToken: Maybe<FieldWrapper<Scalars['String']>>;
  /** 是否自行管理Token */
  selfManageToken: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 帳號狀態 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** tree */
  tree: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 使用者帳號 */
  username: Maybe<FieldWrapper<Scalars['String']>>;
  /** uuid */
  uuid: Maybe<FieldWrapper<Scalars['String']>>;
  /** 代管 Token 遊戲回調 */
  verifyUrl: Maybe<FieldWrapper<Scalars['String']>>;
  /** 錢包類型 */
  walletType: Maybe<FieldWrapper<Scalars['String']>>;
  /** 免轉錢包輸贏回調 */
  winUrl: Maybe<FieldWrapper<Scalars['String']>>;
  /** 免轉錢包出金回調 */
  withdrawUrl: Maybe<FieldWrapper<Scalars['String']>>;
};


export type PlatformplayersArgs = {
  page: Scalars['Int'];
  perPage: Scalars['Int'];
  search?: InputMaybe<Scalars['String']>;
};

export type PlatformCollection = {
  __typename: 'PlatformCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<Platform>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type PlatformUserWinLoss = {
  __typename: 'PlatformUserWinLoss';
  /** 百家投注金額 */
  baccaratBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家有效投注 */
  baccaratEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家禮金 */
  baccaratGiftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家筆數 */
  baccaratRecordsCount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家總金額 */
  baccaratTotalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家勝點 */
  baccaratWinAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 輸贏 */
  baccaratWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 輸贏比 */
  baccaratWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 牛牛投注金額 */
  niuniuBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛有效投注 */
  niuniuEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛禮金 */
  niuniuGiftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛筆數 */
  niuniuRecordsCount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家總金額 */
  niuniuTotalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛勝點 */
  niuniuWinAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 輸贏 */
  niuniuWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 輸贏比 */
  niuniuWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 推筒子投注金額 */
  tongBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子有效投注 */
  tongEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子禮金 */
  tongGiftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子筆數 */
  tongRecordsCount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子總金額 */
  tongTotalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子勝點 */
  tongWinAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 輸贏 */
  tongWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 輸贏比 */
  tongWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 小計投注金額 */
  totalBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計有效投注 */
  totalEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計禮金 */
  totalGiftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總筆數 */
  totalRecordsCount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計勝點 */
  totalWinAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計輸贏 */
  totalWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計輸贏比 */
  totalWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

export type PlatformUserWinLossCollection = {
  __typename: 'PlatformUserWinLossCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<Scalars['JSON']>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type PlatformWinLoss = {
  __typename: 'PlatformWinLoss';
  /** 百家投注金額 */
  baccaratBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家有效投注 */
  baccaratEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家禮物 */
  baccaratGiftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家筆數 */
  baccaratRecordsCount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家輸贏 */
  baccaratWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家輸贏比 */
  baccaratWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 下層代理報表 */
  childrenReports: Maybe<Array<FieldWrapper<PlatformWinLoss>>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 牛牛投注金額 */
  niuniuBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛有效投注 */
  niuniuEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛禮物 */
  niuniuGiftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛筆數 */
  niuniuRecordsCount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛輸贏 */
  niuniuWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛輸贏比 */
  niuniuWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 代理 */
  platform: Maybe<FieldWrapper<Platform>>;
  /** 主播禮物金額 */
  streamerGiftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子投注金額 */
  tongBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子有效投注 */
  tongEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子禮物 */
  tongGiftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子筆數 */
  tongRecordsCount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子輸贏 */
  tongWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 推筒子輸贏比 */
  tongWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 小計投注金額 */
  totalBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計有效投注 */
  totalEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 禮物金額 */
  totalGiftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總筆數 */
  totalRecordsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總投注人數 */
  totalUsersCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 小計輸贏 */
  totalWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計輸贏比 */
  totalWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 玩家輸贏報表 */
  usersReports: Maybe<Array<FieldWrapper<PlatformUserWinLoss>>>;
};

export type Player = {
  __typename: 'Player';
  /** 最佳組合 */
  bestCards: Maybe<Array<FieldWrapper<Scalars['Int']>>>;
  /** 下注量 */
  betAmount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 牌面1 */
  card1: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 牌面2 */
  card2: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 牌面3 */
  card3: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 牌面4 */
  card4: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 牌面5 */
  card5: Maybe<FieldWrapper<Scalars['Int']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 是否贏 */
  isWinner: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** Player 名稱 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 結算結果 */
  result: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type PlayerGameRecordCollection = {
  __typename: 'PlayerGameRecordCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<Bet>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type PlayerTransaction = {
  __typename: 'PlayerTransaction';
  /** 地址類型 */
  addressType: Maybe<FieldWrapper<Scalars['String']>>;
  /** 管理員 */
  adminUser: Maybe<FieldWrapper<AdminUser>>;
  /** 金額 */
  amount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 玩家出入金前餘額 */
  balanceAfter: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 玩家出入金前餘額 */
  balanceBefore: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** IP */
  ipAddress: Maybe<FieldWrapper<Scalars['String']>>;
  /** 轉單站點單號或是TXID */
  remoteTransactionNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** 本站單號 */
  transactionNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** 類型 */
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 玩家 */
  user: Maybe<FieldWrapper<User>>;
  /** 玩家錢包地址 */
  userAddress: Maybe<FieldWrapper<Scalars['String']>>;
  /** uuid */
  uuid: Maybe<FieldWrapper<Scalars['String']>>;
};

export type PlayerTransactionCollection = {
  __typename: 'PlayerTransactionCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<PlayerTransaction>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type Profile = {
  __typename: 'Profile';
  /** 累计流水 */
  accumulatedBet: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 还需流水 */
  accumulatedBetLeft: Maybe<FieldWrapper<Scalars['Int']>>;
  /** Auth token */
  authToken: Maybe<FieldWrapper<Scalars['String']>>;
  /** 頭像 */
  avatar: Maybe<FieldWrapper<Scalars['String']>>;
  /** 百家最大下注 */
  baccaratMaxBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家最小下注 */
  baccaratMinBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 餘額 */
  balance: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 是否為beta用戶 */
  beta: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 是否可充值 */
  canCharge: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 是否可提領 */
  canWithdraw: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 上分 */
  creditBalance: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 發出時間 */
  currentTime: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 紅利 */
  dividend: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 追龍顆數 */
  dragonCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 有效投注總計 */
  effectiveBetTotal: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Email */
  email: Maybe<FieldWrapper<Scalars['String']>>;
  /** 是否隱藏贏點 */
  hideWinPoints: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 上層代理 */
  introducer: Maybe<FieldWrapper<User>>;
  /** 試玩者 */
  isTrial: FieldWrapper<Scalars['Boolean']>;
  /** JWT Token */
  jwtToken: Maybe<FieldWrapper<Scalars['String']>>;
  /** Line Notify Token */
  lineNotifyToken: Maybe<FieldWrapper<Scalars['String']>>;
  /** 本月下層會員 */
  monthlyReferralsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 本月反水收益 */
  monthlyReferralsRevenue: Maybe<FieldWrapper<Scalars['Float']>>;
  /** nickname */
  nickname: Maybe<FieldWrapper<Scalars['String']>>;
  /** 牛牛最打下注 */
  niuniuMaxBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛最小下注 */
  niuniuMinBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 平台是否關閉成人連結 */
  platformDisableAdult: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 平台是否關閉成人連結 */
  platformDisableCustomerService: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 推薦碼 */
  referralCode: Maybe<FieldWrapper<Scalars['String']>>;
  /** 下層會員 */
  referrals: Maybe<Array<FieldWrapper<User>>>;
  /** 下層會員人數 */
  referralsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 與本週差 */
  revenueDiffFromThisMonth: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 與本週差 */
  revenueDiffFromThisWeek: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 與昨日差 */
  revenueDiffFromYesterday: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 身分 */
  role: Maybe<FieldWrapper<Scalars['String']>>;
  /** 用戶設定 */
  settings: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 限紅最大值 */
  tableLimitMax: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 限紅最小值 */
  tableLimitMin: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 本日下層會員數 */
  todayReferralsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 本日反水收益 */
  todayReferralsRevenue: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 有效投注 */
  totalEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 有效投注 */
  totalEffectiveXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 全部反水收益 */
  totalReferralsRevenue: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 累積勝點 */
  totalWinAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 使用者名稱 */
  username: Maybe<FieldWrapper<Scalars['String']>>;
  /** VIP 等級 */
  vip: Maybe<FieldWrapper<Scalars['String']>>;
  /** 本週下層會員 */
  weeklyReferralsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 本週反水收益 */
  weeklyReferralsRevenue: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 贏上限 */
  winLimit: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 退水 */
  ximaTotal: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 退水類型 */
  ximaWay: Maybe<FieldWrapper<Scalars['String']>>;
};

export type ProfitChangeRecord = {
  __typename: 'ProfitChangeRecord';
  actionerName: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  newShareProfitRate: Maybe<FieldWrapper<Scalars['Float']>>;
  newTableLimits: Maybe<Array<FieldWrapper<Scalars['String']>>>;
  newXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  prevShareProfitRate: Maybe<FieldWrapper<Scalars['Float']>>;
  prevTableLimits: Maybe<Array<FieldWrapper<Scalars['String']>>>;
  prevXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type ProfitChangeRecordCollection = {
  __typename: 'ProfitChangeRecordCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<ProfitChangeRecord>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type Promotion = {
  __typename: 'Promotion';
  /** 管理員 */
  admin: Maybe<FieldWrapper<AdminUser>>;
  /** 條件與回饋 */
  conditionAndOffer: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 結束時間 */
  endAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 開始時間 */
  startAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 狀態 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 活動類型 */
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type PromotionCollection = {
  __typename: 'PromotionCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 活動 */
  records: Maybe<Array<FieldWrapper<Promotion>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type Query = {
  __typename: 'Query';
  /** 所有正在開放的百家樂房間 */
  activeBaccaratRooms: Maybe<Array<FieldWrapper<BaccaratRoom>>>;
  /** 房間 */
  activeRoom: Maybe<FieldWrapper<Room>>;
  /** 所有正在開放的房間 */
  activeRooms: Maybe<Array<FieldWrapper<Room>>>;
  /** 筒子房 */
  activeTongRooms: Maybe<Array<FieldWrapper<TongRoom>>>;
  activeWorldCupRoom: Maybe<FieldWrapper<WorldCupRoom>>;
  activeWorldCupRooms: Maybe<Array<FieldWrapper<WorldCupRoom>>>;
  adminHalls: Maybe<FieldWrapper<HallCollection>>;
  adminPlayerTransactions: Maybe<FieldWrapper<PlayerTransactionCollection>>;
  /** 管理員 */
  adminUsers: Maybe<FieldWrapper<AdminUserCollection>>;
  agent: Maybe<FieldWrapper<Agent>>;
  agentAd: Maybe<FieldWrapper<Scalars['String']>>;
  agentChildren: Maybe<FieldWrapper<AgentCollection>>;
  /** 代理額度變動記錄 */
  agentCreditChangeRecords: Maybe<Array<FieldWrapper<CreditChangeRecord>>>;
  agentDecendantsUsers: Maybe<FieldWrapper<UserCollection>>;
  /** 送禮紀錄 */
  agentGiftRecords: Maybe<FieldWrapper<SendGiftRecordCollection>>;
  agentRanking: Maybe<FieldWrapper<Scalars['JSON']>>;
  agentSubAccounts: Maybe<FieldWrapper<AgentCollection>>;
  agentUsers: Maybe<FieldWrapper<UserCollection>>;
  agentUsersReport: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 代理輸贏報表 */
  agentWinLoss: Maybe<FieldWrapper<AgentWinLoss>>;
  /** 代理 */
  agents: Maybe<FieldWrapper<AgentCollection>>;
  agentsReport: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 所有房間的人數 */
  allRoomTypeUsersCount: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 公告列表 */
  annoncements: Maybe<FieldWrapper<AnnoncementCollection>>;
  /** 百家下注紀錄 */
  baccaratBetRecord: Maybe<FieldWrapper<BaccaratBetRecord>>;
  /** 百家遊戲 */
  baccaratGame: Maybe<FieldWrapper<BaccaratGame>>;
  /** 遊戲結果 */
  baccaratGameResults: Maybe<Array<FieldWrapper<Scalars['String']>>>;
  baccaratGames: Maybe<FieldWrapper<BaccaratGameCollection>>;
  /** 牌路統計 */
  baccaratHistory: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 百家房間訊息 */
  baccaratMessages: Maybe<FieldWrapper<BaccaratMessageCollection>>;
  /** 百家房 */
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** 所有百家房 */
  baccaratRooms: Maybe<FieldWrapper<BaccaratRoomCollection>>;
  /** Bet record */
  betRecord: Maybe<FieldWrapper<BetRecord>>;
  botAgentUsernames: FieldWrapper<Scalars['String']>;
  botEndTime: FieldWrapper<Scalars['String']>;
  botStartTime: FieldWrapper<Scalars['String']>;
  /** 所有牌組 */
  cardSets: Maybe<Array<FieldWrapper<CardSet>>>;
  /** 所有儲值紀錄 */
  chargeRecords: Maybe<FieldWrapper<ChargeRecordCollection>>;
  childAgentWinLossReports: Maybe<Array<FieldWrapper<Agent>>>;
  /** 餘額變化記錄 */
  creditChangeRecords: Maybe<Array<FieldWrapper<CreditChangeRecord>>>;
  /** 登入管理員 */
  currentAdmin: Maybe<FieldWrapper<AdminProfile>>;
  currentAgent: Maybe<FieldWrapper<Agent>>;
  currentAvailableTickets: Maybe<Array<FieldWrapper<Ticket>>>;
  /** 登入用戶當局下注記錄 */
  currentBaccaratBetRecord: Maybe<FieldWrapper<CurrentBaccaratBetRecord>>;
  /** 百家當下遊戲 */
  currentBaccaratGame: Maybe<FieldWrapper<BaccaratGame>>;
  currentGame: Maybe<FieldWrapper<NiuGame>>;
  /** 登入廳 */
  currentHall: Maybe<FieldWrapper<Hall>>;
  /** 登入用戶當局下注紀錄 */
  currentNiuniuBetRecord: Maybe<FieldWrapper<CurrentNiuniuBetRecord>>;
  /** 牛牛當下遊戲 */
  currentNiuniuGame: Maybe<FieldWrapper<NiuGame>>;
  currentPlatform: Maybe<FieldWrapper<Platform>>;
  /** 指定上層平台下的所有平台 */
  currentPlatformChildren: Maybe<FieldWrapper<PlatformCollection>>;
  currentStreamer: FieldWrapper<Streamer>;
  /** 最近的客服問題 */
  currentTicket: Maybe<FieldWrapper<Ticket>>;
  /** 登入用戶當局下注記錄 */
  currentTongBetRecord: Maybe<FieldWrapper<CurrentTongBetRecord>>;
  /** 百家當下遊戲 */
  currentTongGame: Maybe<FieldWrapper<TongGame>>;
  /** 登入用戶 */
  currentUser: Maybe<FieldWrapper<User>>;
  /** 登入玩家投注記錄 */
  currentUserBetRecords: Maybe<FieldWrapper<CurrentUserBetRecordCollection>>;
  /** 排莊序列 */
  dealerQueue: Maybe<Array<FieldWrapper<QueueUser>>>;
  descendantAgents: Maybe<Array<FieldWrapper<Agent>>>;
  disabledChatUsernames: Maybe<FieldWrapper<Scalars['String']>>;
  enableEditProfit: Maybe<FieldWrapper<Scalars['Boolean']>>;
  enableStreamer: Maybe<FieldWrapper<Scalars['Boolean']>>;
  getCard: Maybe<FieldWrapper<Card>>;
  /** 送禮紀錄 */
  giftRecords: Maybe<FieldWrapper<GiftCollection>>;
  girl: FieldWrapper<Girl>;
  /** 所有荷官 */
  girls: Maybe<FieldWrapper<GirlCollection>>;
  /** 廳房間 */
  hallActiveBaccaratRooms: Maybe<Array<FieldWrapper<BaccaratRoom>>>;
  hallBaccaratGames: Maybe<FieldWrapper<BaccaratGameCollection>>;
  /** 百家房間訊息 */
  hallBaccaratMessages: Maybe<FieldWrapper<BaccaratMessageCollection>>;
  /** 百家房 */
  hallBaccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** 所有百家房 */
  hallBaccaratRooms: Maybe<FieldWrapper<BaccaratRoomCollection>>;
  /** 送禮紀錄 */
  hallGiftRecords: Maybe<FieldWrapper<GiftCollection>>;
  /** 所有荷官 */
  hallGirls: Maybe<FieldWrapper<GirlCollection>>;
  hallRoomGirl: Maybe<FieldWrapper<Girl>>;
  /** 所有廳 */
  halls: Maybe<Array<FieldWrapper<Hall>>>;
  /** 問題回報 */
  issue: Maybe<FieldWrapper<Issue>>;
  /** 問題回報 */
  issues: Maybe<FieldWrapper<IssueCollection>>;
  leaderboard: Maybe<FieldWrapper<Scalars['JSON']>>;
  listHalls: Maybe<Array<FieldWrapper<Hall>>>;
  /** 即時下注 */
  liveBaccaratBetRecords: Maybe<FieldWrapper<BaccaratBetRecordCollection>>;
  loadingAds: Maybe<Array<FieldWrapper<Scalars['String']>>>;
  lockdown: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 房間訊息 */
  messages: Maybe<FieldWrapper<MessageCollection>>;
  /** 我的記錄 */
  myRecords: Maybe<FieldWrapper<RecordCollection>>;
  newAgentUsersReport: Maybe<FieldWrapper<Scalars['JSON']>>;
  newAgentsReport: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 新路 */
  newBaccaratGameResults: Maybe<FieldWrapper<Scalars['JSON']>>;
  newStreamerRanking: Maybe<Array<FieldWrapper<Streamer>>>;
  niuGame: Maybe<FieldWrapper<NiuGame>>;
  /** 牛牛最近牌路統計 */
  niuniuRecentGamesStatistics: Maybe<FieldWrapper<NiuniuStatistics>>;
  /** 線上用戶 */
  onlineUsers: Maybe<Array<FieldWrapper<User>>>;
  /** 平台 */
  platform: Maybe<FieldWrapper<Platform>>;
  /** 指定上層平台下的所有平台 */
  platformChildren: Maybe<FieldWrapper<PlatformCollection>>;
  /** 對押記錄 */
  platformDoubleBets: Array<FieldWrapper<DoubleBet>>;
  platformGifts: Maybe<FieldWrapper<GiftCollection>>;
  /** 平台玩家輸贏 */
  platformUserWinLoss: Maybe<FieldWrapper<PlatformUserWinLossCollection>>;
  /** 代理輸贏報表 */
  platformWinLoss: Maybe<FieldWrapper<PlatformWinLoss>>;
  playerGameRecords: Maybe<FieldWrapper<PlayerGameRecordCollection>>;
  /** 玩家出入金紀錄 */
  playerTransactions: Maybe<FieldWrapper<PlayerTransactionCollection>>;
  pool: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 登入用戶 */
  profile: Maybe<FieldWrapper<Profile>>;
  profitChangeHistory: Maybe<FieldWrapper<ProfitChangeRecordCollection>>;
  /** 所有活動 */
  promotions: Maybe<FieldWrapper<PromotionCollection>>;
  ranking: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** true */
  recentNiuGames: Maybe<Array<FieldWrapper<NiuGame>>>;
  roadsAndImage: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 房間 */
  room: Maybe<FieldWrapper<Room>>;
  roomGirl: Maybe<FieldWrapper<Girl>>;
  /** 房間人數 */
  roomOnlineUsers: Maybe<Array<FieldWrapper<User>>>;
  roomText: Maybe<FieldWrapper<Scalars['String']>>;
  /** 所有房間 */
  rooms: Maybe<FieldWrapper<RoomCollection>>;
  /** 所有上層平台 */
  rootPlatforms: Maybe<FieldWrapper<PlatformCollection>>;
  searchAgentBetRecords: Maybe<FieldWrapper<SearchAgentBetRecords>>;
  /** 代理額度變動記錄 */
  searchAgentCreditChangeRecords: Maybe<Array<FieldWrapper<CreditChangeRecord>>>;
  searchDoubleBet: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 代理額度變動記錄 */
  searchUserCreditChangeRecords: Maybe<FieldWrapper<CreditChangeRecordCollection>>;
  /** 送禮紀錄 */
  sendGiftRecords: Maybe<FieldWrapper<SendGiftRecordCollection>>;
  sensitiveWords: Maybe<FieldWrapper<Scalars['String']>>;
  streamer: FieldWrapper<Streamer>;
  streamerGiftRecords: FieldWrapper<SendGiftRecordCollection>;
  streamerLastSessionRanking: Array<FieldWrapper<RankingRow>>;
  streamerRanking: Array<FieldWrapper<RankingRow>>;
  streamerThisWeekSessions: Array<FieldWrapper<StreamerSession>>;
  streamers: Array<FieldWrapper<Streamer>>;
  streamersImage: Maybe<FieldWrapper<Scalars['String']>>;
  /** 分組限紅 */
  tableLimits: Maybe<FieldWrapper<TableLimitCollection>>;
  /** 客服訊息 */
  ticketMessages: Maybe<FieldWrapper<TicketMessageCollection>>;
  /** 下注紀錄 */
  tongBetRecord: Maybe<FieldWrapper<TongBetRecord>>;
  /** 筒子局 */
  tongGame: Maybe<FieldWrapper<TongGame>>;
  /** 推筒子房 */
  tongRoom: Maybe<FieldWrapper<TongRoom>>;
  /** 所有推筒子房 */
  tongRooms: Maybe<FieldWrapper<TongRoomCollection>>;
  /** 下注紀錄查詢 */
  userBetRecord: Maybe<FieldWrapper<BetRecord>>;
  /** 單一用戶下注紀錄 */
  userBetRecords: Maybe<FieldWrapper<BetRecordCollection>>;
  /** 單一用戶儲值紀錄 */
  userChargeRecords: Maybe<FieldWrapper<ChargeRecordCollection>>;
  /** 代理額度變動記錄 */
  userCreditChangeRecords: Maybe<FieldWrapper<CreditChangeRecordCollection>>;
  userRanking: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 用戶記錄 */
  userRecords: Maybe<FieldWrapper<RecordCollection>>;
  /** 會員列表 */
  users: Maybe<FieldWrapper<UserCollection>>;
  /** 錢包資訊 */
  wallet: Maybe<FieldWrapper<Wallet>>;
  walletAddresses: Maybe<FieldWrapper<WalletAddressCollection>>;
  /** 所有提現紀錄 */
  withdrawRecords: Maybe<FieldWrapper<WithdrawRecordCollection>>;
  worldCupRooms: Maybe<FieldWrapper<WorldCupRoomCollection>>;
};


export type QueryactiveRoomArgs = {
  id: Scalars['ID'];
};


export type QueryadminHallsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryadminPlayerTransactionsArgs = {
  page?: Scalars['Int'];
  perPage?: Scalars['Int'];
};


export type QueryadminUsersArgs = {
  admin?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryagentArgs = {
  fallbackToCurrent?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  username?: InputMaybe<Scalars['String']>;
};


export type QueryagentChildrenArgs = {
  agentId?: InputMaybe<Scalars['ID']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  username?: InputMaybe<Scalars['String']>;
};


export type QueryagentCreditChangeRecordsArgs = {
  agentId: Scalars['ID'];
};


export type QueryagentDecendantsUsersArgs = {
  agentId?: InputMaybe<Scalars['ID']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  username?: InputMaybe<Scalars['String']>;
};


export type QueryagentGiftRecordsArgs = {
  agentId: Scalars['ID'];
  endDate: Scalars['ISO8601DateTime'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  startDate: Scalars['ISO8601DateTime'];
};


export type QueryagentRankingArgs = {
  selected: Scalars['String'];
};


export type QueryagentSubAccountsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  username?: InputMaybe<Scalars['String']>;
};


export type QueryagentUsersArgs = {
  agentId: Scalars['ID'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryagentUsersReportArgs = {
  agentId: Scalars['ID'];
  endDate: Scalars['ISO8601DateTime'];
  startDate: Scalars['ISO8601DateTime'];
};


export type QueryagentWinLossArgs = {
  agentId: Scalars['ID'];
  endDate: Scalars['ISO8601DateTime'];
  startDate: Scalars['ISO8601DateTime'];
  username?: InputMaybe<Scalars['String']>;
};


export type QueryagentsArgs = {
  agent?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryagentsReportArgs = {
  agentId?: InputMaybe<Scalars['ID']>;
  endDate: Scalars['ISO8601DateTime'];
  startDate: Scalars['ISO8601DateTime'];
};


export type QueryannoncementsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QuerybaccaratBetRecordArgs = {
  betNo: Scalars['String'];
};


export type QuerybaccaratGameArgs = {
  betNo: Scalars['String'];
};


export type QuerybaccaratGameResultsArgs = {
  roomId: Scalars['ID'];
};


export type QuerybaccaratGamesArgs = {
  endAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  gameNo?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  roomId?: InputMaybe<Scalars['ID']>;
  startAt?: InputMaybe<Scalars['ISO8601DateTime']>;
};


export type QuerybaccaratHistoryArgs = {
  roomId: Scalars['ID'];
};


export type QuerybaccaratMessagesArgs = {
  baccaratRoomId: Scalars['ID'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QuerybaccaratRoomArgs = {
  id: Scalars['ID'];
};


export type QuerybaccaratRoomsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QuerybetRecordArgs = {
  betNo: Scalars['String'];
};


export type QuerychargeRecordsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QuerychildAgentWinLossReportsArgs = {
  parentUsername?: InputMaybe<Scalars['String']>;
};


export type QuerycreditChangeRecordsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  types?: InputMaybe<Array<Scalars['String']>>;
};


export type QuerycurrentBaccaratBetRecordArgs = {
  baccaratRoomId: Scalars['ID'];
};


export type QuerycurrentBaccaratGameArgs = {
  baccaratRoomId: Scalars['ID'];
};


export type QuerycurrentGameArgs = {
  roomId: Scalars['ID'];
};


export type QuerycurrentNiuniuBetRecordArgs = {
  roomId: Scalars['ID'];
};


export type QuerycurrentNiuniuGameArgs = {
  roomId: Scalars['ID'];
};


export type QuerycurrentPlatformChildrenArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QuerycurrentTongBetRecordArgs = {
  tongRoomId: Scalars['ID'];
};


export type QuerycurrentTongGameArgs = {
  tongRoomId: Scalars['ID'];
};


export type QuerycurrentUserBetRecordsArgs = {
  endDate?: InputMaybe<Scalars['ISO8601DateTime']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  startDate?: InputMaybe<Scalars['ISO8601DateTime']>;
};


export type QuerydealerQueueArgs = {
  roomId: Scalars['ID'];
};


export type QuerygetCardArgs = {
  rfid: Scalars['String'];
};


export type QuerygiftRecordsArgs = {
  endDate?: InputMaybe<Scalars['ISO8601DateTime']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  roomId: Scalars['ID'];
  roomType: Scalars['String'];
  startDate?: InputMaybe<Scalars['ISO8601DateTime']>;
};


export type QuerygirlArgs = {
  id: Scalars['ID'];
};


export type QuerygirlsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryhallActiveBaccaratRoomsArgs = {
  hallId: Scalars['ID'];
};


export type QueryhallBaccaratGamesArgs = {
  endAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  gameNo?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  roomId?: InputMaybe<Scalars['ID']>;
  startAt?: InputMaybe<Scalars['ISO8601DateTime']>;
};


export type QueryhallBaccaratMessagesArgs = {
  baccaratRoomId: Scalars['ID'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryhallBaccaratRoomArgs = {
  id: Scalars['ID'];
};


export type QueryhallBaccaratRoomsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryhallGiftRecordsArgs = {
  endDate?: InputMaybe<Scalars['ISO8601DateTime']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  roomId: Scalars['ID'];
  roomType: Scalars['String'];
  startDate?: InputMaybe<Scalars['ISO8601DateTime']>;
};


export type QueryhallGirlsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryhallRoomGirlArgs = {
  roomId: Scalars['ID'];
  roomType: Scalars['String'];
};


export type QueryissueArgs = {
  id: Scalars['ID'];
};


export type QueryissuesArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryleaderboardArgs = {
  type?: Scalars['String'];
};


export type QueryliveBaccaratBetRecordsArgs = {
  endDate: Scalars['ISO8601DateTime'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  startDate: Scalars['ISO8601DateTime'];
};


export type QuerymessagesArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  roomId: Scalars['ID'];
};


export type QuerymyRecordsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
};


export type QuerynewAgentUsersReportArgs = {
  agentId: Scalars['ID'];
  endDate: Scalars['ISO8601DateTime'];
  startDate: Scalars['ISO8601DateTime'];
};


export type QuerynewAgentsReportArgs = {
  agentId?: InputMaybe<Scalars['ID']>;
  column: Scalars['String'];
  direction: Scalars['String'];
  endDate: Scalars['ISO8601DateTime'];
  startDate: Scalars['ISO8601DateTime'];
  type: Scalars['String'];
};


export type QuerynewBaccaratGameResultsArgs = {
  columns?: InputMaybe<Scalars['Int']>;
  roomId: Scalars['ID'];
  rows?: InputMaybe<Scalars['Int']>;
};


export type QuerynewStreamerRankingArgs = {
  range: Scalars['String'];
};


export type QueryniuGameArgs = {
  gameId: Scalars['ID'];
};


export type QueryniuniuRecentGamesStatisticsArgs = {
  roomId: Scalars['ID'];
};


export type QueryonlineUsersArgs = {
  roomId: Scalars['ID'];
};


export type QueryplatformArgs = {
  id?: InputMaybe<Scalars['ID']>;
};


export type QueryplatformChildrenArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  platformId: Scalars['Int'];
};


export type QueryplatformDoubleBetsArgs = {
  amount: Scalars['Int'];
  endDate: Scalars['ISO8601DateTime'];
  startDate: Scalars['ISO8601DateTime'];
};


export type QueryplatformGiftsArgs = {
  endAt: Scalars['ISO8601DateTime'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  player?: InputMaybe<Scalars['String']>;
  roomUuid?: InputMaybe<Scalars['String']>;
  startAt: Scalars['ISO8601DateTime'];
};


export type QueryplatformUserWinLossArgs = {
  endDate: Scalars['ISO8601DateTime'];
  page: Scalars['Int'];
  perPage: Scalars['Int'];
  platformId: Scalars['ID'];
  startDate: Scalars['ISO8601DateTime'];
};


export type QueryplatformWinLossArgs = {
  endDate: Scalars['ISO8601DateTime'];
  platformId: Scalars['ID'];
  startDate: Scalars['ISO8601DateTime'];
  username?: InputMaybe<Scalars['String']>;
};


export type QueryplayerGameRecordsArgs = {
  betNo?: InputMaybe<Scalars['String']>;
  endAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  gameNo?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  platformUsername?: InputMaybe<Scalars['String']>;
  playerId?: InputMaybe<Scalars['ID']>;
  playerUsername?: InputMaybe<Scalars['String']>;
  roomUuid?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['ISO8601DateTime']>;
};


export type QueryplayerTransactionsArgs = {
  endAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  method?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  platformUsername?: InputMaybe<Scalars['String']>;
  playerId?: InputMaybe<Scalars['ID']>;
  playerUsername?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  transactionNo?: InputMaybe<Scalars['String']>;
};


export type QueryprofitChangeHistoryArgs = {
  id: Scalars['ID'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  type: Scalars['String'];
};


export type QuerypromotionsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryrankingArgs = {
  selected: Scalars['String'];
};


export type QueryrecentNiuGamesArgs = {
  roomId: Scalars['ID'];
};


export type QueryroadsAndImageArgs = {
  id: Scalars['ID'];
};


export type QueryroomArgs = {
  id: Scalars['ID'];
};


export type QueryroomGirlArgs = {
  roomId: Scalars['ID'];
  roomType: Scalars['String'];
};


export type QueryroomOnlineUsersArgs = {
  roomId: Scalars['ID'];
  roomType: Scalars['String'];
};


export type QueryroomsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryrootPlatformsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QuerysearchAgentBetRecordsArgs = {
  agentName?: InputMaybe<Scalars['String']>;
  betNo?: InputMaybe<Scalars['String']>;
  endDate: Scalars['ISO8601DateTime'];
  gameNo?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  startDate: Scalars['ISO8601DateTime'];
  user?: InputMaybe<Scalars['String']>;
};


export type QuerysearchAgentCreditChangeRecordsArgs = {
  agentName?: InputMaybe<Scalars['String']>;
  endDate: Scalars['ISO8601DateTime'];
  startDate: Scalars['ISO8601DateTime'];
  type?: InputMaybe<Scalars['String']>;
};


export type QuerysearchDoubleBetArgs = {
  amount?: Scalars['Int'];
  endAt: Scalars['ISO8601DateTime'];
  playerId: Scalars['ID'];
  startAt: Scalars['ISO8601DateTime'];
};


export type QuerysearchUserCreditChangeRecordsArgs = {
  endDate: Scalars['ISO8601DateTime'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  startDate: Scalars['ISO8601DateTime'];
  type?: InputMaybe<Scalars['String']>;
  userName?: InputMaybe<Scalars['String']>;
};


export type QuerysendGiftRecordsArgs = {
  endDate: Scalars['ISO8601DateTime'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  startDate: Scalars['ISO8601DateTime'];
};


export type QuerystreamerArgs = {
  id: Scalars['ID'];
};


export type QuerystreamerGiftRecordsArgs = {
  endDate: Scalars['ISO8601DateTime'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  startDate: Scalars['ISO8601DateTime'];
  streamerId: Scalars['ID'];
};


export type QuerystreamerLastSessionRankingArgs = {
  streamerId: Scalars['ID'];
};


export type QuerystreamerRankingArgs = {
  streamerId: Scalars['ID'];
};


export type QuerystreamerThisWeekSessionsArgs = {
  streamerId?: InputMaybe<Scalars['ID']>;
};


export type QuerystreamersArgs = {
  withDisabled?: InputMaybe<Scalars['Boolean']>;
};


export type QuerytableLimitsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryticketMessagesArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  ticketId: Scalars['ID'];
};


export type QuerytongBetRecordArgs = {
  betNo: Scalars['String'];
};


export type QuerytongGameArgs = {
  betNo: Scalars['String'];
};


export type QuerytongRoomArgs = {
  id: Scalars['ID'];
};


export type QuerytongRoomsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryuserBetRecordArgs = {
  betNo: Scalars['String'];
};


export type QueryuserBetRecordsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  userId: Scalars['ID'];
};


export type QueryuserChargeRecordsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  userId: Scalars['ID'];
};


export type QueryuserCreditChangeRecordsArgs = {
  endDate: Scalars['ISO8601DateTime'];
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  startDate: Scalars['ISO8601DateTime'];
  userId: Scalars['ID'];
};


export type QueryuserRankingArgs = {
  range: Scalars['String'];
  type: Scalars['String'];
};


export type QueryuserRecordsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
  userId: Scalars['ID'];
};


export type QueryusersArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  user?: InputMaybe<Scalars['String']>;
};


export type QuerywalletAddressesArgs = {
  page?: Scalars['Int'];
  perPage?: Scalars['Int'];
};


export type QuerywithdrawRecordsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryworldCupRoomsArgs = {
  page?: Scalars['Int'];
  perPage?: Scalars['Int'];
};

export type QueueUser = {
  __typename: 'QueueUser';
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  user: Maybe<FieldWrapper<User>>;
};

export type RankingRow = {
  __typename: 'RankingRow';
  amount: FieldWrapper<Scalars['Int']>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  nickname: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type RecordCollection = {
  __typename: 'RecordCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 記錄 */
  records: Maybe<Array<FieldWrapper<RecordInterface>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type RecordInterface = {
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  user: Maybe<FieldWrapper<User>>;
};

export type ReferenceRecordInterface = {
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  id: FieldWrapper<Scalars['ID']>;
  user: Maybe<FieldWrapper<User>>;
};

/** Autogenerated input type of ResetBaccaratCards */
export type ResetBaccaratCardsInput = {
  baccaratRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of ResetBaccaratCards */
export type ResetBaccaratCardsPayload = {
  __typename: 'ResetBaccaratCardsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of ResetLastShuffle */
export type ResetLastShuffleInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  roomId: Scalars['ID'];
};

/** Autogenerated return type of ResetLastShuffle */
export type ResetLastShufflePayload = {
  __typename: 'ResetLastShufflePayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

export type Return = RecordInterface & {
  __typename: 'Return';
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  user: Maybe<FieldWrapper<User>>;
};

export type Room = {
  __typename: 'Room';
  /** 下注區塊顏色A */
  a: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 開房時間 */
  activeAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 傾斜角度 */
  angle: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 下注區塊顏色B */
  b: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 玩家是否可排隊當莊 */
  canBeDealer: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 關房時間 */
  closeAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 下注區塊顏色 */
  color: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 最新一局 */
  currentGame: Maybe<FieldWrapper<NiuGame>>;
  /** 登入用戶當局下注紀錄 */
  currentNiuniuBetRecord: Maybe<FieldWrapper<CurrentNiuniuBetRecord>>;
  /** 排莊最小餘額限制 */
  dealerMinBalance: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 莊家勝利局數 */
  dealerWinsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 水錢 */
  fee: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 下注區塊顏色G */
  g: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 完成局數 */
  gamesCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 荷官 */
  girl: Maybe<FieldWrapper<Girl>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 測試模式 */
  isTesting: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 最近8場遊戲結果 */
  lastEightGames: Maybe<Array<FieldWrapper<NiuGame>>>;
  /** 最大注上限 */
  maxBet: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 單門最大下注量 */
  maxSinglePlayerBet: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 最小注下限 */
  minBet: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 房間名 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 牛7賠率 */
  odds7: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 牛8賠率 */
  odds8: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 牛9賠率 */
  odds9: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 牛牛賠率 */
  odds20: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 五公賠率 */
  odds50: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 線上人數 */
  onlineUsersCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 開牌秒數 */
  openingSeconds: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 莊家勝利局數 */
  player1WinsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 莊家勝利局數 */
  player2WinsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 莊家勝利局數 */
  player3WinsCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 排隊序列 */
  queueUsers: Maybe<Array<FieldWrapper<User>>>;
  /** 下注區塊顏色R */
  r: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 房間狀態 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 主視訊key */
  streamKey: Maybe<FieldWrapper<Scalars['String']>>;
  /** 主視訊Name */
  streamName: Maybe<FieldWrapper<Scalars['String']>>;
  /** 額外鏡位 */
  streams: Maybe<Array<FieldWrapper<Stream>>>;
  /** 累積下注金額 */
  totalBetAmount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 所有局數收到的水錢總和 */
  totalBetFeeAmount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 下注倒數秒數 */
  waitingBetSeconds: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type RoomCollection = {
  __typename: 'RoomCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 房間 */
  records: Maybe<Array<FieldWrapper<Room>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type SearchAgentBetRecords = {
  __typename: 'SearchAgentBetRecords';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前頁數莊家總下注 */
  currentPageDealer: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數莊對總下注 */
  currentPageDealerPair: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數閒家總下注 */
  currentPagePlayer: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數閒對總下注 */
  currentPagePlayerPair: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數幸運6總下注 */
  currentPageSuper6: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數和局總下注 */
  currentPageTie: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數總下注 */
  currentPageTotalBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數總勝點 */
  currentPageTotalWinAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數總輸贏 */
  currentPageWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數總退水 */
  currentPageWinReturn: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 玩家下注記錄 */
  records: Maybe<Array<FieldWrapper<BetInterface>>>;
  /** 總投注 */
  totalBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前頁數莊家總下注 */
  totalPageDealer: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數莊對總下注 */
  totalPageDealerPair: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數閒家總下注 */
  totalPagePlayer: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數閒對總下注 */
  totalPagePlayerPair: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數幸運6總下注 */
  totalPageSuper6: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數和局總下注 */
  totalPageTie: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數總下注 */
  totalPageTotalBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數總勝點 */
  totalPageTotalWinAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數總輸贏 */
  totalPageWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 目前頁數總退水 */
  totalPageWinReturn: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總輸贏 */
  winLoss: Maybe<FieldWrapper<Scalars['Float']>>;
};

/** Autogenerated input type of SendBaccaratGift */
export type SendBaccaratGiftInput = {
  /** 房間 */
  baccaratRoomId?: InputMaybe<Scalars['ID']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 禮物 */
  gift: Scalars['String'];
};

/** Autogenerated return type of SendBaccaratGift */
export type SendBaccaratGiftPayload = {
  __typename: 'SendBaccaratGiftPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  profile: Maybe<FieldWrapper<Profile>>;
};

export type SendGift = RecordInterface & {
  __typename: 'SendGift';
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  user: Maybe<FieldWrapper<User>>;
};

/** Autogenerated input type of SendGift */
export type SendGiftInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 禮物 */
  gift: Scalars['String'];
  /** 房間 */
  roomId?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of SendGift */
export type SendGiftPayload = {
  __typename: 'SendGiftPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  profile: Maybe<FieldWrapper<Profile>>;
};

export type SendGiftRecordCollection = {
  __typename: 'SendGiftRecordCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<SendGift>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of SendStreamerGift */
export type SendStreamerGiftInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 禮物 */
  gift: Scalars['String'];
  /** 房間 */
  streamerId: Scalars['ID'];
};

/** Autogenerated return type of SendStreamerGift */
export type SendStreamerGiftPayload = {
  __typename: 'SendStreamerGiftPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  profile: Maybe<FieldWrapper<Profile>>;
};

/** Autogenerated input type of SendVerificationCode */
export type SendVerificationCodeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** phone */
  phone: Scalars['String'];
};

/** Autogenerated return type of SendVerificationCode */
export type SendVerificationCodePayload = {
  __typename: 'SendVerificationCodePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  /** ok */
  ok: FieldWrapper<Scalars['Boolean']>;
};

/** Autogenerated input type of SignUp */
export type SignUpInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** nickname */
  nickname: Scalars['String'];
  /** Password */
  password: Scalars['String'];
  /** username */
  username: Scalars['String'];
};

/** Autogenerated return type of SignUp */
export type SignUpPayload = {
  __typename: 'SignUpPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  profile: Maybe<FieldWrapper<Profile>>;
};

export type SourceInterface = {
  id: FieldWrapper<Scalars['ID']>;
  name: Maybe<FieldWrapper<Scalars['String']>>;
  username: Maybe<FieldWrapper<Scalars['String']>>;
};

export type Stream = {
  __typename: 'Stream';
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 串流key */
  key: Maybe<FieldWrapper<Scalars['String']>>;
  /** 串流名 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type Streamer = {
  __typename: 'Streamer';
  /** 頭像 */
  avatar: Maybe<FieldWrapper<Scalars['String']>>;
  /** 綁定房間 */
  boundRoom: FieldWrapper<BaccaratRoom>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 下架 */
  disabled: FieldWrapper<Scalars['Boolean']>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  isLiked: FieldWrapper<Scalars['Boolean']>;
  likesCount: FieldWrapper<Scalars['Int']>;
  /** Line連結 */
  lineLink: Maybe<FieldWrapper<Scalars['String']>>;
  /** 名字 */
  nickname: FieldWrapper<Scalars['String']>;
  /** 上線狀態 */
  online: FieldWrapper<Scalars['Boolean']>;
  /** 沒上線時的房間文案 */
  roomText: Maybe<FieldWrapper<Scalars['String']>>;
  /** 連贏/連輸次數 */
  streak: FieldWrapper<Scalars['Int']>;
  /** 串流資訊 */
  stream: FieldWrapper<Stream>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 帳號 */
  username: FieldWrapper<Scalars['String']>;
  /** 勝率 */
  winRate: FieldWrapper<Scalars['Float']>;
};

export type StreamerSession = {
  __typename: 'StreamerSession';
  /** 結束時間 */
  endAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 開台時間 */
  hours: Maybe<FieldWrapper<Scalars['Float']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 開始時間 */
  startAt: FieldWrapper<Scalars['ISO8601DateTime']>;
};

export type Subscription = {
  __typename: 'Subscription';
  /** 百家下注狀態變化 */
  onBaccaratBetChanged: Maybe<FieldWrapper<OnBaccaratBetChangedPayload>>;
  /** 百家房新訊息 */
  onBaccaratNewMessage: Maybe<FieldWrapper<BaccaratMessage>>;
  /** 百家房間狀態變化 */
  onBaccaratRoomChanged: Maybe<FieldWrapper<OnBaccaratRoomChangedPayload>>;
  /** 牛牛房新訊息 */
  onNewMessage: Maybe<FieldWrapper<Message>>;
  /** 新客服訊息 */
  onNewTicketMessage: Maybe<FieldWrapper<TicketMessageInterface>>;
  /** 牛牛下注狀態變化 */
  onNiuniuBetChanged: Maybe<FieldWrapper<OnNiuniuBetChangedPayload>>;
  /** 牛牛排莊序列變化 */
  onNiuniuDealerQueueChanged: Maybe<FieldWrapper<OnNiuniuDealerQueueChangedPayload>>;
  /** 牛牛遊戲狀態變化 */
  onNiuniuGameChanged: Maybe<FieldWrapper<OnNiuniuGameChangedPayload>>;
  /** 牛牛總下注狀態變化 */
  onNiuniuTotalBetChanged: Maybe<FieldWrapper<OnNiuniuTotalBetChangedPayload>>;
  /** 用戶通知 */
  onNotify: Maybe<FieldWrapper<OnNotifyPayload>>;
  /** 線上用戶變化 */
  onOnlineUsersChanged: Maybe<FieldWrapper<OnOnlineUsersChangedPayload>>;
  /** 個人資料變化 */
  onProfileChanged: Maybe<FieldWrapper<OnProfileChangedPayload>>;
  /** 牛牛房間狀態變化 */
  onRoomChanged: Maybe<FieldWrapper<OnRoomChangedPayload>>;
  /** 訂閱所有我的客服案件變化 */
  onTicketsStatusChanged: Maybe<FieldWrapper<OnTicketsStatusChangedPayload>>;
  /** 推筒子房間狀態變化 */
  onTongRoomChanged: Maybe<FieldWrapper<OnTongRoomChangedPayload>>;
  /** 線上用戶變化 */
  onUserOnlineChanged: Maybe<Array<FieldWrapper<User>>>;
};


export type SubscriptiononBaccaratBetChangedArgs = {
  baccaratRoomId: Scalars['ID'];
};


export type SubscriptiononBaccaratNewMessageArgs = {
  baccaratRoomId: Scalars['ID'];
};


export type SubscriptiononBaccaratRoomChangedArgs = {
  baccaratRoomId: Scalars['ID'];
};


export type SubscriptiononNewMessageArgs = {
  roomId: Scalars['ID'];
};


export type SubscriptiononNewTicketMessageArgs = {
  ticketId: Scalars['ID'];
};


export type SubscriptiononNiuniuBetChangedArgs = {
  roomId: Scalars['ID'];
};


export type SubscriptiononNiuniuDealerQueueChangedArgs = {
  roomId: Scalars['ID'];
};


export type SubscriptiononNiuniuGameChangedArgs = {
  roomId: Scalars['ID'];
};


export type SubscriptiononNiuniuTotalBetChangedArgs = {
  roomId: Scalars['ID'];
};


export type SubscriptiononOnlineUsersChangedArgs = {
  roomId: Scalars['ID'];
  roomType: Scalars['String'];
};


export type SubscriptiononRoomChangedArgs = {
  roomId: Scalars['ID'];
};


export type SubscriptiononTongRoomChangedArgs = {
  tongRoomId: Scalars['ID'];
};


export type SubscriptiononUserOnlineChangedArgs = {
  roomId: Scalars['ID'];
};

export type TableLimit = {
  __typename: 'TableLimit';
  /** 建立者 */
  adminUser: Maybe<FieldWrapper<AdminUser>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 上限 */
  max: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 下限 */
  min: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 限紅組名稱 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type TableLimitCollection = {
  __typename: 'TableLimitCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<TableLimit>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type Ticket = {
  __typename: 'Ticket';
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 客服 */
  cs: Maybe<FieldWrapper<AdminUser>>;
  /** 客服未讀訊息數量 */
  csUnreadCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 備註 */
  description: Maybe<FieldWrapper<Scalars['String']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  lastMessage: Maybe<FieldWrapper<Scalars['String']>>;
  messages: Maybe<Array<FieldWrapper<TicketMessageInterface>>>;
  /** 狀態 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
  /** 用戶未讀訊息數量 */
  userUnreadCount: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type TicketMessageCollection = {
  __typename: 'TicketMessageCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 客服訊息 */
  records: Maybe<Array<FieldWrapper<TicketMessageInterface>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type TicketMessageImage = TicketMessageInterface & {
  __typename: 'TicketMessageImage';
  /** 內容 */
  body: Maybe<FieldWrapper<Scalars['String']>>;
  createdAt: FieldWrapper<Scalars['ISO8601DateTime']>;
  /** 客服 */
  cs: Maybe<FieldWrapper<AdminUser>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 是否已讀 */
  read: Maybe<FieldWrapper<Scalars['Boolean']>>;
  ticketId: Maybe<FieldWrapper<Scalars['ID']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

export type TicketMessageInterface = {
  /** 內容 */
  body: Maybe<FieldWrapper<Scalars['String']>>;
  createdAt: FieldWrapper<Scalars['ISO8601DateTime']>;
  /** 客服 */
  cs: Maybe<FieldWrapper<AdminUser>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 是否已讀 */
  read: Maybe<FieldWrapper<Scalars['Boolean']>>;
  ticketId: Maybe<FieldWrapper<Scalars['ID']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

export type TicketMessageText = TicketMessageInterface & {
  __typename: 'TicketMessageText';
  /** 內容 */
  body: Maybe<FieldWrapper<Scalars['String']>>;
  createdAt: FieldWrapper<Scalars['ISO8601DateTime']>;
  /** 客服 */
  cs: Maybe<FieldWrapper<AdminUser>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 是否已讀 */
  read: Maybe<FieldWrapper<Scalars['Boolean']>>;
  ticketId: Maybe<FieldWrapper<Scalars['ID']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

export type TicketMessageVideo = TicketMessageInterface & {
  __typename: 'TicketMessageVideo';
  /** 內容 */
  body: Maybe<FieldWrapper<Scalars['String']>>;
  createdAt: FieldWrapper<Scalars['ISO8601DateTime']>;
  /** 客服 */
  cs: Maybe<FieldWrapper<AdminUser>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 是否已讀 */
  read: Maybe<FieldWrapper<Scalars['Boolean']>>;
  ticketId: Maybe<FieldWrapper<Scalars['ID']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

/** Autogenerated input type of ToggleAgentBots */
export type ToggleAgentBotsInput = {
  agentId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of ToggleAgentBots */
export type ToggleAgentBotsPayload = {
  __typename: 'ToggleAgentBotsPayload';
  agent: FieldWrapper<Agent>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
};

/** Autogenerated input type of ToggleEnableEditProfit */
export type ToggleEnableEditProfitInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  value: Scalars['Boolean'];
};

/** Autogenerated return type of ToggleEnableEditProfit */
export type ToggleEnableEditProfitPayload = {
  __typename: 'ToggleEnableEditProfitPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  status: Maybe<FieldWrapper<Scalars['Boolean']>>;
};

/** Autogenerated input type of ToggleEnableStreamer */
export type ToggleEnableStreamerInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  value: Scalars['Boolean'];
};

/** Autogenerated return type of ToggleEnableStreamer */
export type ToggleEnableStreamerPayload = {
  __typename: 'ToggleEnableStreamerPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  status: Maybe<FieldWrapper<Scalars['Boolean']>>;
};

/** Autogenerated input type of ToggleHall */
export type ToggleHallInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  hallId: Scalars['ID'];
};

/** Autogenerated return type of ToggleHall */
export type ToggleHallPayload = {
  __typename: 'ToggleHallPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  hall: Maybe<FieldWrapper<Hall>>;
};

/** Autogenerated input type of ToggleLock */
export type ToggleLockInput = {
  agentId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of ToggleLock */
export type ToggleLockPayload = {
  __typename: 'ToggleLockPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of ToggleLockdown */
export type ToggleLockdownInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  value: Scalars['Boolean'];
};

/** Autogenerated return type of ToggleLockdown */
export type ToggleLockdownPayload = {
  __typename: 'ToggleLockdownPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  status: Maybe<FieldWrapper<Scalars['Boolean']>>;
};

/** Autogenerated input type of ToggleUserLock */
export type ToggleUserLockInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  userId: Scalars['ID'];
};

/** Autogenerated return type of ToggleUserLock */
export type ToggleUserLockPayload = {
  __typename: 'ToggleUserLockPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  user: Maybe<FieldWrapper<User>>;
};

/** Autogenerated input type of TongBet */
export type TongBetInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 賠率 */
  oddsType: Scalars['String'];
  /** 押出金額 */
  player1Amount: Scalars['Float'];
  /** 押川金額 */
  player2Amount: Scalars['Float'];
  /** 押尾金額 */
  player3Amount: Scalars['Float'];
  /** 限紅組ID */
  tableLimitId: Scalars['ID'];
  tongRoomId: Scalars['ID'];
};

/** Autogenerated return type of TongBet */
export type TongBetPayload = {
  __typename: 'TongBetPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  currentTongBetRecord: Maybe<FieldWrapper<CurrentTongBetRecord>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  profile: Maybe<FieldWrapper<Profile>>;
};

export type TongBetRecord = BetInterface & {
  __typename: 'TongBetRecord';
  /** 投注編號 */
  betNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** City */
  city: Maybe<FieldWrapper<Scalars['String']>>;
  /** Country */
  country: Maybe<FieldWrapper<Scalars['String']>>;
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 派彩後餘額 */
  creditAfterWin: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 幣別 */
  currency: Maybe<FieldWrapper<Scalars['String']>>;
  /** 總輸贏 */
  diff: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 有效投注 */
  effectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** IP Address */
  ipAddress: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** Latitude */
  latitude: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Longitude */
  longitude: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押出金額 */
  player1Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押出輸贏金額 */
  player1DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押川金額 */
  player2Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押川輸贏金額 */
  player2DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押尾金額 */
  player3Amount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 押尾輸贏金額 */
  player3DiffAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** Region */
  region: Maybe<FieldWrapper<Scalars['String']>>;
  /** 總押注 */
  totalBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 勝點 */
  totalWinAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
  /** 輸贏 */
  winLossAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 退水 */
  winReturn: Maybe<FieldWrapper<Scalars['Float']>>;
};

export type TongGame = {
  __typename: 'TongGame';
  /** 關局時間 */
  closedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 莊家牌 */
  dealerCards: Maybe<Array<FieldWrapper<Scalars['Int']>>>;
  /** 莊家點數 */
  dealerPoints: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 遊戲局號 */
  gameNo: Maybe<FieldWrapper<Scalars['String']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 閒1是否贏 */
  player1Amount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒1牌 */
  player1Cards: Maybe<Array<FieldWrapper<Scalars['Int']>>>;
  /** 閒1點數 */
  player1Points: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒1是否贏 */
  player1Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 閒2是否贏 */
  player2Amount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒2牌 */
  player2Cards: Maybe<Array<FieldWrapper<Scalars['Int']>>>;
  /** 閒2點數 */
  player2Points: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒2是否贏 */
  player2Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 閒3是否贏 */
  player3Amount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 閒3牌 */
  player3Cards: Maybe<Array<FieldWrapper<Scalars['Int']>>>;
  /** 閒3點數 */
  player3Points: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 閒3是否贏 */
  player3Win: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 洗牌 */
  shuffle: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 開局時間 */
  startedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 狀態 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 房間 */
  tongRoom: Maybe<FieldWrapper<TongRoom>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 影片 */
  video: Maybe<FieldWrapper<Scalars['String']>>;
};

export type TongRoom = {
  __typename: 'TongRoom';
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 正在進行的遊戲 */
  currentTongGame: Maybe<FieldWrapper<TongGame>>;
  /** 遊戲結果 */
  gameResults: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** 荷官 */
  girl: Maybe<FieldWrapper<Girl>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 房名 */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 狀態 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 主視訊key */
  streamKey: Maybe<FieldWrapper<Scalars['String']>>;
  /** 主視訊Name */
  streamName: Maybe<FieldWrapper<Scalars['String']>>;
  /** 額外鏡位 */
  streams: Maybe<Array<FieldWrapper<Stream>>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 等待下注時間 */
  waitingBetSeconds: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type TongRoomCollection = {
  __typename: 'TongRoomCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<TongRoom>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of TongShuffle */
export type TongShuffleInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  roomId: Scalars['ID'];
};

/** Autogenerated return type of TongShuffle */
export type TongShufflePayload = {
  __typename: 'TongShufflePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of TransferChildren */
export type TransferChildrenInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  fromAgentId: Scalars['ID'];
  targetAgentId: Scalars['ID'];
};

/** Autogenerated return type of TransferChildren */
export type TransferChildrenPayload = {
  __typename: 'TransferChildrenPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UnlikeGirl */
export type UnlikeGirlInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 荷官 ID */
  girlId: Scalars['ID'];
};

/** Autogenerated return type of UnlikeGirl */
export type UnlikeGirlPayload = {
  __typename: 'UnlikeGirlPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  girl: FieldWrapper<Girl>;
};

/** Autogenerated input type of UnlikeStreamer */
export type UnlikeStreamerInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  streamerId: Scalars['ID'];
};

/** Autogenerated return type of UnlikeStreamer */
export type UnlikeStreamerPayload = {
  __typename: 'UnlikeStreamerPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  streamer: FieldWrapper<Streamer>;
};

/** Autogenerated input type of UpdateAds */
export type UpdateAdsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  images: Array<Scalars['String']>;
};

/** Autogenerated return type of UpdateAds */
export type UpdateAdsPayload = {
  __typename: 'UpdateAdsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  status: Maybe<FieldWrapper<Scalars['Boolean']>>;
};

/** Autogenerated input type of UpdateAgentAd */
export type UpdateAgentAdInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  images: Array<Scalars['String']>;
};

/** Autogenerated return type of UpdateAgentAd */
export type UpdateAgentAdPayload = {
  __typename: 'UpdateAgentAdPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  status: Maybe<FieldWrapper<Scalars['Boolean']>>;
};

/** Autogenerated input type of UpdateAgent */
export type UpdateAgentInput = {
  /** ID */
  agentId: Scalars['ID'];
  /** 百家佔成 */
  baccaratShareProfitRate: Scalars['Float'];
  /** 百家洗碼比 */
  baccaratXimaRate: Scalars['Float'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 用戶名 */
  name: Scalars['String'];
  /** 牛牛佔成 */
  niuniuShareProfitRate: Scalars['Float'];
  /** 牛牛洗碼比 */
  niuniuXimaRate: Scalars['Float'];
  /** 密碼 */
  password?: InputMaybe<Scalars['String']>;
  /** 密碼確認 */
  passwordConfirmation?: InputMaybe<Scalars['String']>;
  /** 帳號 */
  username: Scalars['String'];
};

/** Autogenerated input type of UpdateAgentPassword */
export type UpdateAgentPasswordInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  password: Scalars['String'];
};

/** Autogenerated return type of UpdateAgentPassword */
export type UpdateAgentPasswordPayload = {
  __typename: 'UpdateAgentPasswordPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated return type of UpdateAgent */
export type UpdateAgentPayload = {
  __typename: 'UpdateAgentPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateAnnoncement */
export type UpdateAnnoncementInput = {
  annoncementId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  content: Scalars['String'];
  targetType: Scalars['String'];
};

/** Autogenerated return type of UpdateAnnoncement */
export type UpdateAnnoncementPayload = {
  __typename: 'UpdateAnnoncementPayload';
  annoncement: Maybe<FieldWrapper<Annoncement>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateBaccaratCard */
export type UpdateBaccaratCardInput = {
  /** 牌 */
  card: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 房間ID */
  roomId: Scalars['ID'];
};

/** Autogenerated return type of UpdateBaccaratCard */
export type UpdateBaccaratCardPayload = {
  __typename: 'UpdateBaccaratCardPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateBaccaratCards */
export type UpdateBaccaratCardsInput = {
  baccaratRoomId: Scalars['ID'];
  cards: Array<Scalars['Int']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  target: Scalars['String'];
};

/** Autogenerated return type of UpdateBaccaratCards */
export type UpdateBaccaratCardsPayload = {
  __typename: 'UpdateBaccaratCardsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateBaccaratGameResult */
export type UpdateBaccaratGameResultInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  dealerCards: Array<Scalars['Int']>;
  gameId: Scalars['ID'];
  playerCards: Array<Scalars['Int']>;
};

/** Autogenerated return type of UpdateBaccaratGameResult */
export type UpdateBaccaratGameResultPayload = {
  __typename: 'UpdateBaccaratGameResultPayload';
  baccaratGame: Maybe<FieldWrapper<BaccaratGame>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateBaccaratRoom */
export type UpdateBaccaratRoomInput = {
  /** a */
  a?: InputMaybe<Scalars['Float']>;
  /** 賭桌傾斜角度 */
  angle?: InputMaybe<Scalars['Int']>;
  /** b */
  b?: InputMaybe<Scalars['Int']>;
  /** 房間ID */
  baccaratRoomId: Scalars['ID'];
  /** 大賠率 */
  bigOdds?: InputMaybe<Scalars['Float']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 莊賠率 */
  dealerOdds?: InputMaybe<Scalars['Float']>;
  /** 莊對賠率 */
  dealerPairOdds?: InputMaybe<Scalars['Float']>;
  /** g */
  g?: InputMaybe<Scalars['Int']>;
  /** 荷官 */
  girlId?: InputMaybe<Scalars['ID']>;
  /** 延遲 */
  latency?: InputMaybe<Scalars['Float']>;
  /** 本注最大下注量 */
  mainLimit?: InputMaybe<Scalars['Float']>;
  /** 房間名稱 */
  name?: InputMaybe<Scalars['String']>;
  /** 對子最大下注量 */
  pairLimit?: InputMaybe<Scalars['Float']>;
  /** 閒賠率 */
  playerOdds?: InputMaybe<Scalars['Float']>;
  /** 閒對賠率 */
  playerPairOdds?: InputMaybe<Scalars['Float']>;
  /** r */
  r?: InputMaybe<Scalars['Int']>;
  /** 小賠率 */
  smallOdds?: InputMaybe<Scalars['Float']>;
  /** 房間狀態 */
  status?: InputMaybe<Scalars['String']>;
  /** 幸運6賠率 */
  super6Odds?: InputMaybe<Scalars['Float']>;
  /** 和最大下注量 */
  tieLimit?: InputMaybe<Scalars['Float']>;
  /** 和賠率 */
  tieOdds?: InputMaybe<Scalars['Float']>;
  /** 等待下注秒數 */
  waitingBetSeconds?: InputMaybe<Scalars['Int']>;
};

/** Autogenerated return type of UpdateBaccaratRoom */
export type UpdateBaccaratRoomPayload = {
  __typename: 'UpdateBaccaratRoomPayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateBaccaratRoomPosition */
export type UpdateBaccaratRoomPositionInput = {
  /** 房間ID */
  baccaratRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 位置 */
  rowOrderPosition: Scalars['Int'];
};

/** Autogenerated return type of UpdateBaccaratRoomPosition */
export type UpdateBaccaratRoomPositionPayload = {
  __typename: 'UpdateBaccaratRoomPositionPayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateBaccaratRound */
export type UpdateBaccaratRoundInput = {
  /** 房間ID */
  baccaratRoomId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 更新資訊 */
  status: Scalars['String'];
};

/** Autogenerated return type of UpdateBaccaratRound */
export type UpdateBaccaratRoundPayload = {
  __typename: 'UpdateBaccaratRoundPayload';
  baccaratRoom: Maybe<FieldWrapper<BaccaratRoom>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateBaccaratThirdCard */
export type UpdateBaccaratThirdCardInput = {
  baccaratRoomId: Scalars['ID'];
  card: Scalars['Int'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  target: Scalars['String'];
};

/** Autogenerated return type of UpdateBaccaratThirdCard */
export type UpdateBaccaratThirdCardPayload = {
  __typename: 'UpdateBaccaratThirdCardPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateBotAgentUsernames */
export type UpdateBotAgentUsernamesInput = {
  botAgentUsernames: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateBotAgentUsernames */
export type UpdateBotAgentUsernamesPayload = {
  __typename: 'UpdateBotAgentUsernamesPayload';
  botAgentUsernames: Maybe<FieldWrapper<Scalars['String']>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
};

/** Autogenerated input type of UpdateBotTime */
export type UpdateBotTimeInput = {
  botEndTime: Scalars['String'];
  botStartTime: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateBotTime */
export type UpdateBotTimePayload = {
  __typename: 'UpdateBotTimePayload';
  botEndTime: Maybe<FieldWrapper<Scalars['String']>>;
  botStartTime: Maybe<FieldWrapper<Scalars['String']>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
};

/** Autogenerated input type of UpdateCallbacks */
export type UpdateCallbacksInput = {
  betUrl?: InputMaybe<Scalars['String']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  depositUrl?: InputMaybe<Scalars['String']>;
  loginUrl?: InputMaybe<Scalars['String']>;
  /** platform ID */
  platformId: Scalars['ID'];
  verifyUrl?: InputMaybe<Scalars['String']>;
  winUrl?: InputMaybe<Scalars['String']>;
  withdrawUrl?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateCallbacks */
export type UpdateCallbacksPayload = {
  __typename: 'UpdateCallbacksPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  platform: Maybe<FieldWrapper<Platform>>;
};

/** Autogenerated input type of UpdateCard */
export type UpdateCardInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** Game ID */
  gameId: Scalars['ID'];
  /** RFID */
  rfid: Scalars['String'];
};

/** Autogenerated return type of UpdateCard */
export type UpdateCardPayload = {
  __typename: 'UpdateCardPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  game: Maybe<FieldWrapper<NiuGame>>;
};

/** Autogenerated input type of UpdateCards */
export type UpdateCardsInput = {
  /** 牌 */
  cards: Array<Scalars['Int']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** ID */
  id: Scalars['ID'];
};

/** Autogenerated return type of UpdateCards */
export type UpdateCardsPayload = {
  __typename: 'UpdateCardsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  room: Maybe<FieldWrapper<Room>>;
};

/** Autogenerated input type of UpdateChild */
export type UpdateChildInput = {
  agentId: Scalars['ID'];
  baccaratShareProfitRate?: InputMaybe<Scalars['Float']>;
  baccaratXimaRate?: InputMaybe<Scalars['Float']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  niuniuShareProfitRate?: InputMaybe<Scalars['Float']>;
  niuniuXimaRate?: InputMaybe<Scalars['Float']>;
  password?: InputMaybe<Scalars['String']>;
  passwordConfirmation?: InputMaybe<Scalars['String']>;
  tableLimitIds?: InputMaybe<Array<Scalars['ID']>>;
  username?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateChild */
export type UpdateChildPayload = {
  __typename: 'UpdateChildPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateDice */
export type UpdateDiceInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 骰子點數 */
  dice: Scalars['Int'];
  /** Game ID */
  gameId: Scalars['ID'];
};

/** Autogenerated return type of UpdateDice */
export type UpdateDicePayload = {
  __typename: 'UpdateDicePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  game: Maybe<FieldWrapper<NiuGame>>;
};

/** Autogenerated input type of UpdateDisabledChatUsernames */
export type UpdateDisabledChatUsernamesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  usernames: Scalars['String'];
};

/** Autogenerated return type of UpdateDisabledChatUsernames */
export type UpdateDisabledChatUsernamesPayload = {
  __typename: 'UpdateDisabledChatUsernamesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  disabledChatUsernames: Maybe<FieldWrapper<Scalars['String']>>;
};

/** Autogenerated input type of UpdateFullChild */
export type UpdateFullChildInput = {
  agentId: Scalars['ID'];
  baccaratShareProfitRate?: InputMaybe<Scalars['Float']>;
  baccaratXimaRate?: InputMaybe<Scalars['Float']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  passwordConfirmation?: InputMaybe<Scalars['String']>;
  tableLimitIds?: InputMaybe<Array<Scalars['ID']>>;
  username?: InputMaybe<Scalars['String']>;
  winLimit?: InputMaybe<Scalars['Float']>;
};

/** Autogenerated return type of UpdateFullChild */
export type UpdateFullChildPayload = {
  __typename: 'UpdateFullChildPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateGameStatus */
export type UpdateGameStatusInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 房間ID */
  gameId: Scalars['ID'];
  /** 狀態 */
  status: Scalars['String'];
};

/** Autogenerated return type of UpdateGameStatus */
export type UpdateGameStatusPayload = {
  __typename: 'UpdateGameStatusPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  currentGame: Maybe<FieldWrapper<NiuGame>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateGirl */
export type UpdateGirlInput = {
  /** 頭像 */
  avatar?: InputMaybe<Scalars['String']>;
  /** 上圍 */
  bust?: InputMaybe<Scalars['String']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 星座 */
  constellation?: InputMaybe<Scalars['String']>;
  /** girl id */
  girlId: Scalars['ID'];
  /** 身高 */
  height?: InputMaybe<Scalars['Float']>;
  /** 是否隱藏 */
  hidden?: InputMaybe<Scalars['Boolean']>;
  /** 下圍 */
  hips?: InputMaybe<Scalars['Float']>;
  /** 興趣 */
  hobby?: InputMaybe<Scalars['String']>;
  /** 名稱 */
  name: Scalars['String'];
  /** 中圍 */
  waist?: InputMaybe<Scalars['Float']>;
  /** 體重 */
  weight?: InputMaybe<Scalars['Float']>;
  /** 下班時間 */
  workingEndAt?: InputMaybe<Scalars['String']>;
  /** 上班時間 */
  workingStartAt?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateGirl */
export type UpdateGirlPayload = {
  __typename: 'UpdateGirlPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  girl: Maybe<FieldWrapper<Girl>>;
};

/** Autogenerated input type of UpdateHall */
export type UpdateHallInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 網域 */
  domain: Scalars['String'];
  hallId: Scalars['ID'];
  /** 開房最大數量 */
  maxRoomsCount: Scalars['String'];
  /** 廳名稱 */
  name: Scalars['String'];
  /** 密碼 */
  password?: InputMaybe<Scalars['String']>;
  /** 確認密碼 */
  passwordConfirmation?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateHall */
export type UpdateHallPayload = {
  __typename: 'UpdateHallPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  hall: Maybe<FieldWrapper<Hall>>;
};

/** Autogenerated input type of UpdateLastSeen */
export type UpdateLastSeenInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** Room ID */
  roomId: Scalars['ID'];
};

/** Autogenerated return type of UpdateLastSeen */
export type UpdateLastSeenPayload = {
  __typename: 'UpdateLastSeenPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  status: Maybe<FieldWrapper<Scalars['String']>>;
};

/** Autogenerated input type of UpdatePlatform */
export type UpdatePlatformInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  maxBet: Scalars['Float'];
  minBet: Scalars['Float'];
  name: Scalars['String'];
  password?: InputMaybe<Scalars['String']>;
  passwordConfirmation?: InputMaybe<Scalars['String']>;
  platformId: Scalars['ID'];
};

/** Autogenerated return type of UpdatePlatform */
export type UpdatePlatformPayload = {
  __typename: 'UpdatePlatformPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  platform: Maybe<FieldWrapper<Platform>>;
};

/** Autogenerated input type of UpdatePlayerTableLimit */
export type UpdatePlayerTableLimitInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  playerId: Scalars['ID'];
  tableLimitMax: Scalars['Int'];
  tableLimitMin: Scalars['Int'];
};

/** Autogenerated return type of UpdatePlayerTableLimit */
export type UpdatePlayerTableLimitPayload = {
  __typename: 'UpdatePlayerTableLimitPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  player: Maybe<FieldWrapper<User>>;
};

/** Autogenerated input type of UpdatePool */
export type UpdatePoolInput = {
  amount: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdatePool */
export type UpdatePoolPayload = {
  __typename: 'UpdatePoolPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  value: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of UpdateProfile */
export type UpdateProfileInput = {
  /** 頭像 */
  avatar?: InputMaybe<Scalars['String']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** confirm new password */
  confirmNewPassword?: InputMaybe<Scalars['String']>;
  /** 追龍顆數 */
  dragonCount?: InputMaybe<Scalars['Int']>;
  /** Line Notify Token */
  lineNotifyToken?: InputMaybe<Scalars['String']>;
  /** new password */
  newPassword?: InputMaybe<Scalars['String']>;
  /** nickname */
  nickname?: InputMaybe<Scalars['String']>;
  /** password */
  oldPassword?: InputMaybe<Scalars['String']>;
  /** username */
  username?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateProfile */
export type UpdateProfilePayload = {
  __typename: 'UpdateProfilePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  profile: Maybe<FieldWrapper<Profile>>;
};

/** Autogenerated input type of UpdateRoom */
export type UpdateRoomInput = {
  /** a */
  a?: InputMaybe<Scalars['Float']>;
  /** 賭桌傾斜角度 */
  angle?: InputMaybe<Scalars['Int']>;
  /** b */
  b?: InputMaybe<Scalars['Int']>;
  /** 是否可排莊 */
  canBeDealer?: InputMaybe<Scalars['Boolean']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 排莊最低餘額限制 */
  dealerMinBalance?: InputMaybe<Scalars['Int']>;
  /** 水錢 */
  fee?: InputMaybe<Scalars['Int']>;
  /** g */
  g?: InputMaybe<Scalars['Int']>;
  /** 荷官 */
  girlId?: InputMaybe<Scalars['ID']>;
  /** 房間ID */
  id: Scalars['ID'];
  /** 測試模式 */
  isTesting?: InputMaybe<Scalars['Boolean']>;
  /** 單注上限 */
  maxBet?: InputMaybe<Scalars['Int']>;
  /** 單門押注上限 */
  maxSinglePlayerBet?: InputMaybe<Scalars['Int']>;
  /** 單注下限 */
  minBet?: InputMaybe<Scalars['Int']>;
  /** 房間名稱 */
  name?: InputMaybe<Scalars['String']>;
  /** 牛7賠率 */
  odds7?: InputMaybe<Scalars['Int']>;
  /** 牛8賠率 */
  odds8?: InputMaybe<Scalars['Int']>;
  /** 牛9賠率 */
  odds9?: InputMaybe<Scalars['Int']>;
  /** 牛牛賠率 */
  odds20?: InputMaybe<Scalars['Int']>;
  /** 五公賠率 */
  odds50?: InputMaybe<Scalars['Int']>;
  /** 開牌秒數 */
  openingSeconds?: InputMaybe<Scalars['Int']>;
  /** r */
  r?: InputMaybe<Scalars['Int']>;
  /** 下注秒數 */
  waitingBetSeconds?: InputMaybe<Scalars['Int']>;
};

/** Autogenerated return type of UpdateRoom */
export type UpdateRoomPayload = {
  __typename: 'UpdateRoomPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  room: Maybe<FieldWrapper<Room>>;
};

/** Autogenerated input type of UpdateRoomStatus */
export type UpdateRoomStatusInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** 房間ID */
  id: Scalars['ID'];
  /** 狀態 */
  status: Scalars['String'];
};

/** Autogenerated return type of UpdateRoomStatus */
export type UpdateRoomStatusPayload = {
  __typename: 'UpdateRoomStatusPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  room: Maybe<FieldWrapper<Room>>;
};

/** Autogenerated input type of UpdateRoomText */
export type UpdateRoomTextInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  text: Scalars['String'];
};

/** Autogenerated return type of UpdateRoomText */
export type UpdateRoomTextPayload = {
  __typename: 'UpdateRoomTextPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  status: Maybe<FieldWrapper<Scalars['Boolean']>>;
};

/** Autogenerated input type of UpdateSensitiveWords */
export type UpdateSensitiveWordsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  words: Scalars['String'];
};

/** Autogenerated return type of UpdateSensitiveWords */
export type UpdateSensitiveWordsPayload = {
  __typename: 'UpdateSensitiveWordsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  sensitiveWords: Maybe<FieldWrapper<Scalars['String']>>;
};

/** Autogenerated input type of UpdateSettings */
export type UpdateSettingsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  currentPlay?: InputMaybe<Scalars['Int']>;
  micOn?: InputMaybe<Scalars['Boolean']>;
  micVolume?: InputMaybe<Scalars['Float']>;
  musicOn?: InputMaybe<Scalars['Boolean']>;
  musicVolume?: InputMaybe<Scalars['Float']>;
  repeatMode?: InputMaybe<Scalars['String']>;
  selectedChip?: InputMaybe<Scalars['Int']>;
  selectedChips?: InputMaybe<Array<Scalars['Int']>>;
  soundOn?: InputMaybe<Scalars['Boolean']>;
  soundVolume?: InputMaybe<Scalars['Float']>;
  tableLimitId?: InputMaybe<Scalars['String']>;
  volume?: InputMaybe<Scalars['Float']>;
};

/** Autogenerated return type of UpdateSettings */
export type UpdateSettingsPayload = {
  __typename: 'UpdateSettingsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  profile: Maybe<FieldWrapper<Profile>>;
};

/** Autogenerated input type of UpdateStreamerDisabled */
export type UpdateStreamerDisabledInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  disabled: Scalars['Boolean'];
  streamerId: Scalars['ID'];
};

/** Autogenerated return type of UpdateStreamerDisabled */
export type UpdateStreamerDisabledPayload = {
  __typename: 'UpdateStreamerDisabledPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  streamer: Maybe<FieldWrapper<Streamer>>;
};

/** Autogenerated input type of UpdateStreamer */
export type UpdateStreamerInput = {
  avatar?: InputMaybe<Scalars['JSON']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  roomText?: InputMaybe<Scalars['String']>;
};

/** Autogenerated input type of UpdateStreamerOnline */
export type UpdateStreamerOnlineInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  online: Scalars['Boolean'];
};

/** Autogenerated return type of UpdateStreamerOnline */
export type UpdateStreamerOnlinePayload = {
  __typename: 'UpdateStreamerOnlinePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  currentStreamer: Maybe<FieldWrapper<Streamer>>;
};

/** Autogenerated return type of UpdateStreamer */
export type UpdateStreamerPayload = {
  __typename: 'UpdateStreamerPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  streamer: Maybe<FieldWrapper<Streamer>>;
};

/** Autogenerated input type of UpdateStreamerRoom */
export type UpdateStreamerRoomInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id: Scalars['ID'];
};

/** Autogenerated return type of UpdateStreamerRoom */
export type UpdateStreamerRoomPayload = {
  __typename: 'UpdateStreamerRoomPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  currentStreamer: Maybe<FieldWrapper<Streamer>>;
};

/** Autogenerated input type of UpdateStreamerRoomText */
export type UpdateStreamerRoomTextInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id: Scalars['ID'];
  roomText?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateStreamerRoomText */
export type UpdateStreamerRoomTextPayload = {
  __typename: 'UpdateStreamerRoomTextPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  streamer: Maybe<FieldWrapper<Streamer>>;
};

/** Autogenerated input type of UpdateStreamersImage */
export type UpdateStreamersImageInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  images: Array<Scalars['String']>;
};

/** Autogenerated return type of UpdateStreamersImage */
export type UpdateStreamersImagePayload = {
  __typename: 'UpdateStreamersImagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  status: Maybe<FieldWrapper<Scalars['Boolean']>>;
};

/** Autogenerated input type of UpdateSubAccount */
export type UpdateSubAccountInput = {
  agentId: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  password?: InputMaybe<Scalars['String']>;
  passwordConfirmation?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateSubAccount */
export type UpdateSubAccountPayload = {
  __typename: 'UpdateSubAccountPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateTicket */
export type UpdateTicketInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  ticketId: Scalars['ID'];
};

/** Autogenerated return type of UpdateTicket */
export type UpdateTicketPayload = {
  __typename: 'UpdateTicketPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  ticket: Maybe<FieldWrapper<Ticket>>;
};

/** Autogenerated input type of UpdateTongCards */
export type UpdateTongCardsInput = {
  cards: Array<Scalars['Int']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  target: Scalars['String'];
  tongRoomId: Scalars['ID'];
};

/** Autogenerated return type of UpdateTongCards */
export type UpdateTongCardsPayload = {
  __typename: 'UpdateTongCardsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

/** Autogenerated input type of UpdateTongRoom */
export type UpdateTongRoomInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  tongRoomId: Scalars['ID'];
  waitingBetSeconds?: InputMaybe<Scalars['Int']>;
};

/** Autogenerated return type of UpdateTongRoom */
export type UpdateTongRoomPayload = {
  __typename: 'UpdateTongRoomPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  tongRoom: Maybe<FieldWrapper<TongRoom>>;
};

/** Autogenerated input type of UpdateTongRound */
export type UpdateTongRoundInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  status: Scalars['String'];
  tongRoomId: Scalars['ID'];
};

/** Autogenerated return type of UpdateTongRound */
export type UpdateTongRoundPayload = {
  __typename: 'UpdateTongRoundPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  tongRoom: Maybe<FieldWrapper<TongRoom>>;
};

/** Autogenerated input type of UpdateWithdrawStatus */
export type UpdateWithdrawStatusInput = {
  action: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  withdrawId: Scalars['ID'];
};

/** Autogenerated return type of UpdateWithdrawStatus */
export type UpdateWithdrawStatusPayload = {
  __typename: 'UpdateWithdrawStatusPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  withdrawRecord: Maybe<FieldWrapper<WithdrawRecord>>;
};

/** Autogenerated input type of UpdateWorldCupRoom */
export type UpdateWorldCupRoomInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  endAt: Scalars['ISO8601DateTime'];
  roomId: Scalars['ID'];
  startAt: Scalars['ISO8601DateTime'];
  status: Scalars['String'];
  title: Scalars['String'];
  username?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateWorldCupRoom */
export type UpdateWorldCupRoomPayload = {
  __typename: 'UpdateWorldCupRoomPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  worldCupRoom: Maybe<FieldWrapper<WorldCupRoom>>;
};

export type User = SourceInterface & {
  __typename: 'User';
  /** 代理 */
  agent: Maybe<FieldWrapper<Agent>>;
  /** Auth Token */
  authToken: Maybe<FieldWrapper<Scalars['String']>>;
  /** 頭像 */
  avatar: Maybe<FieldWrapper<Scalars['String']>>;
  /** 百家最大下注 */
  baccaratMaxBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家最小下注 */
  baccaratMinBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家洗碼比 */
  baccaratXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 餘額 */
  balance: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 信用額度 */
  creditBalance: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 信用額度餘額 */
  creditBalanceLeft: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 最近一次登入時間 */
  currentSignInAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 最後登入IP */
  currentSignInIp: Maybe<FieldWrapper<Scalars['JSON']>>;
  /** Email */
  email: Maybe<FieldWrapper<Scalars['String']>>;
  /** 是否在介面隱藏 */
  hide: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 是否隱藏紅利 */
  hideWinPoints: Maybe<FieldWrapper<Scalars['Boolean']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 上層代理 */
  introducer: Maybe<FieldWrapper<User>>;
  /** 上次登入IP */
  lastLoginIp: Maybe<FieldWrapper<Ip>>;
  /** 是否禁用 */
  locked: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** name */
  name: Maybe<FieldWrapper<Scalars['String']>>;
  /** 暱稱 */
  nickname: Maybe<FieldWrapper<Scalars['String']>>;
  /** 牛牛最大下注 */
  niuniuMaxBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛最小下注 */
  niuniuMinBet: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛洗碼比 */
  niuniuXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 備註名稱 */
  note: Maybe<FieldWrapper<Scalars['String']>>;
  /** 備註 */
  noteName: Maybe<FieldWrapper<Scalars['String']>>;
  /** 代理 */
  platform: Maybe<FieldWrapper<Platform>>;
  /** 平台是否關閉成人連結 */
  platformDisableAdult: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 平台是否關閉成人連結 */
  platformDisableCustomerService: Maybe<FieldWrapper<Scalars['Boolean']>>;
  /** 推薦碼 */
  referralCode: Maybe<FieldWrapper<Scalars['String']>>;
  /** 下層會員 */
  referrals: Maybe<Array<FieldWrapper<User>>>;
  /** 身分 */
  role: Maybe<FieldWrapper<Scalars['String']>>;
  /** 最近一次登入使用相同IP的用戶 */
  sameIpUsers: Maybe<Array<FieldWrapper<User>>>;
  /** 登入次數 */
  signInCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 限紅最大值 */
  tableLimitMax: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 限紅最小值 */
  tableLimitMin: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總下注金額 */
  totalBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 累積有效投注 */
  totalEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 累積有效投注洗碼 */
  totalEffectiveXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總勝點 */
  totalWinAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 總退水 */
  totalXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 使用者名稱 */
  username: Maybe<FieldWrapper<Scalars['String']>>;
  /** uuid */
  uuid: Maybe<FieldWrapper<Scalars['String']>>;
  /** VIP 等級 */
  vip: Maybe<FieldWrapper<Scalars['String']>>;
  /** 贏上限 */
  winLimit: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 輸贏報表 */
  winLossReport: Maybe<FieldWrapper<UserWinLoss>>;
  /** 洗碼方式 */
  ximaWay: Maybe<FieldWrapper<Scalars['String']>>;
};


export type UserwinLossReportArgs = {
  endDate: Scalars['ISO8601DateTime'];
  startDate: Scalars['ISO8601DateTime'];
};

export type UserCollection = {
  __typename: 'UserCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 會員 */
  records: Maybe<Array<FieldWrapper<User>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of UserReadTicketMessages */
export type UserReadTicketMessagesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  ticketId: Scalars['ID'];
};

/** Autogenerated return type of UserReadTicketMessages */
export type UserReadTicketMessagesPayload = {
  __typename: 'UserReadTicketMessagesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  ok: Maybe<FieldWrapper<Scalars['Boolean']>>;
};

export type UserWinLoss = {
  __typename: 'UserWinLoss';
  /** 百家投注金額 */
  baccaratBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家有效投注 */
  baccaratEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家總金額 */
  baccaratTotalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 輸贏 */
  baccaratWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 輸贏比 */
  baccaratWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 百家洗碼佣金 */
  baccaratXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家洗碼比 */
  baccaratXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** 牛牛投注金額 */
  niuniuBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛有效投注 */
  niuniuEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家總金額 */
  niuniuTotalAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 輸贏 */
  niuniuWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 輸贏比 */
  niuniuWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 牛牛洗碼佣金 */
  niuniuXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 牛牛洗碼比 */
  niuniuXimaRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計投注金額 */
  totalBetAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計有效投注 */
  totalEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計輸贏 */
  totalWinLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 小計輸贏比 */
  totalWinLossRate: Maybe<FieldWrapper<Scalars['String']>>;
  /** 小計洗碼佣金 */
  totalXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 用戶 */
  user: Maybe<FieldWrapper<User>>;
};

export type UserWinLossReport = {
  __typename: 'UserWinLossReport';
  /** 百家投注金額 */
  betAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家有效投注 */
  effectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 禮物 */
  giftsAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  id: FieldWrapper<Scalars['ID']>;
  username: FieldWrapper<Scalars['String']>;
  /** 百家輸贏 */
  winLoss: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家輸贏比 */
  winLossRate: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家洗碼佣金 */
  ximaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 百家洗碼比 */
  ximaRate: Maybe<FieldWrapper<Scalars['Float']>>;
};

/** Autogenerated input type of VerifyCode */
export type VerifyCodeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** code */
  code: Scalars['String'];
  /** phone */
  phone: Scalars['String'];
};

/** Autogenerated return type of VerifyCode */
export type VerifyCodePayload = {
  __typename: 'VerifyCodePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  /** ok */
  ok: FieldWrapper<Scalars['Boolean']>;
};

export type Wallet = {
  __typename: 'Wallet';
  adminUser: Maybe<FieldWrapper<AdminUser>>;
  /** 餘額 */
  balance: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 上分 */
  creditBalance: Maybe<FieldWrapper<Scalars['Float']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 有效投注 */
  totalEffectiveAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 有效投注 */
  totalEffectiveXimaAmount: Maybe<FieldWrapper<Scalars['Float']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type WalletAddress = {
  __typename: 'WalletAddress';
  /** 錢包地址 */
  address: Maybe<FieldWrapper<Scalars['String']>>;
  /** 錢包類型 */
  addressType: Maybe<FieldWrapper<Scalars['String']>>;
  /** 管理員 */
  adminUser: Maybe<FieldWrapper<AdminUser>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type WalletAddressCollection = {
  __typename: 'WalletAddressCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<WalletAddress>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of WelcomeMessage */
export type WelcomeMessageInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  roomId: Scalars['ID'];
  roomType: Scalars['String'];
};

/** Autogenerated return type of WelcomeMessage */
export type WelcomeMessagePayload = {
  __typename: 'WelcomeMessagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Array<FieldWrapper<ModelError>>;
};

export type Withdraw = RecordInterface & {
  __typename: 'Withdraw';
  /** created_at */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  id: FieldWrapper<Scalars['ID']>;
  /** info */
  info: Maybe<FieldWrapper<Scalars['JSON']>>;
  type: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  user: Maybe<FieldWrapper<User>>;
};

/** Autogenerated input type of Withdraw */
export type WithdrawInput = {
  agentId: Scalars['ID'];
  amount: Scalars['Float'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of Withdraw */
export type WithdrawPayload = {
  __typename: 'WithdrawPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
};

export type WithdrawRecord = {
  __typename: 'WithdrawRecord';
  /** 金额 */
  amount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 账户名 */
  bankAccountName: Maybe<FieldWrapper<Scalars['String']>>;
  /** 账户 */
  bankAccountNumber: Maybe<FieldWrapper<Scalars['String']>>;
  /** 银行代码 */
  bankCode: Maybe<FieldWrapper<Scalars['String']>>;
  /** 分行 */
  branch: Maybe<FieldWrapper<Scalars['String']>>;
  /** 城市 */
  city: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  /** 省份 */
  province: Maybe<FieldWrapper<Scalars['String']>>;
  /** 状态 */
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** 用户 */
  user: Maybe<FieldWrapper<User>>;
  /** HASH */
  withdrawNo: Maybe<FieldWrapper<Scalars['String']>>;
};

export type WithdrawRecordCollection = {
  __typename: 'WithdrawRecordCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 提現紀錄 */
  records: Maybe<Array<FieldWrapper<WithdrawRecord>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

/** Autogenerated input type of WithdrawUser */
export type WithdrawUserInput = {
  amount: Scalars['Float'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  userId: Scalars['ID'];
};

/** Autogenerated return type of WithdrawUser */
export type WithdrawUserPayload = {
  __typename: 'WithdrawUserPayload';
  agent: Maybe<FieldWrapper<Agent>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<FieldWrapper<Scalars['String']>>;
  errors: Maybe<Array<FieldWrapper<ModelError>>>;
  user: Maybe<FieldWrapper<User>>;
};

export type WorldCupRoom = {
  __typename: 'WorldCupRoom';
  /** Banner 圖片 */
  banner: Maybe<FieldWrapper<Scalars['String']>>;
  /** 建立時間 */
  createdAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  endAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  /** ID */
  id: FieldWrapper<Scalars['ID']>;
  startAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
  status: Maybe<FieldWrapper<Scalars['String']>>;
  /** 串流資訊 */
  stream: FieldWrapper<Stream>;
  /** 主播資訊 */
  streamer: Maybe<FieldWrapper<Streamer>>;
  title: Maybe<FieldWrapper<Scalars['String']>>;
  translatedStatus: Maybe<FieldWrapper<Scalars['String']>>;
  /** 更新時間 */
  updatedAt: Maybe<FieldWrapper<Scalars['ISO8601DateTime']>>;
};

export type WorldCupRoomCollection = {
  __typename: 'WorldCupRoomCollection';
  /** 目前筆數 */
  currentCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 目前所在頁 */
  currentPage: Maybe<FieldWrapper<Scalars['Int']>>;
  records: Maybe<Array<FieldWrapper<WorldCupRoom>>>;
  /** 總數 */
  totalCount: Maybe<FieldWrapper<Scalars['Int']>>;
  /** 總頁數 */
  totalPages: Maybe<FieldWrapper<Scalars['Int']>>;
};

export type GET_ANNOUNCEMENTSVariables = Exact<{ [key: string]: never; }>;


export type GET_ANNOUNCEMENTS = { annoncements: { __typename: 'AnnoncementCollection', records: Array<{ __typename: 'Annoncement', id: string, content: string | null, createdAt: any | null, updatedAt: any | null, targetType: string | null }> | null } | null };

export type GET_STREAMERSVariables = Exact<{ [key: string]: never; }>;


export type GET_STREAMERS = { streamers: Array<{ __typename: 'Streamer', avatar: string | null, id: string, likesCount: number, nickname: string, online: boolean, username: string, winRate: number }> };

export type GIRL_TYPE = { __typename: 'Girl', id: string, name: string | null, avatar: string | null };

export type GET_BACCARATROOMSVariables = Exact<{ [key: string]: never; }>;


export type GET_BACCARATROOMS = { activeBaccaratRooms: Array<{ __typename: 'BaccaratRoom', id: string, name: string | null, currentRoadsImage: string | null, waitingBetSeconds: number | null, roads: any | null, alertText: string | null, waitingText: string | null, zoomType: string | null, status: string | null, streamName: string | null, streamKey: string | null, girl: (
      { __typename: 'Girl' }
      & GIRL_TYPE
    ) | null, streams: Array<{ __typename: 'Stream', id: string, name: string | null, key: string | null }> | null, currentGame: { __typename: 'BaccaratGame', id: string, baccaratRoomId: string | null, playerWin: boolean | null, dealerWin: boolean | null, tieWin: boolean | null, playerPairWin: boolean | null, dealerPairWin: boolean | null, dealerPoints: number | null, playerPoints: number | null, gameNo: string | null, status: string | null, playerCards: Array<number> | null, dealerCards: Array<number> | null, shuffle: boolean | null, playerNeedAnother: boolean | null, dealerNeedAnother: boolean | null, dealerAmount: number | null, playerAmount: number | null, dealerPairAmount: number | null, playerPairAmount: number | null, tieAmount: number | null, super6Amount: number | null, updatedAt: any | null, endAt: any | null, targets: any | null } | null, currentBaccaratBetRecord: { __typename: 'CurrentBaccaratBetRecord', id: string, playerAmount: number | null, playerDiffAmount: number | null, dealerAmount: number | null, dealerDiffAmount: number | null, tieAmount: number | null, tieDiffAmount: number | null, playerPairAmount: number | null, playerPairDiffAmount: number | null, dealerPairAmount: number | null, dealerPairDiffAmount: number | null, totalAmount: number | null, totalDiffAmount: number | null, hasResult: boolean | null, winLossAmount: number | null, gameNo: string | null, roomName: string | null } | null }> | null };

export type GET_CURRENT_BACCARAT_ROOMVariables = Exact<{
  baccaratRoomId: Scalars['ID'];
}>;


export type GET_CURRENT_BACCARAT_ROOM = { baccaratRoom: { __typename: 'BaccaratRoom', roads: any | null, streamKey: string | null, streamName: string | null, status: string | null, girl: { __typename: 'Girl', id: string, name: string | null, avatar: string | null } | null, streams: Array<{ __typename: 'Stream', createdAt: any | null, id: string, key: string | null, name: string | null, updatedAt: any | null }> | null, currentGame: { __typename: 'BaccaratGame', id: string, baccaratRoomId: string | null, playerWin: boolean | null, dealerWin: boolean | null, tieWin: boolean | null, playerPairWin: boolean | null, dealerPairWin: boolean | null, dealerPoints: number | null, playerPoints: number | null, gameNo: string | null, status: string | null, playerCards: Array<number> | null, dealerCards: Array<number> | null, shuffle: boolean | null, playerNeedAnother: boolean | null, dealerNeedAnother: boolean | null, dealerAmount: number | null, playerAmount: number | null, dealerPairAmount: number | null, playerPairAmount: number | null, tieAmount: number | null, updatedAt: any | null, endAt: any | null, targets: any | null } | null, currentBaccaratBetRecord: { __typename: 'CurrentBaccaratBetRecord', id: string, playerAmount: number | null, playerDiffAmount: number | null, dealerAmount: number | null, dealerDiffAmount: number | null, tieAmount: number | null, tieDiffAmount: number | null, playerPairAmount: number | null, playerPairDiffAmount: number | null, dealerPairAmount: number | null, dealerPairDiffAmount: number | null, totalAmount: number | null, totalDiffAmount: number | null, hasResult: boolean | null, winLossAmount: number | null, gameNo: string | null, roomName: string | null } | null } | null };

export type GET_CURRENT_ROOM_STREAMVariables = Exact<{
  baccaratRoomId: Scalars['ID'];
}>;


export type GET_CURRENT_ROOM_STREAM = { baccaratRoom: { __typename: 'BaccaratRoom', name: string | null, waitingBetSeconds: number | null, streamName: string | null, streamKey: string | null, webhookUrl: string | null, zoomType: string | null, id: string, streams: Array<{ __typename: 'Stream', createdAt: any | null, id: string, key: string | null, name: string | null, updatedAt: any | null }> | null } | null };

export type GET_CURRENT_COUNTDOWNVariables = Exact<{
  baccaratRoomId: Scalars['ID'];
}>;


export type GET_CURRENT_COUNTDOWN = { baccaratRoom: { __typename: 'BaccaratRoom', id: string, latency: number | null, waitingBetSeconds: number | null, currentGame: { __typename: 'BaccaratGame', id: string, status: string | null, updatedAt: any | null, endAt: any | null } | null } | null };

export type CREATE_BACCARAT_BETVariables = Exact<{
  input: CreateBaccaratBetInput;
}>;


export type CREATE_BACCARAT_BET = { createBaccaratBet: { __typename: 'CreateBaccaratBetPayload', errors: Array<{ __typename: 'ModelError', attribute: string, message: string }> | null, wallet: { __typename: 'Wallet', id: string, balance: number | null } } | null };

export type CANCEL_BACCARAT_BETVariables = Exact<{
  input: CancelBaccaratBetInput;
}>;


export type CANCEL_BACCARAT_BET = { cancelBaccaratBet: { __typename: 'CancelBaccaratBetPayload', errors: Array<{ __typename: 'ModelError', attribute: string, message: string }> | null, wallet: { __typename: 'Wallet', id: string, balance: number | null, creditBalance: number | null, totalEffectiveAmount: number | null, totalEffectiveXimaAmount: number | null } } | null };

export type CREATE_BACCARAT_MESSAGEVariables = Exact<{
  input: CreateBaccaratMessageInput;
}>;


export type CREATE_BACCARAT_MESSAGE = { createBaccaratMessage: { __typename: 'CreateBaccaratMessagePayload', baccaratMessage: { __typename: 'BaccaratMessage', id: string, type: string | null, body: string | null, createdAt: any | null, gift: string | null, user: { __typename: 'User', id: string, username: string | null, avatar: string | null } | null } | null, errors: Array<{ __typename: 'ModelError', message: string, attribute: string }> | null } | null };

export type SEND_GIFTVariables = Exact<{
  input: SendGiftInput;
}>;


export type SEND_GIFT = { sendGift: { __typename: 'SendGiftPayload', errors: Array<{ __typename: 'ModelError', attribute: string, message: string }> | null } | null };

export type SEND_BACCARAT_GIFTVariables = Exact<{
  input: SendBaccaratGiftInput;
}>;


export type SEND_BACCARAT_GIFT = { sendBaccaratGift: { __typename: 'SendBaccaratGiftPayload', errors: Array<{ __typename: 'ModelError', message: string, attribute: string }> | null } | null };

export type GET_PROFILEVariables = Exact<{ [key: string]: never; }>;


export type GET_PROFILE = { profile: { __typename: 'Profile', id: string, balance: number | null, username: string | null, avatar: string | null, totalEffectiveAmount: number | null, dividend: number | null, nickname: string | null, creditBalance: number | null } | null };

export type GET_WALLETVariables = Exact<{ [key: string]: never; }>;


export type GET_WALLET = { wallet: { __typename: 'Wallet', id: string, balance: number | null, creditBalance: number | null, totalEffectiveAmount: number | null, totalEffectiveXimaAmount: number | null } | null };

export type GET_USERBETRECORDSVariables = Exact<{
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  startDate: Scalars['ISO8601DateTime'];
  endDate: Scalars['ISO8601DateTime'];
}>;


export type GET_USERBETRECORDS = { liveBaccaratBetRecords: { __typename: 'BaccaratBetRecordCollection', totalPages: number | null, currentPage: number | null, records: Array<{ __typename: 'BaccaratBetRecord', id: string, betNo: string | null, totalBet: number | null, winLossAmount: number | null, createdAt: any | null, totalWinAmount: number | null }> | null } | null };

export type GET_SENDGIFTRECORDSVariables = Exact<{
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  startDate: Scalars['ISO8601DateTime'];
  endDate: Scalars['ISO8601DateTime'];
}>;


export type GET_SENDGIFTRECORDS = { sendGiftRecords: { __typename: 'SendGiftRecordCollection', totalCount: number | null, totalPages: number | null, currentCount: number | null, currentPage: number | null, records: Array<{ __typename: 'SendGift', id: string, info: any | null, createdAt: any | null }> | null } | null };

export type createTrialUserVariables = Exact<{
  input: CreateTrialUserInput;
}>;


export type createTrialUser = { createTrialUser: { __typename: 'CreateTrialUserPayload', token: string | null } | null };

export type UPDATE_PROFILEVariables = Exact<{
  input: UpdateProfileInput;
}>;


export type UPDATE_PROFILE = { updateProfile: { __typename: 'UpdateProfilePayload', profile: { __typename: 'Profile', id: string, balance: number | null, username: string | null, avatar: string | null, totalEffectiveAmount: number | null, totalEffectiveXimaAmount: number | null, ximaTotal: number | null, winLimit: number | null, totalWinAmount: number | null, hideWinPoints: boolean | null, dividend: number | null, nickname: string | null, tableLimitMin: number | null, tableLimitMax: number | null, beta: boolean | null, isTrial: boolean, lineNotifyToken: string | null, dragonCount: number | null, jwtToken: string | null, platformDisableAdult: boolean | null, platformDisableCustomerService: boolean | null } | null, errors: Array<{ __typename: 'ModelError', message: string, attribute: string }> | null } | null };

export type getStreamerRankingVariables = Exact<{
  range: Scalars['String'];
}>;


export type getStreamerRanking = { newStreamerRanking: Array<{ __typename: 'Streamer', id: string, nickname: string, likesCount: number, avatar: string | null }> | null };

export type getUserRankingVariables = Exact<{
  type: Scalars['String'];
  range: Scalars['String'];
}>;


export type getUserRanking = { userRanking: any | null };

export type GET_ROOM_STREAMVariables = Exact<{
  baccaratRoomId: Scalars['ID'];
}>;


export type GET_ROOM_STREAM = { baccaratRoom: { __typename: 'BaccaratRoom', name: string | null, waitingBetSeconds: number | null, roads: any | null, streamName: string | null, streamKey: string | null, webhookUrl: string | null, zoomType: string | null, id: string, streams: Array<{ __typename: 'Stream', createdAt: any | null, id: string, key: string | null, name: string | null, updatedAt: any | null }> | null } | null };

export type StreamersVariables = Exact<{ [key: string]: never; }>;


export type Streamers = { streamers: Array<{ __typename: 'Streamer', avatar: string | null, id: string, likesCount: number, nickname: string, online: boolean, username: string, winRate: number, stream: { __typename: 'Stream', id: string, key: string | null, name: string | null } }> };

export type StreamerVariables = Exact<{
  id: Scalars['ID'];
}>;


export type Streamer = { streamer: { __typename: 'Streamer', avatar: string | null, id: string, likesCount: number, nickname: string, online: boolean, username: string, winRate: number, stream: { __typename: 'Stream', id: string, key: string | null, name: string | null } } };
